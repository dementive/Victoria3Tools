import os, re

# Exclusion keys to not read when looking for top level keys
exclusion_keys = {
	"#", "@", "modifier", "character_modifier", "if", "else", "elseif", "else_if", "\n", "can_have",
	"can_keep", "can_pass", "on_pass", "on_revoke", "should_start_with", "graphical_cultures", "pass_cost",
	"desc", "compatibility", "name", "opposites", "triggered_opinion", "icon", "random_list","limit", "random", 
	"potential", "abort", "chance", "on_potential", "on_start", "on_abort", "on_completion", "requires", "highlight",
	"allow", "bypass", "ai_chance", "trigger", "family", "male_names", "female_names", "stability", "raise_legion",
	"alternative_limit", "hidden_effect", "OR", "or", "prevented_by", "trigger_event", "current_ruler", "value"
}

def should_read(x,level=0):
	# Check if a line should be read
	y = x.split("#")[0]
	z = y.split("=")[0]
	return_bool = False
	if ("= {" in y and z.count("\t") + z.count("    ") == level and not z.strip() in exclusion_keys):
		return_bool = True
	w = y.find("=")
	if w != -1:
		w = y[0:w].rstrip()
		if "\t" not in w and " " not in w:
			return_bool = True

	return return_bool


def get_game_data():
	# Get game data for static lists

	def get_event_sound(file_path):
		""" Get sounds that are used in events """
		event_sounds = set()
		with open(file_path, "r") as fh:
			try:
				string = fh.read()
			except UnicodeDecodeError:
				return
		for line in string.splitlines():
			x = re.search("event:/SFX/Events.*\"", line)
			if x:
				event_sounds.add(x.group().replace("\"", ""))
		return event_sounds
		
	lamb = lambda x: should_read(x)

	event_sounds = set()
	EventVideos = list()

	for dirpath, dirnames, filenames in os.walk("C:\\Program Files (x86)\\Steam\\steamapps\\common\\Victoria 3\\game"):
		for filename in [f for f in filenames if f.endswith(".txt")]:
			file_path = os.path.join(dirpath, filename)
			if "events" in file_path:
				res = get_event_sound(file_path)
				if res: event_sounds.update(res)

	for file in os.scandir("C:\\Program Files (x86)\\Steam\\steamapps\\common\\Victoria 3\\game" + "\\gfx\\event_pictures"):
		if file.name.endswith(".bk2"):
			path = file.path
			path = path.split("game\\")[1].replace("\\", "/")
			EventVideos.append(path)

	event_sounds = tuple(event_sounds)
	event_sounds = sorted(event_sounds)

	print("EventSoundsList = [")
	for i, j in enumerate(sorted(event_sounds)):
		if i == len(event_sounds) - 1:
			# No comma at the end
			print(f"\t\"{j}\"")
		else:
			print(f"\t\"{j}\",")
	print("]")
	print("EventVideos = [")
	for i, j in enumerate(sorted(EventVideos)):
		if i == len(EventVideos) - 1:
			print(f"\t\"{j}\"")
		else:
			print(f"\t\"{j}\",")
	print("]")

# Run this to update the GameData class


# get_game_data()


class GameData:
	""" Class to hold all data generated from the base game logs """

	def __init__(self):
		# Manually added lists, add custom stuff here
		self.CustomTriggersList = {
			"MFE_has_building": "Check if scoped object has a building that satisfies the provided triggers.<br>MFE_has_building = {<br>&nbsp;&nbsp;&nbsp;&nbsp;S(scope) = 1(country)/2(state)/3(building)<br>&nbsp;&nbsp;&nbsp;&nbsp;T(trigger) = \"Trigger\"<br>&nbsp;&nbsp;&nbsp;&nbsp;K(kind) = 1(poor)/2(rich)/3(any)<br>}"
		}
		self.CustomEffectsList = {}
		self.CustomScopesList = {
			"nand": "a negated AND trigger<br>Supported Scopes: none",
			"nor": "a negated OR trigger<br>Supported Scopes: none",
			"not": "negates content of trigger<br>Supported Scopes: none",
			"or": "at least one entry inside trigger must be true<br>Supported Scopes: none",
			"NAND": "a negated AND trigger<br>Supported Scopes: none",
			"NOR": "a negated OR trigger<br>Supported Scopes: none",
			"NOT": "negates content of trigger<br>Supported Scopes: none",
			"OR": "at least one entry inside trigger must be true<br>Supported Scopes: none",
		}
		self.ValueFieldCompletionList = {
			"integer_range": "Gives random integer in a range",
			"add": "Add value",
			"subtract": "Subtract value",
			"divide": "Divide value",
			"multiply": "Multiply value",
			"modulo": "Remainder of division",
			"floor": "Round down",
			"ceiling": "Round up",
			"round": "Round to nearest integer",
			"min": "Set minimum possible value",
			"max": "Set maximum possible value",
			"if": "Conditionally change value",
			"else_if": "Conditionally change value",
			"else": "Conditionally change value",
			"value": "Set base value",
			"desc": "Script value description",
			"fixed_range": "Gives random fixed point in a range",
			"round_to": "Rounds to the nearest specified number",
		}
		self.IntrinsicList = {
			"abort": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/abort",
				"Terminates the current draw or dispatch call being executed."),
			"abs": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-abs",
				"Absolute value (per component)."),
			"acos": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-acos",
				"Returns the arccosine of each component of x."),
			"all": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-all",
				"Test if all components of x are nonzero."),
			"AllMemoryBarrier": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/allmemorybarrier",
				"Blocks execution of all threads in a group until all memory accesses have been completed."),
			"AllMemoryBarrierWithGroupSync": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/allmemorybarrierwithgroupsync",
				"Blocks execution of all threads in a group until all memory accesses have been completed and all threads in the group have reached this call."),
			"any": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-any",
				"Test if any component of x is nonzero."),
			"asdouble": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/asdouble",
				"Reinterprets a cast value into a double."),
			"asfloat": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-asfloat",
				"Convert the input type to a float."),
			"asin": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-asin",
				"Returns the arcsine of each component of x."),
			"asint": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-asint",
				"Convert the input type to an integer."),
			"asuint": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-asuint",
				"Convert the input type to an unsigned integer."),
			"atan": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-atan",
				"Returns the arctangent of x."),
			"atan2": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-atan2",
				"Returns the arctangent of of two values (x,y)."),
			"ceil": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-ceil",
				"Returns the smallest integer which is greater than or equal to x."),
			"CheckAccessFullyMapped": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/checkaccessfullymapped",
				"Determines whether all values from a Sample or Load operation accessed mapped tiles in a tiled resource."),
			"clamp": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-clamp",
				"Clamps x to the range [min, max]."),
			"clip": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-clip",
				"Discards the current pixel, if any component of x is less than zero."),
			"cos": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-cos",
				"Returns the cosine of x."),
			"cosh": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-cosh",
				"Returns the hyperbolic cosine of x."),
			"countbits": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/countbits",
				"Counts the number of bits (per component) in the input integer."),
			"cross": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-cross",
				"Returns the cross product of two 3D vectors."),
			"D3DCOLORtoUBYTE4": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-d3dcolortoubyte4",
				"Swizzles and scales components of the 4D vector x to compensate for the lack of UBYTE4 support in some hardware."),
			"ddx": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-ddx",
				"Returns the partial derivative of x with respect to the screen-space x-coordinate."),
			"ddx_coarse": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/ddx-coarse",
				"Computes a low precision partial derivative with respect to the screen-space x-coordinate."),
			"ddx_fine": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/ddx-fine",
				"Computes a high precision partial derivative with respect to the screen-space x-coordinate."),
			"ddy": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-ddy",
				"Returns the partial derivative of x with respect to the screen-space y-coordinate."),
			"ddy_coarse": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/ddy-coarse",
				"Computes a low precision partial derivative with respect to the screen-space y-coordinate."),
			"ddy_fine": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/ddy-fine",
				"Computes a high precision partial derivative with respect to the screen-space y-coordinate."),
			"degrees": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-degrees",
				"Converts x from radians to degrees."),
			"determinant": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-determinant",
				"Returns the determinant of the square matrix m."),
			"DeviceMemoryBarrier": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/devicememorybarrier",
				"Blocks execution of all threads in a group until all device memory accesses have been completed."),
			"DeviceMemoryBarrierWithGroupSync": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/devicememorybarrierwithgroupsync",
				"Blocks execution of all threads in a group until all device memory accesses have been completed and all threads in the group have reached this call."),
			"distance": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-distance",
				"Returns the distance between two points."),
			"dot": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-dot",
				"Returns the dot product of two vectors."),
			"dst": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dst",
				"Calculates a distance vector."),
			"errorf": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/errorf",
				"Submits an error message to the information queue."),
			"EvaluateAttributeAtCentroid": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/evaluateattributeatcentroid",
				"Evaluates at the pixel centroid."),
			"EvaluateAttributeAtSample": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/evaluateattributeatsample",
				"Evaluates at the indexed sample location."),
			"EvaluateAttributeSnapped": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/evaluateattributesnapped",
				"Evaluates at the pixel centroid with an offset."),
			"exp": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-exp",
				"Returns the base-e exponent."),
			"exp2": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-exp2",
				"Base 2 exponent (per component)."),
			"f16tof32": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/f16tof32",
				"Converts the float16 stored in the low-half of the uint to a float."),
			"f32tof16": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/f32tof16",
				"Converts an input into a float16 type."),
			"faceforward": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-faceforward",
				"Returns -n * sign(dot(i, ng))."),
			"firstbithigh": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/firstbithigh",
				"Gets the location of the first set bit starting from the highest order bit and working downward, per component."),
			"firstbitlow": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/firstbitlow",
				"Returns the location of the first set bit starting from the lowest order bit and working upward, per component."),
			"floor": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-floor",
				"Returns the greatest integer which is less than or equal to x."),
			"fma": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-fma",
				"Returns the double-precision fused multiply-addition of a * b + c."),
			"fmod": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-fmod",
				"Returns the floating point remainder of x/y."),
			"frac": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-frac",
				"Returns the fractional part of x."),
			"frexp": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-frexp",
				"Returns the mantissa and exponent of x."),
			"fwidth": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-fwidth",
				"Returns abs(ddx(x)) + abs(ddy(x))."),
			"GetRenderTargetSampleCount": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-getrendertargetsamplecount",
				"Returns the number of render-target samples."),
			"GetRenderTargetSamplePosition": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-getrendertargetsampleposition",
				"Returns a sample position (x,y) for a given sample index."),
			"GroupMemoryBarrier": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/groupmemorybarrier",
				"Blocks execution of all threads in a group until all group shared accesses have been completed."),
			"GroupMemoryBarrierWithGroupSync": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/groupmemorybarrierwithgroupsync",
				"Blocks execution of all threads in a group until all group shared accesses have been completed and all threads in the group have reached this call."),
			"InterlockedAdd": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/interlockedadd",
				"Performs a guaranteed atomic add of value to the dest resource variable."),
			"InterlockedAnd": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/interlockedand",
				"Performs a guaranteed atomic and."),
			"InerlockedCompareExchange": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/interlockedcompareexchange",
				"Atomically compares the input to the comparison value and exchanges the result."),
			"InterlockedCompareStore": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/interlockedcomparestore",
				"Atomically compares the input to the comparison value."),
			"InterlockedExchange": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/interlockedexchange",
				"Assigns value to dest and returns the original value."),
			"InterlockedMax": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/interlockedmax",
				"Performs a guaranteed atomic max."),
			"InterlockedMin": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/interlockedmin",
				"Performs a guaranteed atomic min."),
			"InterlockedOr": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/interlockedor",
				"Performs a guaranteed atomic or."),
			"InterlockedXor": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/interlockedxor",
				"Performs a guaranteed atomic xor."),
			"isfinite": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-isfinite",
				"Returns true if x is finite, false otherwise."),
			"isinf": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-isinf",
				"Returns true if x is +INF or -INF, false otherwise."),
			"isnan": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-isnan",
				"Returns true if x is NAN or QNAN, false otherwise."),
			"ldexp": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-ldexp",
				"Returns x * 2exp."),
			"length": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-length",
				"Returns the length of the vector v."),
			"lerp": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-lerp",
				"Returns x + s(y - x)."),
			"lit": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-lit",
				"Returns a lighting vector (ambient, diffuse, specular, 1)."),
			"log": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-log",
				"Returns the base-e logarithm of x."),
			"log10": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-log10",
				"Returns the base-10 logarithm of x."),
			"log2": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-log2",
				"Returns the base-2 logarithm of x."),
			"mad": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/mad",
				"Performs an arithmetic multiply/add operation on three values."),
			"max": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-max",
				"Selects the greater of x and y."),
			"min": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-min",
				"Selects the lesser of x and y."),
			"modf": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-modf",
				"Splits the value x into fractional and integer parts."),
			"msad4": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-msad4",
				"Compares a 4-byte reference value and an 8-byte source value and accumulates a vector of 4 sums."),
			"mul": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-mul",
				"Performs matrix multiplication using x and y."),
			"noise": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-noise",
				"Generates a random value using the Perlin-noise algorithm."),
			"normalize": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-normalize",
				"Returns a normalized vector."),
			"pow": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-pow",
				"Returns x^y."),
			"printf": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/printf",
				"Submits a custom shader message to the information queue."),
			"Process2DQuadTessFactorsAvg": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/process2dquadtessfactorsavg",
				"Generates the corrected tessellation factors for a quad patch."),
			"Process2DQuadTessFactorsMax": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/process2dquadtessfactorsmax",
				"Generates the corrected tessellation factors for a quad patch."),
			"Process2DQuadTessFactorsMin": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/process2dquadtessfactorsmin",
				"Generates the corrected tessellation factors for a quad patch."),
			"ProcessIsolineTessFactors": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/processisolinetessfactors",
				"Generates the rounded tessellation factors for an isoline."),
			"ProcessQuadTessFactorsAvg": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/processquadtessfactorsavg",
				"Generates the corrected tessellation factors for a quad patch."),
			"ProcessQuadTessFactorsMax": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/processquadtessfactorsmax",
				"Generates the corrected tessellation factors for a quad patch."),
			"ProcessQuadTessFactorsMin": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/processquadtessfactorsmin",
				"Generates the corrected tessellation factors for a quad patch."),
			"ProcessTriTessFactorsAvg": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/processtritessfactorsavg",
				"Generates the corrected tessellation factors for a tri patch."),
			"ProcessTriTessFactorsMax": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/processtritessfactorsmax",
				"Generates the corrected tessellation factors for a tri patch."),
			"ProcessTriTessFactorsMin": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/processtritessfactorsmin",
				"Generates the corrected tessellation factors for a tri patch."),
			"QuadReadAcrossDiagonal": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/quadreadaccrossdiagonal",
				"Returns the specified local value which is read from the diagonally opposite lane in this quad."),
			"QuadReadLaneAt": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/quadreadlaneat",
				"Returns the specified source value from the lane identified by the lane ID within the current quad."),
			"QuadReadAcrossX": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/quadswapx",
				"Returns the specified local value read from the other lane in this quad in the X direction."),
			"QuadReadAcrossY": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/quadswapy",
				"Returns the specified source value read from the other lane in this quad in the Y direction."),
			"radians": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-radians",
				"Converts x from degrees to radians."),
			"rcp": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/rcp",
				"Calculates a fast, approximate, per-component reciprocal."),
			"reflect": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-reflect",
				"Returns a reflection vector."),
			"refract": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-refract",
				"Returns the refraction vector."),
			"reversebits": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/reversebits",
				"Reverses the order of the bits, per component."),
			"round": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-round",
				"Rounds x to the nearest integer."),
			"rsqrt": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-rsqrt",
				"Returns 1 / sqrt(x)."),
			"saturate": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-saturate",
				"Clamps x to the range [0, 1]."),
			"sign": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-sign",
				"Computes the sign of x."),
			"sin": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-sin",
				"Returns the sine of x."),
			"sincos": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-sincos",
				"Returns the sine and cosine of x."),
			"sinh": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-sinh",
				"Returns the hyperbolic sine of x."),
			"smoothstep": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-smoothstep",
				"Returns a smooth Hermite interpolation between 0 and 1."),
			"sqrt": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-sqrt",
				"Square root (per component)."),
			"step": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-step",
				"Returns (x >= a) ? 1 : 0."),
			"tan": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-tan",
				"Returns the tangent of x."),
			"tanh": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-tanh",
				"Returns the hyperbolic tangent of x."),
			"transpose": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-transpose",
				"Returns the transpose of the matrix m."),
			"trunc": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl-trunc",
				"Truncates floating-point value(s) to integer value(s)."),
			"WaveActiveAllEqual": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/waveactiveallequal",
				"Returns true if the expression is the same for every active lane in the current wave (and thus uniform across it)."),
			"WaveActiveBitAnd": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/waveallbitand",
				"Returns the bitwise AND of all the values of the expression across all active lanes in the current wave and replicates it back to all active lanes."),
			"WaveActiveBitOr": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/waveallbitor",
				"Returns the bitwise OR of all the values of the expression across all active lanes in the current wave and replicates it back to all active lanes."),
			"WaveActiveBitXor": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/waveallbitxor",
				"Returns the bitwise XOR of all the values of the expression across all active lanes in the current wave and replicates it back to all active lanes."),
			"WaveActiveCountBits": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/waveactivecountbits",
				"Counts the number of boolean variables which evaluate to true across all active lanes in the current wave, and replicates the result to all lanes in the wave."),
			"WaveActiveMax": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/waveallmax",
				"Returns the maximum value of the expression across all active lanes in the current wave and replicates it back to all active lanes."),
			"WaveActiveMin": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/waveallmin",
				"Returns the minimum value of the expression across all active lanes in the current wave replicates it back to all active lanes."),
			"WaveActiveProduct": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/waveallproduct",
				"Multiplies the values of the expression together across all active lanes in the current wave and replicates it back to all active lanes."),
			"WaveActiveSum": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/waveallsum",
				"Sums up the value of the expression across all active lanes in the current wave and replicates it to all lanes in the current wave."),
			"WaveActiveAllTrue": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/wavealltrue",
				"Returns true if the expression is true in all active lanes in the current wave."),
			"WaveActiveAnyTrue": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/waveanytrue",
				"Returns true if the expression is true in any of the active lanes in the current wave."),
			"WaveActiveBallot": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/waveballot",
				"Returns a 4-bit unsigned integer bitmask of the evaluation of the Boolean expression for all active lanes in the specified wave."),
			"WaveGetLaneCount": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/wavegetlanecount",
				"Returns the number of lanes in a wave on this architecture."),
			"WaveGetLaneIndex": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/wavegetlaneindex",
				"Returns the index of the current lane within the current wave."),
			"WaveIsFirstLane": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/waveisfirstlane",
				"Returns true only for the active lane in the current wave with the smallest index."),
			"WavePrefixCountBits": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/waveprefixcountbytes",
				"Returns the sum of all the specified boolean variables set to true across all active lanes with indices smaller than the current lane."),
			"WavePrefixProduct": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/waveprefixproduct",
				"Returns the product of all of the values in the active lanes in this wave with indices less than this lane."),
			"WavePrefixSum": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/waveprefixsum",
				"Returns the sum of all of the values in the active lanes with smaller indices than this one."),
			"WaveReadLaneFirst": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/wavereadfirstlane",
				"Returns the value of the expression for the active lane of the current wave with the smallest index."),
			"WaveReadLaneAt": (
				"https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/wavereadlaneat",
				"Returns the value of the expression for the given lane index within the specified wave.")
		}
		self.ModifiersList = {
			"building_output_services_add": "Categories: building ",
			"building_output_fine_art_add": "Categories: building ",
			"building_output_furniture_add": "Categories: building ",
			"building_output_clothes_add": "Categories: building ",
			"building_output_tools_add": "Categories: building ",
			"building_output_glass_add": "Categories: building ",
			"building_output_steel_add": "Categories: building ",
			"building_output_liquor_add": "Categories: building ",
			"building_output_groceries_add": "Categories: building ",
			"building_output_luxury_clothes_add": "Categories: building ",
			"building_output_luxury_furniture_add": "Categories: building ",
			"building_output_porcelain_add": "Categories: building ",
			"building_output_fertilizer_add": "Categories: building ",
			"building_output_explosives_add": "Categories: building ",
			"building_output_ammunition_add": "Categories: building ",
			"building_output_artillery_add": "Categories: building ",
			"building_output_engines_add": "Categories: building ",
			"building_output_clippers_add": "Categories: building ",
			"building_output_steamers_add": "Categories: building ",
			"building_output_manowars_add": "Categories: building ",
			"building_output_ironclads_add": "Categories: building ",
			"building_output_automobiles_add": "Categories: building ",
			"building_output_aeroplanes_add": "Categories: building ",
			"building_output_tanks_add": "Categories: building ",
			"building_output_radios_add": "Categories: building ",
			"building_output_telephones_add": "Categories: building ",
			"building_output_grain_add": "Categories: building ",
			"building_output_fish_add": "Categories: building ",
			"building_output_meat_add": "Categories: building ",
			"building_output_fruit_add": "Categories: building ",
			"building_output_wine_add": "Categories: building ",
			"building_output_fabric_add": "Categories: building ",
			"building_output_wood_add": "Categories: building ",
			"building_output_sugar_add": "Categories: building ",
			"building_output_coal_add": "Categories: building ",
			"building_output_iron_add": "Categories: building ",
			"building_output_lead_add": "Categories: building ",
			"building_output_oil_add": "Categories: building ",
			"building_output_gold_add": "Categories: building ",
			"building_output_sulfur_add": "Categories: building ",
			"building_output_hardwood_add": "Categories: building ",
			"building_output_rubber_add": "Categories: building ",
			"building_output_coffee_add": "Categories: building ",
			"building_output_dye_add": "Categories: building ",
			"building_output_opium_add": "Categories: building ",
			"building_output_tea_add": "Categories: building ",
			"building_output_silk_add": "Categories: building ",
			"building_output_tobacco_add": "Categories: building ",
			"building_output_small_arms_add": "Categories: building ",
			"building_output_paper_add": "Categories: building ",
			"building_output_literature_add": "Categories: building ",
			"building_output_electricity_add": "Categories: building ",
			"building_output_transportation_add": "Categories: building ",
			"building_input_fabric_add": "Categories: building ",
			"building_input_wood_add": "Categories: building ",
			"building_input_iron_add": "Categories: building ",
			"building_input_coal_add": "Categories: building ",
			"building_input_lead_add": "Categories: building ",
			"building_input_liquor_add": "Categories: building ",
			"building_input_grain_add": "Categories: building ",
			"building_input_fish_add": "Categories: building ",
			"building_input_meat_add": "Categories: building ",
			"building_input_fruit_add": "Categories: building ",
			"building_input_sugar_add": "Categories: building ",
			"building_input_glass_add": "Categories: building ",
			"building_input_dye_add": "Categories: building ",
			"building_input_silk_add": "Categories: building ",
			"building_input_hardwood_add": "Categories: building ",
			"building_input_sulfur_add": "Categories: building ",
			"building_input_oil_add": "Categories: building ",
			"building_input_steel_add": "Categories: building ",
			"building_input_fertilizer_add": "Categories: building ",
			"building_input_tools_add": "Categories: building ",
			"building_input_rubber_add": "Categories: building ",
			"building_input_opium_add": "Categories: building ",
			"building_input_ammunition_add": "Categories: building ",
			"building_input_artillery_add": "Categories: building ",
			"building_input_small_arms_add": "Categories: building ",
			"building_input_clothes_add": "Categories: building ",
			"building_input_groceries_add": "Categories: building ",
			"building_input_engines_add": "Categories: building ",
			"building_input_automobiles_add": "Categories: building ",
			"building_input_clippers_add": "Categories: building ",
			"building_input_steamers_add": "Categories: building ",
			"building_input_manowars_add": "Categories: building ",
			"building_input_ironclads_add": "Categories: building ",
			"building_input_paper_add": "Categories: building ",
			"building_input_literature_add": "Categories: building ",
			"building_input_explosives_add": "Categories: building ",
			"building_input_electricity_add": "Categories: building ",
			"building_input_transportation_add": "Categories: building ",
			"building_input_aeroplanes_add": "Categories: building ",
			"building_input_tanks_add": "Categories: building ",
			"building_input_radios_add": "Categories: building ",
			"building_input_telephones_add": "Categories: building ",
			"building_output_hardwood_mult": "Categories: building ",
			"building_output_oil_mult": "Categories: building ",
			"building_group_bg_service_throughput_mult": "Categories: building ",
			"building_group_bg_oil_extraction_throughput_mult": "Categories: building ",
			"building_construction_sector_throughput_mult": "Categories: building ",
			"building_coal_mine_throughput_mult": "Categories: building ",
			"building_silk_plantation_throughput_mult": "Categories: building ",
			"building_dye_plantation_throughput_mult": "Categories: building ",
			"building_cotton_plantation_throughput_mult": "Categories: building ",
			"building_iron_mine_throughput_mult": "Categories: building ",
			"building_gold_mine_throughput_mult": "Categories: building ",
			"building_shipyards_throughput_mult": "Categories: building ",
			"building_port_throughput_mult": "Categories: building ",
			"building_throughput_oil_mult": "Categories: building ",
			"building_group_bg_logging_throughput_mult": "Categories: building ",
			"building_group_bg_fishing_throughput_mult": "Categories: building ",
			"building_rye_farm_throughput_mult": "Categories: building ",
			"building_group_bg_whaling_throughput_mult": "Categories: building ",
			"building_wheat_farm_throughput_mult": "Categories: building ",
			"building_rice_farm_throughput_mult": "Categories: building ",
			"building_maize_farm_throughput_mult": "Categories: building ",
			"building_millet_farm_throughput_mult": "Categories: building ",
			"building_livestock_ranch_throughput_mult": "Categories: building ",
			"building_opium_plantation_throughput_mult": "Categories: building ",
			"building_arts_academy_throughput_mult": "Categories: building ",
			"building_university_throughput_mult": "Categories: building ",
			"building_whaling_station_throughput_mult": "Categories: building ",
			"building_output_literature_mult": "Categories: building ",
			"building_output_tools_mult": "Categories: building ",
			"building_output_small_arms_mult": "Categories: building ",
			"building_output_engines_mult": "Categories: building ",
			"building_output_artillery_mult": "Categories: building ",
			"building_output_automobiles_mult": "Categories: building ",
			"building_output_aeroplanes_mult": "Categories: building ",
			"building_output_tanks_mult": "Categories: building ",
			"building_output_clippers_mult": "Categories: building ",
			"building_output_steamers_mult": "Categories: building ",
			"building_output_manowars_mult": "Categories: building ",
			"building_output_ironclads_mult": "Categories: building ",
			"building_food_industry_throughput_mult": "Categories: building ",
			"building_munition_plants_throughput_mult": "Categories: building ",
			"building_synthetics_plants_throughput_mult": "Categories: building ",
			"building_textile_mills_throughput_mult": "Categories: building ",
			"building_furniture_manufacturies_throughput_mult": "Categories: building ",
			"building_glassworks_throughput_mult": "Categories: building ",
			"building_tooling_workshops_throughput_mult": "Categories: building ",
			"building_paper_mills_throughput_mult": "Categories: building ",
			"building_chemical_plants_throughput_mult": "Categories: building ",
			"building_motor_industry_throughput_mult": "Categories: building ",
			"building_war_machine_industry_throughput_mult": "Categories: building ",
			"building_electrics_industry_throughput_mult": "Categories: building ",
			"building_arms_industry_throughput_mult": "Categories: building ",
			"building_power_plant_throughput_mult": "Categories: building ",
			"building_lead_mine_throughput_mult": "Categories: building ",
			"building_sulfur_mine_throughput_mult": "Categories: building ",
			"building_gold_fields_throughput_mult": "Categories: building ",
			"building_railway_throughput_mult": "Categories: building ",
			"building_rubber_plantation_throughput_mult": "Categories: building ",
			"building_output_liquor_mult": "Categories: building ",
			"building_output_wine_mult": "Categories: building ",
			"building_output_fabric_mult": "Categories: building ",
			"building_output_fruit_mult": "Categories: building ",
			"building_output_sugar_mult": "Categories: building ",
			"building_output_radio_mult": "Categories: building ",
			"building_output_silk_mult": "Categories: building ",
			"building_steel_mills_throughput_mult": "Categories: building ",
			"building_urban_center_throughput_mult": "Categories: building ",
			"building_output_electricity_mult": "Categories: building ",
			"building_government_administration_throughput_mult": "Categories: building ",
			"building_government_shares_add": "Categories: building ",
			"building_workforce_shares_add": "Categories: building ",
			"state_education_access_add": "Categories: state ",
			"state_education_access_wealth_add": "Categories: state ",
			"state_pop_qualifications_mult": "Categories: state ",
			"state_assimilation_mult": "Categories: state ",
			"state_conversion_mult": "Categories: state ",
			"country_diplomatic_play_maneuvers_add": "Categories: country ",
			"market_land_trade_capacity_add": "Categories: market ",
			"country_trade_route_quantity_mult": "Categories: country ",
			"country_trade_route_cost_mult": "Categories: country ",
			"country_trade_route_competitiveness_mult": "Categories: country ",
			"market_max_exports_add": "Categories: market ",
			"market_max_imports_add": "Categories: market ",
			"tariff_import_add": "Categories: tariff ",
			"tariff_export_add": "Categories: tariff ",
			"country_trade_route_imports_add": "Categories: country ",
			"country_trade_route_exports_add": "Categories: country ",
			"unit_offense_add": "Categories: unit ",
			"unit_defense_add": "Categories: unit ",
			"unit_offense_mult": "Categories: unit ",
			"unit_defense_mult": "Categories: unit ",
			"unit_army_offense_add": "Categories: unit ",
			"unit_army_defense_add": "Categories: unit ",
			"unit_army_offense_mult": "Categories: unit ",
			"unit_army_defense_mult": "Categories: unit ",
			"unit_navy_offense_add": "Categories: unit ",
			"unit_navy_defense_add": "Categories: unit ",
			"unit_navy_offense_mult": "Categories: unit ",
			"unit_navy_defense_mult": "Categories: unit ",
			"unit_morale_loss_add": "Categories: unit ",
			"unit_morale_loss_mult": "Categories: unit ",
			"unit_morale_damage_mult": "Categories: unit ",
			"unit_morale_recovery_mult": "Categories: unit ",
			"unit_kill_rate_add": "Categories: unit ",
			"unit_recovery_rate_add": "Categories: unit ",
			"unit_provinces_captured_mult": "Categories: unit ",
			"unit_provinces_lost_mult": "Categories: unit ",
			"unit_devastation_mult": "Categories: unit ",
			"unit_advancement_speed_mult": "Categories: unit ",
			"unit_convoy_requirements_mult": "Categories: unit ",
			"unit_convoy_raiding_mult": "Categories: unit ",
			"unit_supply_consumption_mult": "Categories: unit ",
			"battle_offense_owned_province_mult": "Categories: battle ",
			"battle_defense_owned_province_mult": "Categories: battle ",
			"battle_casualties_mult": "Categories: battle ",
			"character_supply_route_cost_mult": "Categories: character ",
			"character_command_limit_mult": "Categories: character ",
			"building_production_mult": "Categories: building ",
			"building_economy_of_scale_level_cap_add": "Categories: building ",
			"country_prestige_add": "Categories: country ",
			"country_max_declared_interests_add": "Categories: country ",
			"country_max_declared_interests_mult": "Categories: country ",
			"country_prestige_mult": "Categories: country ",
			"country_bureaucracy_investment_cost_factor_mult": "Categories: country ",
			"state_bureaucracy_population_base_cost_factor_mult": "Categories: state ",
			"country_bureaucracy_add": "Categories: country ",
			"country_bureaucracy_mult": "Categories: country ",
			"country_authority_add": "Categories: country ",
			"country_authority_mult": "Categories: country ",
			"country_influence_add": "Categories: country ",
			"country_influence_mult": "Categories: country ",
			"tax_land_add": "Categories: tax ",
			"tax_heathen_add": "Categories: tax ",
			"tax_per_capita_add": "Categories: tax ",
			"state_welfare_payments_add": "Categories: state ",
			"state_standard_of_living_add": "Categories: state ",
			"state_poor_standard_of_living_add": "Categories: state ",
			"state_middle_standard_of_living_add": "Categories: state ",
			"state_rich_standard_of_living_add": "Categories: state ",
			"state_expected_sol_mult": "Categories: state ",
			"state_expected_sol_from_literacy": "Categories: state ",
			"state_poor_expected_sol": "Categories: state ",
			"state_middle_expected_sol": "Categories: state ",
			"state_rich_expected_sol": "Categories: state ",
			"tax_income_add": "Categories: tax ",
			"state_urbanization_add": "Categories: state ",
			"state_urbanization_mult": "Categories: state ",
			"state_pop_pol_str_add": "Categories: state ",
			"state_pop_pol_str_mult": "Categories: state ",
			"interest_group_pol_str_mult": "Categories: interest_group ",
			"interest_group_pol_str_factor": "Categories: interest_group ",
			"interest_group_ig_armed_forces_approval_add": "Categories: interest_group ",
			"interest_group_ig_devout_approval_add": "Categories: interest_group ",
			"interest_group_ig_industrialists_approval_add": "Categories: interest_group ",
			"interest_group_ig_intelligentsia_approval_add": "Categories: interest_group ",
			"interest_group_ig_landowners_approval_add": "Categories: interest_group ",
			"interest_group_ig_petty_bourgeoisie_approval_add": "Categories: interest_group ",
			"interest_group_ig_rural_folk_approval_add": "Categories: interest_group ",
			"interest_group_ig_trade_unions_approval_add": "Categories: interest_group ",
			"interest_group_ig_armed_forces_pol_str_mult": "Categories: interest_group ",
			"interest_group_ig_devout_pol_str_mult": "Categories: interest_group ",
			"interest_group_ig_industrialists_pol_str_mult": "Categories: interest_group ",
			"interest_group_ig_intelligentsia_pol_str_mult": "Categories: interest_group ",
			"interest_group_ig_landowners_pol_str_mult": "Categories: interest_group ",
			"interest_group_ig_petty_bourgeoisie_pol_str_mult": "Categories: interest_group ",
			"interest_group_ig_rural_folk_pol_str_mult": "Categories: interest_group ",
			"interest_group_ig_trade_unions_pol_str_mult": "Categories: interest_group ",
			"interest_group_ig_armed_forces_pop_attraction_mult": "Categories: interest_group ",
			"interest_group_ig_devout_pop_attraction_mult": "Categories: interest_group ",
			"interest_group_ig_industrialists_pop_attraction_mult": "Categories: interest_group ",
			"interest_group_ig_intelligentsia_pop_attraction_mult": "Categories: interest_group ",
			"interest_group_ig_landowners_pop_attraction_mult": "Categories: interest_group ",
			"interest_group_ig_petty_bourgeoisie_pop_attraction_mult": "Categories: interest_group ",
			"interest_group_ig_rural_folk_pop_attraction_mult": "Categories: interest_group ",
			"interest_group_ig_trade_unions_pop_attraction_mult": "Categories: interest_group ",
			"interest_group_approval_add": "Categories: interest_group ",
			"interest_group_pop_attraction_mult": "Categories: interest_group ",
			"interest_group_in_government_approval_add": "Categories: interest_group ",
			"interest_group_in_opposition_approval_add": "Categories: interest_group ",
			"country_weekly_innovation_max_add": "Categories: country ",
			"country_weekly_innovation_add": "Categories: country ",
			"country_weekly_innovation_mult": "Categories: country ",
			"country_tech_spread_add": "Categories: country ",
			"country_tech_spread_mult": "Categories: country ",
			"state_port_range_add": "Categories: state ",
			"building_group_bg_construction_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_agriculture_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_agriculture_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_ranching_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_ranching_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_plantations_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_plantations_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_mining_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_manufacturing_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_mining_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_manufacturing_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_mining_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_manufacturing_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_mining_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_manufacturing_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_mining_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_manufacturing_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_mining_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_manufacturing_engineers_standard_of_living_add": "Categories: building ",
			"state_building_port_max_level_add": "Categories: state ",
			"state_building_construction_sector_max_level_add": "Categories: state ",
			"state_building_barracks_max_level_add": "Categories: state ",
			"state_building_conscription_center_max_level_add": "Categories: state ",
			"state_building_naval_base_max_level_add": "Categories: state ",
			"state_colony_growth_creation_mult": "Categories: state ",
			"state_colony_growth_speed_mult": "Categories: state ",
			"state_non_homeland_colony_growth_speed_mult": "Categories: state ",
			"state_migration_pull_add": "Categories: state ",
			"state_migration_pull_mult": "Categories: state ",
			"state_migration_push_mult": "Categories: state ",
			"building_group_bg_service_tax_mult": "Categories: building ",
			"building_group_bg_agriculture_tax_mult": "Categories: building ",
			"building_group_bg_ranching_tax_mult": "Categories: building ",
			"building_group_bg_plantations_tax_mult": "Categories: building ",
			"building_group_bg_mining_tax_mult": "Categories: building ",
			"building_group_bg_gold_mining_tax_mult": "Categories: building ",
			"building_group_bg_coal_mining_tax_mult": "Categories: building ",
			"building_group_bg_iron_mining_tax_mult": "Categories: building ",
			"building_group_bg_lead_mining_tax_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_tax_mult": "Categories: building ",
			"building_group_bg_rubber_tax_mult": "Categories: building ",
			"building_group_bg_logging_tax_mult": "Categories: building ",
			"building_group_bg_fishing_tax_mult": "Categories: building ",
			"building_group_bg_whaling_tax_mult": "Categories: building ",
			"building_group_bg_oil_extraction_tax_mult": "Categories: building ",
			"building_group_bg_manufacturing_tax_mult": "Categories: building ",
			"building_group_bg_government_tax_mult": "Categories: building ",
			"building_group_bg_infrastructure_tax_mult": "Categories: building ",
			"building_group_bg_service_mortality_mult": "Categories: building ",
			"building_group_bg_agriculture_mortality_mult": "Categories: building ",
			"building_group_bg_ranching_mortality_mult": "Categories: building ",
			"building_group_bg_plantations_mortality_mult": "Categories: building ",
			"building_group_bg_mining_mortality_mult": "Categories: building ",
			"building_group_bg_gold_mining_mortality_mult": "Categories: building ",
			"building_group_bg_coal_mining_mortality_mult": "Categories: building ",
			"building_group_bg_iron_mining_mortality_mult": "Categories: building ",
			"building_group_bg_lead_mining_mortality_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_mortality_mult": "Categories: building ",
			"building_group_bg_rubber_mortality_mult": "Categories: building ",
			"building_group_bg_logging_mortality_mult": "Categories: building ",
			"building_group_bg_fishing_mortality_mult": "Categories: building ",
			"building_group_bg_whaling_mortality_mult": "Categories: building ",
			"building_group_bg_oil_extraction_mortality_mult": "Categories: building ",
			"building_group_bg_manufacturing_mortality_mult": "Categories: building ",
			"building_group_bg_government_mortality_mult": "Categories: building ",
			"building_group_bg_infrastructure_mortality_mult": "Categories: building ",
			"building_group_bg_service_standard_of_living_add": "Categories: building ",
			"building_group_bg_agriculture_standard_of_living_add": "Categories: building ",
			"building_group_bg_plantations_standard_of_living_add": "Categories: building ",
			"building_group_bg_mining_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_mining_standard_of_living_add": "Categories: building ",
			"building_group_bg_coal_mining_standard_of_living_add": "Categories: building ",
			"building_group_bg_iron_mining_standard_of_living_add": "Categories: building ",
			"building_group_bg_lead_mining_standard_of_living_add": "Categories: building ",
			"building_group_bg_sulfur_mining_standard_of_living_add": "Categories: building ",
			"building_group_bg_rubber_standard_of_living_add": "Categories: building ",
			"building_group_bg_logging_standard_of_living_add": "Categories: building ",
			"building_group_bg_fishing_standard_of_living_add": "Categories: building ",
			"building_group_bg_whaling_standard_of_living_add": "Categories: building ",
			"building_group_bg_oil_extraction_standard_of_living_add": "Categories: building ",
			"building_group_bg_manufacturing_standard_of_living_add": "Categories: building ",
			"building_group_bg_government_standard_of_living_add": "Categories: building ",
			"building_group_bg_infrastructure_standard_of_living_add": "Categories: building ",
			"building_group_bg_service_employee_mult": "Categories: building ",
			"building_group_bg_agriculture_employee_mult": "Categories: building ",
			"building_group_bg_plantations_employee_mult": "Categories: building ",
			"building_group_bg_mining_employee_mult": "Categories: building ",
			"building_group_bg_gold_mining_employee_mult": "Categories: building ",
			"building_group_bg_coal_mining_employee_mult": "Categories: building ",
			"building_group_bg_iron_mining_employee_mult": "Categories: building ",
			"building_group_bg_lead_mining_employee_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_employee_mult": "Categories: building ",
			"building_group_bg_rubber_employee_mult": "Categories: building ",
			"building_group_bg_logging_employee_mult": "Categories: building ",
			"building_group_bg_fishing_employee_mult": "Categories: building ",
			"building_group_bg_whaling_employee_mult": "Categories: building ",
			"building_group_bg_oil_extraction_employee_mult": "Categories: building ",
			"building_group_bg_manufacturing_employee_mult": "Categories: building ",
			"building_group_bg_government_employee_mult": "Categories: building ",
			"building_group_bg_infrastructure_employee_mult": "Categories: building ",
			"state_working_adult_ratio_add": "Categories: state ",
			"country_voting_power_base_add": "Categories: country ",
			"country_voting_power_from_literacy_add": "Categories: country ",
			"country_voting_power_wealth_threshold_add": "Categories: country ",
			"state_political_strength_from_wealth_mult": "Categories: state ",
			"state_political_strength_from_discrimination_mult": "Categories: state ",
			"state_political_strength_from_welfare_mult": "Categories: state ",
			"building_input_mult": "Categories: building ",
			"building_throughput_mult": "Categories: building ",
			"building_cash_reserves_mult": "Categories: building ",
			"building_group_bg_agriculture_throughput_mult": "Categories: building ",
			"building_group_bg_ranching_throughput_mult": "Categories: building ",
			"building_group_bg_mining_throughput_mult": "Categories: building ",
			"building_group_bg_plantations_throughput_mult": "Categories: building ",
			"building_group_bg_manufacturing_throughput_mult": "Categories: building ",
			"building_subsistence_output_add": "Categories: building ",
			"building_subsistence_output_mult": "Categories: building ",
			"building_mobilization_cost_mult": "Categories: building ",
			"building_unincorporated_subsistence_output_mult": "Categories: building ",
			"state_dependent_wage_add": "Categories: state ",
			"state_dependent_wage_mult": "Categories: state ",
			"state_dependent_political_participation_add": "Categories: state ",
			"tax_consumption_add": "Categories: tax ",
			"country_war_exhaustion_casualties_mult": "Categories: country ",
			"country_minting_add": "Categories: country ",
			"country_minting_mult": "Categories: country ",
			"country_tax_income_add": "Categories: country ",
			"country_expenses_add": "Categories: country ",
			"state_tax_waste_add": "Categories: state ",
			"state_tax_collection_mult": "Categories: state ",
			"state_tax_capacity_add": "Categories: state ",
			"state_tax_capacity_mult": "Categories: state ",
			"country_government_wages_mult": "Categories: country ",
			"country_military_wages_mult": "Categories: country ",
			"state_unincorporated_starting_wages_mult": "Categories: state ",
			"country_military_goods_cost_mult": "Categories: country ",
			"country_law_enactment_time_mult": "Categories: country ",
			"country_law_enactment_success_add": "Categories: country ",
			"country_opposition_ig_approval_add": "Categories: country ",
			"country_infamy_decay_mult": "Categories: country ",
			"country_tension_decay_mult": "Categories: country ",
			"country_improve_relations_speed_mult": "Categories: country ",
			"country_damage_relations_speed_mult": "Categories: country ",
			"country_legitimacy_base_add": "Categories: country ",
			"country_legitimacy_headofstate_add": "Categories: country ",
			"country_legitimacy_govt_size_add": "Categories: country ",
			"country_legitimacy_ideological_incoherence_mult": "Categories: country ",
			"country_legitimacy_govt_leader_clout_add": "Categories: country ",
			"country_legitimacy_govt_total_clout_add": "Categories: country ",
			"country_legitimacy_govt_total_votes_add": "Categories: country ",
			"country_loan_interest_rate_add": "Categories: country ",
			"country_loan_interest_rate_mult": "Categories: country ",
			"country_gold_reserve_limit_mult": "Categories: country ",
			"country_resource_discovery_chance_mult": "Categories: country ",
			"country_resource_depletion_chance_mult": "Categories: country ",
			"country_suppression_ig_attraction_mult": "Categories: country ",
			"country_promotion_ig_attraction_mult": "Categories: country ",
			"country_infamy_generation_mult": "Categories: country ",
			"state_infrastructure_add": "Categories: state ",
			"state_infrastructure_from_population_add": "Categories: state ",
			"state_infrastructure_from_population_mult": "Categories: state ",
			"state_infrastructure_from_population_max_add": "Categories: state ",
			"state_infrastructure_from_population_max_mult": "Categories: state ",
			"state_infrastructure_mult": "Categories: state ",
			"country_construction_add": "Categories: country ",
			"state_construction_mult": "Categories: state ",
			"country_private_construction_allocation_mult": "Categories: country ",
			"state_birth_rate_mult": "Categories: state ",
			"state_accepted_birth_rate_mult": "Categories: state ",
			"state_conscription_rate_add": "Categories: state ",
			"state_conscription_rate_mult": "Categories: state ",
			"technology_invention_cost_mult": "Categories: none ",
			"character_popularity_add": "Categories: character ",
			"character_morale_cap_add": "Categories: character ",
			"character_health_add": "Categories: character ",
			"character_attrition_risk_add": "Categories: character ",
			"character_attrition_risk_mult": "Categories: character ",
			"front_advancement_speed_add": "Categories: front ",
			"front_advancement_speed_mult": "Categories: front ",
			"front_enemy_advancement_speed_add": "Categories: front ",
			"front_enemy_advancement_speed_mult": "Categories: front ",
			"building_training_rate_add": "Categories: building ",
			"building_training_rate_mult": "Categories: building ",
			"tax_dividends_add": "Categories: tax ",
			"building_working_conditions_mult": "Categories: building ",
			"state_mortality_mult": "Categories: state ",
			"state_non_homeland_mortality_mult": "Categories: state ",
			"state_mortality_turmoil_mult": "Categories: state ",
			"state_mortality_wealth_mult": "Categories: state ",
			"state_minimum_wealth_add": "Categories: state ",
			"building_minimum_wage_mult": "Categories: building ",
			"building_unincorporated_throughput_add": "Categories: building ",
			"state_unincorporated_standard_of_living_add": "Categories: state ",
			"country_decree_cost_mult": "Categories: country ",
			"country_consumption_tax_cost_mult": "Categories: country ",
			"state_migration_pull_unincorporated_mult": "Categories: state ",
			"country_revolution_secession_speed_add": "Categories: country ",
			"country_revolution_secession_speed_mult": "Categories: country ",
			"country_radicals_from_conquest_mult": "Categories: country ",
			"state_radicals_from_discrimination_mult": "Categories: state ",
			"state_radicals_from_sol_change_mult": "Categories: state ",
			"state_loyalists_from_sol_change_mult": "Categories: state ",
			"state_radicals_from_sol_change_accepted_culture_mult": "Categories: state ",
			"state_loyalists_from_sol_change_accepted_culture_mult": "Categories: state ",
			"state_radicals_from_sol_change_accepted_religion_mult": "Categories: state ",
			"state_loyalists_from_sol_change_accepted_religion_mult": "Categories: state ",
			"state_turmoil_effects_mult": "Categories: state ",
			"country_convoys_capacity_add": "Categories: country ",
			"country_convoys_capacity_mult": "Categories: country ",
			"country_navy_power_projection_add": "Categories: country ",
			"country_navy_power_projection_mult": "Categories: country ",
			"country_army_power_projection_add": "Categories: country ",
			"country_army_power_projection_mult": "Categories: country ",
			"country_institution_size_change_speed_mult": "Categories: country ",
			"political_movement_support_add": "Categories: political_movement ",
			"political_movement_radicalism_add": "Categories: political_movement ",
			"political_movement_radicalism_mult": "Categories: political_movement ",
			"country_cannot_enact_laws": "Categories: country ",
			"country_disallow_discriminated_migration": "Categories: country ",
			"country_disallow_migration": "Categories: country ",
			"country_subsidies_all": "Categories: country ",
			"country_subsidies_bg_mining": "Categories: country ",
			"country_subsidies_bg_logging": "Categories: country ",
			"country_subsidies_bg_fishing": "Categories: country ",
			"country_subsidies_bg_whaling": "Categories: country ",
			"country_subsidies_bg_agriculture": "Categories: country ",
			"country_subsidies_bg_ranching": "Categories: country ",
			"country_subsidies_bg_plantations": "Categories: country ",
			"country_subsidies_bg_service": "Categories: country ",
			"country_subsidies_bg_manufacturing": "Categories: country ",
			"country_subsidies_bg_infrastructure": "Categories: country ",
			"country_subsidies_bg_trade": "Categories: country ",
			"country_mandate_subsidies": "Categories: country ",
			"country_allow_multiple_alliances": "Categories: country ",
			"state_disallow_incorporation": "Categories: state ",
			"market_disallow_trade_routes": "Categories: market ",
			"country_ignores_landing_craft_penalty": "Categories: country ",
			"country_private_buildings_protected": "Categories: country ",
			"country_disable_investment_pool": "Categories: country ",
			"character_battle_condition_dug_in_mult": "Categories: character ",
			"character_battle_condition_charted_terrain_mult": "Categories: character ",
			"character_battle_condition_rapid_advance_mult": "Categories: character ",
			"character_battle_condition_camouflaged_mult": "Categories: character ",
			"character_battle_condition_logistics_secured_mult": "Categories: character ",
			"character_battle_condition_mud_mult": "Categories: character ",
			"character_battle_condition_broken_supply_line_mult": "Categories: character ",
			"character_battle_condition_exhausted_mult": "Categories: character ",
			"character_battle_condition_lost_mult": "Categories: character ",
			"character_battle_condition_surprise_maneuver_mult": "Categories: character ",
			"character_battle_condition_aggressive_maneuver_mult": "Categories: character ",
			"character_battle_condition_careful_maneuver_mult": "Categories: character ",
			"character_battle_condition_blunder_mult": "Categories: character ",
			"character_battle_condition_poor_visibility_mult": "Categories: character ",
			"character_battle_condition_good_visibility_mult": "Categories: character ",
			"character_battle_condition_rough_waters_mult": "Categories: character ",
			"character_battle_condition_strong_winds_mult": "Categories: character ",
			"character_battle_condition_death_from_below_mult": "Categories: character ",
			"character_battle_condition_ramming_maneuver_mult": "Categories: character ",
			"character_expedition_events_explorer_mult": "Categories: character ",
			"country_expedition_events_explorer_mult": "Categories: country ",
			"interest_group_in_government_attraction_mult": "Categories: interest_group ",
			"unit_offense_flat_add": "Categories: unit ",
			"unit_offense_flat_mult": "Categories: unit ",
			"unit_defense_flat_add": "Categories: unit ",
			"unit_defense_flat_mult": "Categories: unit ",
			"unit_offense_elevated_add": "Categories: unit ",
			"unit_offense_elevated_mult": "Categories: unit ",
			"unit_defense_elevated_add": "Categories: unit ",
			"unit_defense_elevated_mult": "Categories: unit ",
			"unit_offense_forested_add": "Categories: unit ",
			"unit_offense_forested_mult": "Categories: unit ",
			"unit_defense_forested_add": "Categories: unit ",
			"unit_defense_forested_mult": "Categories: unit ",
			"unit_offense_hazardous_add": "Categories: unit ",
			"unit_offense_hazardous_mult": "Categories: unit ",
			"unit_defense_hazardous_add": "Categories: unit ",
			"unit_defense_hazardous_mult": "Categories: unit ",
			"unit_offense_developed_add": "Categories: unit ",
			"unit_offense_developed_mult": "Categories: unit ",
			"unit_defense_developed_add": "Categories: unit ",
			"unit_defense_developed_mult": "Categories: unit ",
			"unit_offense_water_add": "Categories: unit ",
			"unit_offense_water_mult": "Categories: unit ",
			"unit_defense_water_add": "Categories: unit ",
			"unit_defense_water_mult": "Categories: unit ",
			"state_catholic_standard_of_living_add": "Categories: state ",
			"state_protestant_standard_of_living_add": "Categories: state ",
			"state_orthodox_standard_of_living_add": "Categories: state ",
			"state_oriental_orthodox_standard_of_living_add": "Categories: state ",
			"state_sunni_standard_of_living_add": "Categories: state ",
			"state_shiite_standard_of_living_add": "Categories: state ",
			"state_jewish_standard_of_living_add": "Categories: state ",
			"state_mahayana_standard_of_living_add": "Categories: state ",
			"state_gelugpa_standard_of_living_add": "Categories: state ",
			"state_theravada_standard_of_living_add": "Categories: state ",
			"state_hindu_standard_of_living_add": "Categories: state ",
			"state_shinto_standard_of_living_add": "Categories: state ",
			"state_sikh_standard_of_living_add": "Categories: state ",
			"state_animist_standard_of_living_add": "Categories: state ",
			"state_welsh_standard_of_living_add": "Categories: state ",
			"state_scottish_standard_of_living_add": "Categories: state ",
			"state_galician_standard_of_living_add": "Categories: state ",
			"state_malay_standard_of_living_add": "Categories: state ",
			"state_bornean_standard_of_living_add": "Categories: state ",
			"state_sumatran_standard_of_living_add": "Categories: state ",
			"state_balinese_standard_of_living_add": "Categories: state ",
			"state_cajun_standard_of_living_add": "Categories: state ",
			"state_assyrian_standard_of_living_add": "Categories: state ",
			"state_circassian_standard_of_living_add": "Categories: state ",
			"state_north_german_standard_of_living_add": "Categories: state ",
			"state_south_german_standard_of_living_add": "Categories: state ",
			"state_ashkenazi_standard_of_living_add": "Categories: state ",
			"state_dutch_standard_of_living_add": "Categories: state ",
			"state_flemish_standard_of_living_add": "Categories: state ",
			"state_wallonian_standard_of_living_add": "Categories: state ",
			"state_boer_standard_of_living_add": "Categories: state ",
			"state_swiss_standard_of_living_add": "Categories: state ",
			"state_swedish_standard_of_living_add": "Categories: state ",
			"state_danish_standard_of_living_add": "Categories: state ",
			"state_norwegian_standard_of_living_add": "Categories: state ",
			"state_icelandic_standard_of_living_add": "Categories: state ",
			"state_finnish_standard_of_living_add": "Categories: state ",
			"state_sami_standard_of_living_add": "Categories: state ",
			"state_british_standard_of_living_add": "Categories: state ",
			"state_irish_standard_of_living_add": "Categories: state ",
			"state_australian_standard_of_living_add": "Categories: state ",
			"state_north_italian_standard_of_living_add": "Categories: state ",
			"state_south_italian_standard_of_living_add": "Categories: state ",
			"state_maltese_standard_of_living_add": "Categories: state ",
			"state_basque_standard_of_living_add": "Categories: state ",
			"state_spanish_standard_of_living_add": "Categories: state ",
			"state_catalan_standard_of_living_add": "Categories: state ",
			"state_portuguese_standard_of_living_add": "Categories: state ",
			"state_french_standard_of_living_add": "Categories: state ",
			"state_occitan_standard_of_living_add": "Categories: state ",
			"state_breton_standard_of_living_add": "Categories: state ",
			"state_croat_standard_of_living_add": "Categories: state ",
			"state_serb_standard_of_living_add": "Categories: state ",
			"state_bulgarian_standard_of_living_add": "Categories: state ",
			"state_albanian_standard_of_living_add": "Categories: state ",
			"state_slovene_standard_of_living_add": "Categories: state ",
			"state_bosniak_standard_of_living_add": "Categories: state ",
			"state_romanian_standard_of_living_add": "Categories: state ",
			"state_hungarian_standard_of_living_add": "Categories: state ",
			"state_polish_standard_of_living_add": "Categories: state ",
			"state_lithuanian_standard_of_living_add": "Categories: state ",
			"state_czech_standard_of_living_add": "Categories: state ",
			"state_slovak_standard_of_living_add": "Categories: state ",
			"state_russian_standard_of_living_add": "Categories: state ",
			"state_byelorussian_standard_of_living_add": "Categories: state ",
			"state_ukrainian_standard_of_living_add": "Categories: state ",
			"state_ugrian_standard_of_living_add": "Categories: state ",
			"state_latvian_standard_of_living_add": "Categories: state ",
			"state_estonian_standard_of_living_add": "Categories: state ",
			"state_greek_standard_of_living_add": "Categories: state ",
			"state_georgian_standard_of_living_add": "Categories: state ",
			"state_armenian_standard_of_living_add": "Categories: state ",
			"state_sephardic_standard_of_living_add": "Categories: state ",
			"state_turkish_standard_of_living_add": "Categories: state ",
			"state_azerbaijani_standard_of_living_add": "Categories: state ",
			"state_north_caucasian_standard_of_living_add": "Categories: state ",
			"state_maghrebi_standard_of_living_add": "Categories: state ",
			"state_misri_standard_of_living_add": "Categories: state ",
			"state_mashriqi_standard_of_living_add": "Categories: state ",
			"state_bedouin_standard_of_living_add": "Categories: state ",
			"state_berber_standard_of_living_add": "Categories: state ",
			"state_persian_standard_of_living_add": "Categories: state ",
			"state_uzbek_standard_of_living_add": "Categories: state ",
			"state_kazak_standard_of_living_add": "Categories: state ",
			"state_kirgiz_standard_of_living_add": "Categories: state ",
			"state_tajik_standard_of_living_add": "Categories: state ",
			"state_uighur_standard_of_living_add": "Categories: state ",
			"state_pashtun_standard_of_living_add": "Categories: state ",
			"state_baluchi_standard_of_living_add": "Categories: state ",
			"state_hazara_standard_of_living_add": "Categories: state ",
			"state_turkmen_standard_of_living_add": "Categories: state ",
			"state_kurdish_standard_of_living_add": "Categories: state ",
			"state_tatar_standard_of_living_add": "Categories: state ",
			"state_mongol_standard_of_living_add": "Categories: state ",
			"state_kalmyk_standard_of_living_add": "Categories: state ",
			"state_siberian_standard_of_living_add": "Categories: state ",
			"state_yakut_standard_of_living_add": "Categories: state ",
			"state_tibetan_standard_of_living_add": "Categories: state ",
			"state_assamese_standard_of_living_add": "Categories: state ",
			"state_bengali_standard_of_living_add": "Categories: state ",
			"state_bihari_standard_of_living_add": "Categories: state ",
			"state_manipuri_standard_of_living_add": "Categories: state ",
			"state_nepali_standard_of_living_add": "Categories: state ",
			"state_oriya_standard_of_living_add": "Categories: state ",
			"state_sinhala_standard_of_living_add": "Categories: state ",
			"state_avadhi_standard_of_living_add": "Categories: state ",
			"state_kanauji_standard_of_living_add": "Categories: state ",
			"state_panjabi_standard_of_living_add": "Categories: state ",
			"state_kashmiri_standard_of_living_add": "Categories: state ",
			"state_gujarati_standard_of_living_add": "Categories: state ",
			"state_marathi_standard_of_living_add": "Categories: state ",
			"state_sindi_standard_of_living_add": "Categories: state ",
			"state_rajput_standard_of_living_add": "Categories: state ",
			"state_kannada_standard_of_living_add": "Categories: state ",
			"state_malayalam_standard_of_living_add": "Categories: state ",
			"state_tamil_standard_of_living_add": "Categories: state ",
			"state_telegu_standard_of_living_add": "Categories: state ",
			"state_vietnamese_standard_of_living_add": "Categories: state ",
			"state_khmer_standard_of_living_add": "Categories: state ",
			"state_batak_standard_of_living_add": "Categories: state ",
			"state_dayak_standard_of_living_add": "Categories: state ",
			"state_malagasy_standard_of_living_add": "Categories: state ",
			"state_filipino_standard_of_living_add": "Categories: state ",
			"state_moro_standard_of_living_add": "Categories: state ",
			"state_javan_standard_of_living_add": "Categories: state ",
			"state_moluccan_standard_of_living_add": "Categories: state ",
			"state_thai_standard_of_living_add": "Categories: state ",
			"state_mon_standard_of_living_add": "Categories: state ",
			"state_khmu_standard_of_living_add": "Categories: state ",
			"state_lao_standard_of_living_add": "Categories: state ",
			"state_shan_standard_of_living_add": "Categories: state ",
			"state_burmese_standard_of_living_add": "Categories: state ",
			"state_kachin_standard_of_living_add": "Categories: state ",
			"state_karen_standard_of_living_add": "Categories: state ",
			"state_japanese_standard_of_living_add": "Categories: state ",
			"state_manchu_standard_of_living_add": "Categories: state ",
			"state_han_standard_of_living_add": "Categories: state ",
			"state_korean_standard_of_living_add": "Categories: state ",
			"state_ainu_standard_of_living_add": "Categories: state ",
			"state_hakka_standard_of_living_add": "Categories: state ",
			"state_miao_standard_of_living_add": "Categories: state ",
			"state_min_standard_of_living_add": "Categories: state ",
			"state_zhuang_standard_of_living_add": "Categories: state ",
			"state_yi_standard_of_living_add": "Categories: state ",
			"state_yue_standard_of_living_add": "Categories: state ",
			"state_polynesian_standard_of_living_add": "Categories: state ",
			"state_hawaiian_standard_of_living_add": "Categories: state ",
			"state_melanesian_standard_of_living_add": "Categories: state ",
			"state_micronesian_standard_of_living_add": "Categories: state ",
			"state_maori_standard_of_living_add": "Categories: state ",
			"state_aborigine_standard_of_living_add": "Categories: state ",
			"state_zapotec_standard_of_living_add": "Categories: state ",
			"state_mayan_standard_of_living_add": "Categories: state ",
			"state_nahua_standard_of_living_add": "Categories: state ",
			"state_tarascan_standard_of_living_add": "Categories: state ",
			"state_quechua_standard_of_living_add": "Categories: state ",
			"state_guarani_standard_of_living_add": "Categories: state ",
			"state_aimara_standard_of_living_add": "Categories: state ",
			"state_amazonian_standard_of_living_add": "Categories: state ",
			"state_patagonian_standard_of_living_add": "Categories: state ",
			"state_guajiro_standard_of_living_add": "Categories: state ",
			"state_tupinamba_standard_of_living_add": "Categories: state ",
			"state_metis_standard_of_living_add": "Categories: state ",
			"state_dakota_standard_of_living_add": "Categories: state ",
			"state_cherokee_standard_of_living_add": "Categories: state ",
			"state_muskogean_standard_of_living_add": "Categories: state ",
			"state_pueblo_standard_of_living_add": "Categories: state ",
			"state_inuit_standard_of_living_add": "Categories: state ",
			"state_cree_standard_of_living_add": "Categories: state ",
			"state_navajo_standard_of_living_add": "Categories: state ",
			"state_athabaskan_standard_of_living_add": "Categories: state ",
			"state_salish_standard_of_living_add": "Categories: state ",
			"state_nez_perce_standard_of_living_add": "Categories: state ",
			"state_siouan_standard_of_living_add": "Categories: state ",
			"state_comanche_standard_of_living_add": "Categories: state ",
			"state_algonquian_standard_of_living_add": "Categories: state ",
			"state_iroquoian_standard_of_living_add": "Categories: state ",
			"state_caddoan_standard_of_living_add": "Categories: state ",
			"state_paiute_standard_of_living_add": "Categories: state ",
			"state_hokan_standard_of_living_add": "Categories: state ",
			"state_apache_standard_of_living_add": "Categories: state ",
			"state_oodham_standard_of_living_add": "Categories: state ",
			"state_mixtec_standard_of_living_add": "Categories: state ",
			"state_muisca_standard_of_living_add": "Categories: state ",
			"state_miskito_standard_of_living_add": "Categories: state ",
			"state_cariban_standard_of_living_add": "Categories: state ",
			"state_yankee_standard_of_living_add": "Categories: state ",
			"state_dixie_standard_of_living_add": "Categories: state ",
			"state_mexican_standard_of_living_add": "Categories: state ",
			"state_central_american_standard_of_living_add": "Categories: state ",
			"state_caribeno_standard_of_living_add": "Categories: state ",
			"state_north_andean_standard_of_living_add": "Categories: state ",
			"state_south_andean_standard_of_living_add": "Categories: state ",
			"state_platinean_standard_of_living_add": "Categories: state ",
			"state_brazilian_standard_of_living_add": "Categories: state ",
			"state_afro_american_standard_of_living_add": "Categories: state ",
			"state_afro_caribbean_standard_of_living_add": "Categories: state ",
			"state_afro_caribeno_standard_of_living_add": "Categories: state ",
			"state_afro_brazilian_standard_of_living_add": "Categories: state ",
			"state_afro_antillean_standard_of_living_add": "Categories: state ",
			"state_akan_standard_of_living_add": "Categories: state ",
			"state_bambara_standard_of_living_add": "Categories: state ",
			"state_bassa_standard_of_living_add": "Categories: state ",
			"state_dyula_standard_of_living_add": "Categories: state ",
			"state_edo_standard_of_living_add": "Categories: state ",
			"state_ewe_standard_of_living_add": "Categories: state ",
			"state_fon_standard_of_living_add": "Categories: state ",
			"state_fulbe_standard_of_living_add": "Categories: state ",
			"state_haratin_standard_of_living_add": "Categories: state ",
			"state_hausa_standard_of_living_add": "Categories: state ",
			"state_ibibio_standard_of_living_add": "Categories: state ",
			"state_ibo_standard_of_living_add": "Categories: state ",
			"state_kissi_standard_of_living_add": "Categories: state ",
			"state_kru_standard_of_living_add": "Categories: state ",
			"state_mande_standard_of_living_add": "Categories: state ",
			"state_maures_standard_of_living_add": "Categories: state ",
			"state_mossi_standard_of_living_add": "Categories: state ",
			"state_senufo_standard_of_living_add": "Categories: state ",
			"state_songhai_standard_of_living_add": "Categories: state ",
			"state_tiv_standard_of_living_add": "Categories: state ",
			"state_tuareg_standard_of_living_add": "Categories: state ",
			"state_wolof_standard_of_living_add": "Categories: state ",
			"state_yoruba_standard_of_living_add": "Categories: state ",
			"state_bakongo_standard_of_living_add": "Categories: state ",
			"state_baguirmi_standard_of_living_add": "Categories: state ",
			"state_fang_standard_of_living_add": "Categories: state ",
			"state_kanuri_standard_of_living_add": "Categories: state ",
			"state_luba_standard_of_living_add": "Categories: state ",
			"state_lunda_standard_of_living_add": "Categories: state ",
			"state_mongo_standard_of_living_add": "Categories: state ",
			"state_sara_standard_of_living_add": "Categories: state ",
			"state_teda_standard_of_living_add": "Categories: state ",
			"state_equatorial_bantu_standard_of_living_add": "Categories: state ",
			"state_fluvian_bantu_standard_of_living_add": "Categories: state ",
			"state_nilotic_standard_of_living_add": "Categories: state ",
			"state_amhara_standard_of_living_add": "Categories: state ",
			"state_afar_standard_of_living_add": "Categories: state ",
			"state_azande_standard_of_living_add": "Categories: state ",
			"state_baganda_standard_of_living_add": "Categories: state ",
			"state_beja_standard_of_living_add": "Categories: state ",
			"state_dinka_standard_of_living_add": "Categories: state ",
			"state_fur_standard_of_living_add": "Categories: state ",
			"state_kikuyu_standard_of_living_add": "Categories: state ",
			"state_luo_standard_of_living_add": "Categories: state ",
			"state_maasai_standard_of_living_add": "Categories: state ",
			"state_nuer_standard_of_living_add": "Categories: state ",
			"state_nuba_standard_of_living_add": "Categories: state ",
			"state_oromo_standard_of_living_add": "Categories: state ",
			"state_ruanda_standard_of_living_add": "Categories: state ",
			"state_rundi_standard_of_living_add": "Categories: state ",
			"state_sidama_standard_of_living_add": "Categories: state ",
			"state_somali_standard_of_living_add": "Categories: state ",
			"state_sudanese_standard_of_living_add": "Categories: state ",
			"state_sukuma_standard_of_living_add": "Categories: state ",
			"state_swahili_standard_of_living_add": "Categories: state ",
			"state_tigray_standard_of_living_add": "Categories: state ",
			"state_unyamwezi_standard_of_living_add": "Categories: state ",
			"state_lacustrine_bantu_standard_of_living_add": "Categories: state ",
			"state_chewa_standard_of_living_add": "Categories: state ",
			"state_herero_standard_of_living_add": "Categories: state ",
			"state_khoisan_standard_of_living_add": "Categories: state ",
			"state_lomwe_standard_of_living_add": "Categories: state ",
			"state_makua_standard_of_living_add": "Categories: state ",
			"state_nguni_standard_of_living_add": "Categories: state ",
			"state_ovimbundu_standard_of_living_add": "Categories: state ",
			"state_sena_standard_of_living_add": "Categories: state ",
			"state_shona_standard_of_living_add": "Categories: state ",
			"state_sotho_standard_of_living_add": "Categories: state ",
			"state_tonga_standard_of_living_add": "Categories: state ",
			"state_tswana_standard_of_living_add": "Categories: state ",
			"state_xhosa_standard_of_living_add": "Categories: state ",
			"state_yao_standard_of_living_add": "Categories: state ",
			"state_zulu_standard_of_living_add": "Categories: state ",
			"state_kavango_bantu_standard_of_living_add": "Categories: state ",
			"state_anglo_canadian_standard_of_living_add": "Categories: state ",
			"state_franco_canadian_standard_of_living_add": "Categories: state ",
			"state_sorb_standard_of_living_add": "Categories: state ",
			"state_tuvan_standard_of_living_add": "Categories: state ",
			"state_corsican_standard_of_living_add": "Categories: state ",
			"state_yemenite_standard_of_living_add": "Categories: state ",
			"country_institution_colonial_affairs_max_investment_add": "Categories: country ",
			"country_institution_social_security_max_investment_add": "Categories: country ",
			"country_institution_workplace_safety_max_investment_add": "Categories: country ",
			"country_institution_schools_max_investment_add": "Categories: country ",
			"country_institution_police_max_investment_add": "Categories: country ",
			"country_institution_health_system_max_investment_add": "Categories: country ",
			"country_institution_home_affairs_max_investment_add": "Categories: country ",
			"country_academics_pol_str_mult": "Categories: country ",
			"country_academics_voting_power_add": "Categories: country ",
			"state_academics_mortality_mult": "Categories: state ",
			"state_academics_dependent_wage_mult": "Categories: state ",
			"building_employment_academics_add": "Categories: building ",
			"building_employment_academics_mult": "Categories: building ",
			"building_academics_fertility_mult": "Categories: building ",
			"building_academics_mortality_mult": "Categories: building ",
			"state_academics_investment_pool_contribution_add": "Categories: state ",
			"state_academics_investment_pool_efficiency_mult": "Categories: state ",
			"building_academics_shares_add": "Categories: building ",
			"building_academics_shares_mult": "Categories: building ",
			"country_aristocrats_pol_str_mult": "Categories: country ",
			"country_aristocrats_voting_power_add": "Categories: country ",
			"state_aristocrats_mortality_mult": "Categories: state ",
			"state_aristocrats_dependent_wage_mult": "Categories: state ",
			"building_employment_aristocrats_add": "Categories: building ",
			"building_employment_aristocrats_mult": "Categories: building ",
			"building_aristocrats_fertility_mult": "Categories: building ",
			"building_aristocrats_mortality_mult": "Categories: building ",
			"state_aristocrats_investment_pool_contribution_add": "Categories: state ",
			"state_aristocrats_investment_pool_efficiency_mult": "Categories: state ",
			"building_aristocrats_shares_add": "Categories: building ",
			"building_aristocrats_shares_mult": "Categories: building ",
			"country_bureaucrats_pol_str_mult": "Categories: country ",
			"country_bureaucrats_voting_power_add": "Categories: country ",
			"state_bureaucrats_mortality_mult": "Categories: state ",
			"state_bureaucrats_dependent_wage_mult": "Categories: state ",
			"building_employment_bureaucrats_add": "Categories: building ",
			"building_employment_bureaucrats_mult": "Categories: building ",
			"building_bureaucrats_fertility_mult": "Categories: building ",
			"building_bureaucrats_mortality_mult": "Categories: building ",
			"state_bureaucrats_investment_pool_contribution_add": "Categories: state ",
			"state_bureaucrats_investment_pool_efficiency_mult": "Categories: state ",
			"building_bureaucrats_shares_add": "Categories: building ",
			"building_bureaucrats_shares_mult": "Categories: building ",
			"country_capitalists_pol_str_mult": "Categories: country ",
			"country_capitalists_voting_power_add": "Categories: country ",
			"state_capitalists_mortality_mult": "Categories: state ",
			"state_capitalists_dependent_wage_mult": "Categories: state ",
			"building_employment_capitalists_add": "Categories: building ",
			"building_employment_capitalists_mult": "Categories: building ",
			"building_capitalists_fertility_mult": "Categories: building ",
			"building_capitalists_mortality_mult": "Categories: building ",
			"state_capitalists_investment_pool_contribution_add": "Categories: state ",
			"state_capitalists_investment_pool_efficiency_mult": "Categories: state ",
			"building_capitalists_shares_add": "Categories: building ",
			"building_capitalists_shares_mult": "Categories: building ",
			"country_clergymen_pol_str_mult": "Categories: country ",
			"country_clergymen_voting_power_add": "Categories: country ",
			"state_clergymen_mortality_mult": "Categories: state ",
			"state_clergymen_dependent_wage_mult": "Categories: state ",
			"building_employment_clergymen_add": "Categories: building ",
			"building_employment_clergymen_mult": "Categories: building ",
			"building_clergymen_fertility_mult": "Categories: building ",
			"building_clergymen_mortality_mult": "Categories: building ",
			"state_clergymen_investment_pool_contribution_add": "Categories: state ",
			"state_clergymen_investment_pool_efficiency_mult": "Categories: state ",
			"building_clergymen_shares_add": "Categories: building ",
			"building_clergymen_shares_mult": "Categories: building ",
			"country_clerks_pol_str_mult": "Categories: country ",
			"country_clerks_voting_power_add": "Categories: country ",
			"state_clerks_mortality_mult": "Categories: state ",
			"state_clerks_dependent_wage_mult": "Categories: state ",
			"building_employment_clerks_add": "Categories: building ",
			"building_employment_clerks_mult": "Categories: building ",
			"building_clerks_fertility_mult": "Categories: building ",
			"building_clerks_mortality_mult": "Categories: building ",
			"state_clerks_investment_pool_contribution_add": "Categories: state ",
			"state_clerks_investment_pool_efficiency_mult": "Categories: state ",
			"building_clerks_shares_add": "Categories: building ",
			"building_clerks_shares_mult": "Categories: building ",
			"country_engineers_pol_str_mult": "Categories: country ",
			"country_engineers_voting_power_add": "Categories: country ",
			"state_engineers_mortality_mult": "Categories: state ",
			"state_engineers_dependent_wage_mult": "Categories: state ",
			"building_employment_engineers_add": "Categories: building ",
			"building_employment_engineers_mult": "Categories: building ",
			"building_engineers_fertility_mult": "Categories: building ",
			"building_engineers_mortality_mult": "Categories: building ",
			"state_engineers_investment_pool_contribution_add": "Categories: state ",
			"state_engineers_investment_pool_efficiency_mult": "Categories: state ",
			"building_engineers_shares_add": "Categories: building ",
			"building_engineers_shares_mult": "Categories: building ",
			"country_farmers_pol_str_mult": "Categories: country ",
			"country_farmers_voting_power_add": "Categories: country ",
			"state_farmers_mortality_mult": "Categories: state ",
			"state_farmers_dependent_wage_mult": "Categories: state ",
			"building_employment_farmers_add": "Categories: building ",
			"building_employment_farmers_mult": "Categories: building ",
			"building_farmers_fertility_mult": "Categories: building ",
			"building_farmers_mortality_mult": "Categories: building ",
			"state_farmers_investment_pool_contribution_add": "Categories: state ",
			"state_farmers_investment_pool_efficiency_mult": "Categories: state ",
			"building_farmers_shares_add": "Categories: building ",
			"building_farmers_shares_mult": "Categories: building ",
			"country_laborers_pol_str_mult": "Categories: country ",
			"country_laborers_voting_power_add": "Categories: country ",
			"state_laborers_mortality_mult": "Categories: state ",
			"state_laborers_dependent_wage_mult": "Categories: state ",
			"building_employment_laborers_add": "Categories: building ",
			"building_employment_laborers_mult": "Categories: building ",
			"building_laborers_fertility_mult": "Categories: building ",
			"building_laborers_mortality_mult": "Categories: building ",
			"state_laborers_investment_pool_contribution_add": "Categories: state ",
			"state_laborers_investment_pool_efficiency_mult": "Categories: state ",
			"building_laborers_shares_add": "Categories: building ",
			"building_laborers_shares_mult": "Categories: building ",
			"country_machinists_pol_str_mult": "Categories: country ",
			"country_machinists_voting_power_add": "Categories: country ",
			"state_machinists_mortality_mult": "Categories: state ",
			"state_machinists_dependent_wage_mult": "Categories: state ",
			"building_employment_machinists_add": "Categories: building ",
			"building_employment_machinists_mult": "Categories: building ",
			"building_machinists_fertility_mult": "Categories: building ",
			"building_machinists_mortality_mult": "Categories: building ",
			"state_machinists_investment_pool_contribution_add": "Categories: state ",
			"state_machinists_investment_pool_efficiency_mult": "Categories: state ",
			"building_machinists_shares_add": "Categories: building ",
			"building_machinists_shares_mult": "Categories: building ",
			"country_officers_pol_str_mult": "Categories: country ",
			"country_officers_voting_power_add": "Categories: country ",
			"state_officers_mortality_mult": "Categories: state ",
			"state_officers_dependent_wage_mult": "Categories: state ",
			"building_employment_officers_add": "Categories: building ",
			"building_employment_officers_mult": "Categories: building ",
			"building_officers_fertility_mult": "Categories: building ",
			"building_officers_mortality_mult": "Categories: building ",
			"state_officers_investment_pool_contribution_add": "Categories: state ",
			"state_officers_investment_pool_efficiency_mult": "Categories: state ",
			"building_officers_shares_add": "Categories: building ",
			"building_officers_shares_mult": "Categories: building ",
			"country_peasants_pol_str_mult": "Categories: country ",
			"country_peasants_voting_power_add": "Categories: country ",
			"state_peasants_mortality_mult": "Categories: state ",
			"state_peasants_dependent_wage_mult": "Categories: state ",
			"building_employment_peasants_add": "Categories: building ",
			"building_employment_peasants_mult": "Categories: building ",
			"building_peasants_fertility_mult": "Categories: building ",
			"building_peasants_mortality_mult": "Categories: building ",
			"state_peasants_investment_pool_contribution_add": "Categories: state ",
			"state_peasants_investment_pool_efficiency_mult": "Categories: state ",
			"building_peasants_shares_add": "Categories: building ",
			"building_peasants_shares_mult": "Categories: building ",
			"country_shopkeepers_pol_str_mult": "Categories: country ",
			"country_shopkeepers_voting_power_add": "Categories: country ",
			"state_shopkeepers_mortality_mult": "Categories: state ",
			"state_shopkeepers_dependent_wage_mult": "Categories: state ",
			"building_employment_shopkeepers_add": "Categories: building ",
			"building_employment_shopkeepers_mult": "Categories: building ",
			"building_shopkeepers_fertility_mult": "Categories: building ",
			"building_shopkeepers_mortality_mult": "Categories: building ",
			"state_shopkeepers_investment_pool_contribution_add": "Categories: state ",
			"state_shopkeepers_investment_pool_efficiency_mult": "Categories: state ",
			"building_shopkeepers_shares_add": "Categories: building ",
			"building_shopkeepers_shares_mult": "Categories: building ",
			"country_slaves_pol_str_mult": "Categories: country ",
			"country_slaves_voting_power_add": "Categories: country ",
			"state_slaves_mortality_mult": "Categories: state ",
			"state_slaves_dependent_wage_mult": "Categories: state ",
			"building_employment_slaves_add": "Categories: building ",
			"building_employment_slaves_mult": "Categories: building ",
			"building_slaves_fertility_mult": "Categories: building ",
			"building_slaves_mortality_mult": "Categories: building ",
			"state_slaves_investment_pool_contribution_add": "Categories: state ",
			"state_slaves_investment_pool_efficiency_mult": "Categories: state ",
			"building_slaves_shares_add": "Categories: building ",
			"building_slaves_shares_mult": "Categories: building ",
			"country_soldiers_pol_str_mult": "Categories: country ",
			"country_soldiers_voting_power_add": "Categories: country ",
			"state_soldiers_mortality_mult": "Categories: state ",
			"state_soldiers_dependent_wage_mult": "Categories: state ",
			"building_employment_soldiers_add": "Categories: building ",
			"building_employment_soldiers_mult": "Categories: building ",
			"building_soldiers_fertility_mult": "Categories: building ",
			"building_soldiers_mortality_mult": "Categories: building ",
			"state_soldiers_investment_pool_contribution_add": "Categories: state ",
			"state_soldiers_investment_pool_efficiency_mult": "Categories: state ",
			"building_soldiers_shares_add": "Categories: building ",
			"building_soldiers_shares_mult": "Categories: building ",
			"building_group_bg_manufacturing_fertility_mult": "Categories: building ",
			"building_group_bg_manufacturing_academics_fertility_mult": "Categories: building ",
			"building_group_bg_manufacturing_academics_mortality_mult": "Categories: building ",
			"building_group_bg_manufacturing_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_manufacturing_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_manufacturing_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_manufacturing_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_manufacturing_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_manufacturing_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_manufacturing_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_manufacturing_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_manufacturing_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_manufacturing_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_manufacturing_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_manufacturing_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_manufacturing_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_manufacturing_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_manufacturing_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_manufacturing_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_manufacturing_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_manufacturing_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_manufacturing_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_manufacturing_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_manufacturing_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_manufacturing_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_manufacturing_officers_fertility_mult": "Categories: building ",
			"building_group_bg_manufacturing_officers_mortality_mult": "Categories: building ",
			"building_group_bg_manufacturing_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_manufacturing_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_manufacturing_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_manufacturing_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_manufacturing_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_manufacturing_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_manufacturing_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_manufacturing_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_manufacturing_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_manufacturing_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_manufacturing_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_manufacturing_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_manufacturing_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_light_industry_throughput_mult": "Categories: building ",
			"building_group_bg_light_industry_fertility_mult": "Categories: building ",
			"building_group_bg_light_industry_employee_mult": "Categories: building ",
			"building_group_bg_light_industry_mortality_mult": "Categories: building ",
			"building_group_bg_light_industry_tax_mult": "Categories: building ",
			"building_group_bg_light_industry_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_light_industry": "Categories: country ",
			"building_group_bg_light_industry_academics_fertility_mult": "Categories: building ",
			"building_group_bg_light_industry_academics_mortality_mult": "Categories: building ",
			"building_group_bg_light_industry_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_light_industry_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_light_industry_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_light_industry_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_light_industry_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_light_industry_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_light_industry_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_light_industry_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_light_industry_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_light_industry_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_light_industry_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_light_industry_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_light_industry_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_light_industry_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_light_industry_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_light_industry_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_light_industry_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_light_industry_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_light_industry_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_light_industry_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_light_industry_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_light_industry_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_light_industry_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_light_industry_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_light_industry_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_light_industry_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_light_industry_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_light_industry_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_light_industry_officers_fertility_mult": "Categories: building ",
			"building_group_bg_light_industry_officers_mortality_mult": "Categories: building ",
			"building_group_bg_light_industry_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_light_industry_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_light_industry_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_light_industry_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_light_industry_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_light_industry_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_light_industry_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_light_industry_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_light_industry_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_light_industry_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_light_industry_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_light_industry_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_light_industry_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_heavy_industry_throughput_mult": "Categories: building ",
			"building_group_bg_heavy_industry_fertility_mult": "Categories: building ",
			"building_group_bg_heavy_industry_employee_mult": "Categories: building ",
			"building_group_bg_heavy_industry_mortality_mult": "Categories: building ",
			"building_group_bg_heavy_industry_tax_mult": "Categories: building ",
			"building_group_bg_heavy_industry_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_heavy_industry": "Categories: country ",
			"building_group_bg_heavy_industry_academics_fertility_mult": "Categories: building ",
			"building_group_bg_heavy_industry_academics_mortality_mult": "Categories: building ",
			"building_group_bg_heavy_industry_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_heavy_industry_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_heavy_industry_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_heavy_industry_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_heavy_industry_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_heavy_industry_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_heavy_industry_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_heavy_industry_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_heavy_industry_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_heavy_industry_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_heavy_industry_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_heavy_industry_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_heavy_industry_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_heavy_industry_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_heavy_industry_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_heavy_industry_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_heavy_industry_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_heavy_industry_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_heavy_industry_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_heavy_industry_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_heavy_industry_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_heavy_industry_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_heavy_industry_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_heavy_industry_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_heavy_industry_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_heavy_industry_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_heavy_industry_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_heavy_industry_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_heavy_industry_officers_fertility_mult": "Categories: building ",
			"building_group_bg_heavy_industry_officers_mortality_mult": "Categories: building ",
			"building_group_bg_heavy_industry_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_heavy_industry_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_heavy_industry_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_heavy_industry_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_heavy_industry_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_heavy_industry_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_heavy_industry_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_heavy_industry_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_heavy_industry_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_heavy_industry_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_heavy_industry_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_heavy_industry_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_heavy_industry_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_agriculture_fertility_mult": "Categories: building ",
			"building_group_bg_agriculture_academics_fertility_mult": "Categories: building ",
			"building_group_bg_agriculture_academics_mortality_mult": "Categories: building ",
			"building_group_bg_agriculture_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_agriculture_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_agriculture_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_agriculture_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_agriculture_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_agriculture_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_agriculture_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_agriculture_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_agriculture_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_agriculture_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_agriculture_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_agriculture_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_agriculture_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_agriculture_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_agriculture_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_agriculture_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_agriculture_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_agriculture_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_agriculture_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_agriculture_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_agriculture_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_agriculture_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_agriculture_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_agriculture_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_agriculture_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_agriculture_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_agriculture_officers_fertility_mult": "Categories: building ",
			"building_group_bg_agriculture_officers_mortality_mult": "Categories: building ",
			"building_group_bg_agriculture_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_agriculture_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_agriculture_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_agriculture_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_agriculture_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_agriculture_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_agriculture_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_agriculture_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_agriculture_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_agriculture_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_agriculture_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_agriculture_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_agriculture_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_rye_farms_throughput_mult": "Categories: building ",
			"building_group_bg_rye_farms_fertility_mult": "Categories: building ",
			"building_group_bg_rye_farms_employee_mult": "Categories: building ",
			"building_group_bg_rye_farms_mortality_mult": "Categories: building ",
			"building_group_bg_rye_farms_tax_mult": "Categories: building ",
			"building_group_bg_rye_farms_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_rye_farms": "Categories: country ",
			"building_group_bg_rye_farms_academics_fertility_mult": "Categories: building ",
			"building_group_bg_rye_farms_academics_mortality_mult": "Categories: building ",
			"building_group_bg_rye_farms_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_rye_farms_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_rye_farms_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_rye_farms_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_rye_farms_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_rye_farms_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_rye_farms_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_rye_farms_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_rye_farms_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_rye_farms_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_rye_farms_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_rye_farms_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_rye_farms_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_rye_farms_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_rye_farms_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_rye_farms_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_rye_farms_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_rye_farms_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_rye_farms_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_rye_farms_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_rye_farms_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_rye_farms_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_rye_farms_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_rye_farms_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_rye_farms_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_rye_farms_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_rye_farms_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_rye_farms_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_rye_farms_officers_fertility_mult": "Categories: building ",
			"building_group_bg_rye_farms_officers_mortality_mult": "Categories: building ",
			"building_group_bg_rye_farms_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_rye_farms_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_rye_farms_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_rye_farms_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_rye_farms_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_rye_farms_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_rye_farms_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_rye_farms_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_rye_farms_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_rye_farms_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_rye_farms_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_rye_farms_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_rye_farms_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_wheat_farms_throughput_mult": "Categories: building ",
			"building_group_bg_wheat_farms_fertility_mult": "Categories: building ",
			"building_group_bg_wheat_farms_employee_mult": "Categories: building ",
			"building_group_bg_wheat_farms_mortality_mult": "Categories: building ",
			"building_group_bg_wheat_farms_tax_mult": "Categories: building ",
			"building_group_bg_wheat_farms_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_wheat_farms": "Categories: country ",
			"building_group_bg_wheat_farms_academics_fertility_mult": "Categories: building ",
			"building_group_bg_wheat_farms_academics_mortality_mult": "Categories: building ",
			"building_group_bg_wheat_farms_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_wheat_farms_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_wheat_farms_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_wheat_farms_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_wheat_farms_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_wheat_farms_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_wheat_farms_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_wheat_farms_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_wheat_farms_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_wheat_farms_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_wheat_farms_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_wheat_farms_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_wheat_farms_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_wheat_farms_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_wheat_farms_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_wheat_farms_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_wheat_farms_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_wheat_farms_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_wheat_farms_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_wheat_farms_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_wheat_farms_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_wheat_farms_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_wheat_farms_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_wheat_farms_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_wheat_farms_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_wheat_farms_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_wheat_farms_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_wheat_farms_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_wheat_farms_officers_fertility_mult": "Categories: building ",
			"building_group_bg_wheat_farms_officers_mortality_mult": "Categories: building ",
			"building_group_bg_wheat_farms_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_wheat_farms_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_wheat_farms_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_wheat_farms_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_wheat_farms_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_wheat_farms_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_wheat_farms_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_wheat_farms_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_wheat_farms_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_wheat_farms_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_wheat_farms_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_wheat_farms_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_wheat_farms_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_rice_farms_throughput_mult": "Categories: building ",
			"building_group_bg_rice_farms_fertility_mult": "Categories: building ",
			"building_group_bg_rice_farms_employee_mult": "Categories: building ",
			"building_group_bg_rice_farms_mortality_mult": "Categories: building ",
			"building_group_bg_rice_farms_tax_mult": "Categories: building ",
			"building_group_bg_rice_farms_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_rice_farms": "Categories: country ",
			"building_group_bg_rice_farms_academics_fertility_mult": "Categories: building ",
			"building_group_bg_rice_farms_academics_mortality_mult": "Categories: building ",
			"building_group_bg_rice_farms_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_rice_farms_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_rice_farms_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_rice_farms_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_rice_farms_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_rice_farms_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_rice_farms_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_rice_farms_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_rice_farms_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_rice_farms_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_rice_farms_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_rice_farms_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_rice_farms_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_rice_farms_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_rice_farms_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_rice_farms_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_rice_farms_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_rice_farms_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_rice_farms_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_rice_farms_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_rice_farms_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_rice_farms_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_rice_farms_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_rice_farms_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_rice_farms_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_rice_farms_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_rice_farms_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_rice_farms_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_rice_farms_officers_fertility_mult": "Categories: building ",
			"building_group_bg_rice_farms_officers_mortality_mult": "Categories: building ",
			"building_group_bg_rice_farms_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_rice_farms_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_rice_farms_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_rice_farms_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_rice_farms_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_rice_farms_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_rice_farms_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_rice_farms_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_rice_farms_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_rice_farms_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_rice_farms_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_rice_farms_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_rice_farms_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_maize_farms_throughput_mult": "Categories: building ",
			"building_group_bg_maize_farms_fertility_mult": "Categories: building ",
			"building_group_bg_maize_farms_employee_mult": "Categories: building ",
			"building_group_bg_maize_farms_mortality_mult": "Categories: building ",
			"building_group_bg_maize_farms_tax_mult": "Categories: building ",
			"building_group_bg_maize_farms_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_maize_farms": "Categories: country ",
			"building_group_bg_maize_farms_academics_fertility_mult": "Categories: building ",
			"building_group_bg_maize_farms_academics_mortality_mult": "Categories: building ",
			"building_group_bg_maize_farms_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_maize_farms_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_maize_farms_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_maize_farms_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_maize_farms_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_maize_farms_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_maize_farms_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_maize_farms_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_maize_farms_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_maize_farms_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_maize_farms_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_maize_farms_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_maize_farms_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_maize_farms_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_maize_farms_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_maize_farms_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_maize_farms_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_maize_farms_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_maize_farms_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_maize_farms_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_maize_farms_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_maize_farms_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_maize_farms_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_maize_farms_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_maize_farms_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_maize_farms_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_maize_farms_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_maize_farms_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_maize_farms_officers_fertility_mult": "Categories: building ",
			"building_group_bg_maize_farms_officers_mortality_mult": "Categories: building ",
			"building_group_bg_maize_farms_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_maize_farms_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_maize_farms_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_maize_farms_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_maize_farms_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_maize_farms_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_maize_farms_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_maize_farms_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_maize_farms_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_maize_farms_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_maize_farms_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_maize_farms_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_maize_farms_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_millet_farms_throughput_mult": "Categories: building ",
			"building_group_bg_millet_farms_fertility_mult": "Categories: building ",
			"building_group_bg_millet_farms_employee_mult": "Categories: building ",
			"building_group_bg_millet_farms_mortality_mult": "Categories: building ",
			"building_group_bg_millet_farms_tax_mult": "Categories: building ",
			"building_group_bg_millet_farms_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_millet_farms": "Categories: country ",
			"building_group_bg_millet_farms_academics_fertility_mult": "Categories: building ",
			"building_group_bg_millet_farms_academics_mortality_mult": "Categories: building ",
			"building_group_bg_millet_farms_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_millet_farms_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_millet_farms_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_millet_farms_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_millet_farms_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_millet_farms_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_millet_farms_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_millet_farms_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_millet_farms_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_millet_farms_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_millet_farms_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_millet_farms_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_millet_farms_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_millet_farms_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_millet_farms_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_millet_farms_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_millet_farms_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_millet_farms_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_millet_farms_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_millet_farms_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_millet_farms_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_millet_farms_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_millet_farms_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_millet_farms_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_millet_farms_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_millet_farms_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_millet_farms_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_millet_farms_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_millet_farms_officers_fertility_mult": "Categories: building ",
			"building_group_bg_millet_farms_officers_mortality_mult": "Categories: building ",
			"building_group_bg_millet_farms_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_millet_farms_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_millet_farms_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_millet_farms_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_millet_farms_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_millet_farms_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_millet_farms_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_millet_farms_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_millet_farms_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_millet_farms_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_millet_farms_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_millet_farms_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_millet_farms_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_agriculture_throughput_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_employee_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_tax_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_subsistence_agriculture": "Categories: country ",
			"building_group_bg_subsistence_agriculture_academics_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_academics_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_agriculture_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_agriculture_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_agriculture_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_agriculture_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_agriculture_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_agriculture_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_agriculture_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_agriculture_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_agriculture_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_agriculture_officers_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_officers_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_agriculture_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_agriculture_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_agriculture_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_agriculture_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_agriculture_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_ranching_fertility_mult": "Categories: building ",
			"building_group_bg_ranching_employee_mult": "Categories: building ",
			"building_group_bg_ranching_standard_of_living_add": "Categories: building ",
			"building_group_bg_ranching_academics_fertility_mult": "Categories: building ",
			"building_group_bg_ranching_academics_mortality_mult": "Categories: building ",
			"building_group_bg_ranching_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_ranching_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_ranching_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_ranching_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_ranching_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_ranching_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_ranching_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_ranching_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_ranching_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_ranching_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_ranching_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_ranching_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_ranching_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_ranching_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_ranching_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_ranching_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_ranching_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_ranching_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_ranching_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_ranching_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_ranching_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_ranching_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_ranching_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_ranching_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_ranching_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_ranching_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_ranching_officers_fertility_mult": "Categories: building ",
			"building_group_bg_ranching_officers_mortality_mult": "Categories: building ",
			"building_group_bg_ranching_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_ranching_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_ranching_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_ranching_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_ranching_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_ranching_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_ranching_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_ranching_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_ranching_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_ranching_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_ranching_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_ranching_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_ranching_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_livestock_ranches_throughput_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_fertility_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_employee_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_mortality_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_tax_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_livestock_ranches": "Categories: country ",
			"building_group_bg_livestock_ranches_academics_fertility_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_academics_mortality_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_livestock_ranches_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_livestock_ranches_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_livestock_ranches_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_livestock_ranches_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_livestock_ranches_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_livestock_ranches_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_livestock_ranches_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_livestock_ranches_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_livestock_ranches_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_livestock_ranches_officers_fertility_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_officers_mortality_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_livestock_ranches_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_livestock_ranches_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_livestock_ranches_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_livestock_ranches_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_livestock_ranches_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_ranching_throughput_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_employee_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_tax_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_subsistence_ranching": "Categories: country ",
			"building_group_bg_subsistence_ranching_academics_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_academics_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_ranching_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_ranching_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_ranching_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_ranching_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_ranching_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_ranching_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_ranching_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_ranching_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_ranching_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_ranching_officers_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_officers_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_ranching_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_ranching_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_ranching_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_subsistence_ranching_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_subsistence_ranching_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_plantations_fertility_mult": "Categories: building ",
			"building_group_bg_plantations_academics_fertility_mult": "Categories: building ",
			"building_group_bg_plantations_academics_mortality_mult": "Categories: building ",
			"building_group_bg_plantations_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_plantations_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_plantations_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_plantations_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_plantations_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_plantations_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_plantations_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_plantations_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_plantations_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_plantations_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_plantations_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_plantations_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_plantations_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_plantations_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_plantations_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_plantations_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_plantations_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_plantations_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_plantations_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_plantations_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_plantations_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_plantations_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_plantations_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_plantations_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_plantations_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_plantations_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_plantations_officers_fertility_mult": "Categories: building ",
			"building_group_bg_plantations_officers_mortality_mult": "Categories: building ",
			"building_group_bg_plantations_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_plantations_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_plantations_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_plantations_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_plantations_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_plantations_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_plantations_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_plantations_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_plantations_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_plantations_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_plantations_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_plantations_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_plantations_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_coffee_plantations_throughput_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_fertility_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_employee_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_mortality_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_tax_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_coffee_plantations": "Categories: country ",
			"building_group_bg_coffee_plantations_academics_fertility_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_academics_mortality_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_coffee_plantations_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_coffee_plantations_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_coffee_plantations_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_coffee_plantations_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_coffee_plantations_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_coffee_plantations_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_coffee_plantations_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_coffee_plantations_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_coffee_plantations_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_coffee_plantations_officers_fertility_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_officers_mortality_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_coffee_plantations_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_coffee_plantations_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_coffee_plantations_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_coffee_plantations_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_coffee_plantations_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_cotton_plantations_throughput_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_fertility_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_employee_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_mortality_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_tax_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_cotton_plantations": "Categories: country ",
			"building_group_bg_cotton_plantations_academics_fertility_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_academics_mortality_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_cotton_plantations_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_cotton_plantations_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_cotton_plantations_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_cotton_plantations_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_cotton_plantations_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_cotton_plantations_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_cotton_plantations_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_cotton_plantations_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_cotton_plantations_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_cotton_plantations_officers_fertility_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_officers_mortality_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_cotton_plantations_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_cotton_plantations_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_cotton_plantations_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_cotton_plantations_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_cotton_plantations_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_silk_plantations_throughput_mult": "Categories: building ",
			"building_group_bg_silk_plantations_fertility_mult": "Categories: building ",
			"building_group_bg_silk_plantations_employee_mult": "Categories: building ",
			"building_group_bg_silk_plantations_mortality_mult": "Categories: building ",
			"building_group_bg_silk_plantations_tax_mult": "Categories: building ",
			"building_group_bg_silk_plantations_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_silk_plantations": "Categories: country ",
			"building_group_bg_silk_plantations_academics_fertility_mult": "Categories: building ",
			"building_group_bg_silk_plantations_academics_mortality_mult": "Categories: building ",
			"building_group_bg_silk_plantations_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_silk_plantations_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_silk_plantations_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_silk_plantations_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_silk_plantations_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_silk_plantations_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_silk_plantations_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_silk_plantations_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_silk_plantations_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_silk_plantations_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_silk_plantations_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_silk_plantations_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_silk_plantations_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_silk_plantations_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_silk_plantations_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_silk_plantations_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_silk_plantations_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_silk_plantations_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_silk_plantations_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_silk_plantations_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_silk_plantations_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_silk_plantations_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_silk_plantations_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_silk_plantations_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_silk_plantations_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_silk_plantations_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_silk_plantations_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_silk_plantations_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_silk_plantations_officers_fertility_mult": "Categories: building ",
			"building_group_bg_silk_plantations_officers_mortality_mult": "Categories: building ",
			"building_group_bg_silk_plantations_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_silk_plantations_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_silk_plantations_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_silk_plantations_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_silk_plantations_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_silk_plantations_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_silk_plantations_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_silk_plantations_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_silk_plantations_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_silk_plantations_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_silk_plantations_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_silk_plantations_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_silk_plantations_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_dye_plantations_throughput_mult": "Categories: building ",
			"building_group_bg_dye_plantations_fertility_mult": "Categories: building ",
			"building_group_bg_dye_plantations_employee_mult": "Categories: building ",
			"building_group_bg_dye_plantations_mortality_mult": "Categories: building ",
			"building_group_bg_dye_plantations_tax_mult": "Categories: building ",
			"building_group_bg_dye_plantations_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_dye_plantations": "Categories: country ",
			"building_group_bg_dye_plantations_academics_fertility_mult": "Categories: building ",
			"building_group_bg_dye_plantations_academics_mortality_mult": "Categories: building ",
			"building_group_bg_dye_plantations_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_dye_plantations_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_dye_plantations_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_dye_plantations_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_dye_plantations_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_dye_plantations_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_dye_plantations_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_dye_plantations_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_dye_plantations_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_dye_plantations_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_dye_plantations_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_dye_plantations_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_dye_plantations_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_dye_plantations_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_dye_plantations_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_dye_plantations_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_dye_plantations_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_dye_plantations_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_dye_plantations_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_dye_plantations_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_dye_plantations_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_dye_plantations_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_dye_plantations_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_dye_plantations_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_dye_plantations_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_dye_plantations_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_dye_plantations_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_dye_plantations_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_dye_plantations_officers_fertility_mult": "Categories: building ",
			"building_group_bg_dye_plantations_officers_mortality_mult": "Categories: building ",
			"building_group_bg_dye_plantations_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_dye_plantations_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_dye_plantations_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_dye_plantations_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_dye_plantations_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_dye_plantations_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_dye_plantations_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_dye_plantations_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_dye_plantations_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_dye_plantations_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_dye_plantations_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_dye_plantations_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_dye_plantations_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_opium_plantations_throughput_mult": "Categories: building ",
			"building_group_bg_opium_plantations_fertility_mult": "Categories: building ",
			"building_group_bg_opium_plantations_employee_mult": "Categories: building ",
			"building_group_bg_opium_plantations_mortality_mult": "Categories: building ",
			"building_group_bg_opium_plantations_tax_mult": "Categories: building ",
			"building_group_bg_opium_plantations_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_opium_plantations": "Categories: country ",
			"building_group_bg_opium_plantations_academics_fertility_mult": "Categories: building ",
			"building_group_bg_opium_plantations_academics_mortality_mult": "Categories: building ",
			"building_group_bg_opium_plantations_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_opium_plantations_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_opium_plantations_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_opium_plantations_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_opium_plantations_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_opium_plantations_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_opium_plantations_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_opium_plantations_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_opium_plantations_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_opium_plantations_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_opium_plantations_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_opium_plantations_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_opium_plantations_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_opium_plantations_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_opium_plantations_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_opium_plantations_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_opium_plantations_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_opium_plantations_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_opium_plantations_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_opium_plantations_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_opium_plantations_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_opium_plantations_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_opium_plantations_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_opium_plantations_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_opium_plantations_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_opium_plantations_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_opium_plantations_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_opium_plantations_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_opium_plantations_officers_fertility_mult": "Categories: building ",
			"building_group_bg_opium_plantations_officers_mortality_mult": "Categories: building ",
			"building_group_bg_opium_plantations_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_opium_plantations_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_opium_plantations_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_opium_plantations_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_opium_plantations_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_opium_plantations_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_opium_plantations_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_opium_plantations_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_opium_plantations_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_opium_plantations_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_opium_plantations_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_opium_plantations_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_opium_plantations_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_tea_plantations_throughput_mult": "Categories: building ",
			"building_group_bg_tea_plantations_fertility_mult": "Categories: building ",
			"building_group_bg_tea_plantations_employee_mult": "Categories: building ",
			"building_group_bg_tea_plantations_mortality_mult": "Categories: building ",
			"building_group_bg_tea_plantations_tax_mult": "Categories: building ",
			"building_group_bg_tea_plantations_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_tea_plantations": "Categories: country ",
			"building_group_bg_tea_plantations_academics_fertility_mult": "Categories: building ",
			"building_group_bg_tea_plantations_academics_mortality_mult": "Categories: building ",
			"building_group_bg_tea_plantations_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_tea_plantations_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_tea_plantations_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_tea_plantations_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_tea_plantations_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_tea_plantations_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_tea_plantations_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_tea_plantations_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_tea_plantations_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_tea_plantations_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_tea_plantations_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_tea_plantations_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_tea_plantations_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_tea_plantations_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_tea_plantations_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_tea_plantations_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_tea_plantations_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_tea_plantations_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_tea_plantations_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_tea_plantations_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_tea_plantations_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_tea_plantations_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_tea_plantations_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_tea_plantations_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_tea_plantations_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_tea_plantations_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_tea_plantations_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_tea_plantations_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_tea_plantations_officers_fertility_mult": "Categories: building ",
			"building_group_bg_tea_plantations_officers_mortality_mult": "Categories: building ",
			"building_group_bg_tea_plantations_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_tea_plantations_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_tea_plantations_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_tea_plantations_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_tea_plantations_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_tea_plantations_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_tea_plantations_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_tea_plantations_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_tea_plantations_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_tea_plantations_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_tea_plantations_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_tea_plantations_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_tea_plantations_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_tobacco_plantations_throughput_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_fertility_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_employee_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_mortality_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_tax_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_tobacco_plantations": "Categories: country ",
			"building_group_bg_tobacco_plantations_academics_fertility_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_academics_mortality_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_tobacco_plantations_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_tobacco_plantations_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_tobacco_plantations_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_tobacco_plantations_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_tobacco_plantations_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_tobacco_plantations_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_tobacco_plantations_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_tobacco_plantations_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_tobacco_plantations_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_tobacco_plantations_officers_fertility_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_officers_mortality_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_tobacco_plantations_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_tobacco_plantations_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_tobacco_plantations_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_tobacco_plantations_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_tobacco_plantations_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_sugar_plantations_throughput_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_fertility_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_employee_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_mortality_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_tax_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_sugar_plantations": "Categories: country ",
			"building_group_bg_sugar_plantations_academics_fertility_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_academics_mortality_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_sugar_plantations_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_sugar_plantations_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_sugar_plantations_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_sugar_plantations_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_sugar_plantations_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_sugar_plantations_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_sugar_plantations_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_sugar_plantations_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_sugar_plantations_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_sugar_plantations_officers_fertility_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_officers_mortality_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_sugar_plantations_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_sugar_plantations_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_sugar_plantations_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_sugar_plantations_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_sugar_plantations_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_banana_plantations_throughput_mult": "Categories: building ",
			"building_group_bg_banana_plantations_fertility_mult": "Categories: building ",
			"building_group_bg_banana_plantations_employee_mult": "Categories: building ",
			"building_group_bg_banana_plantations_mortality_mult": "Categories: building ",
			"building_group_bg_banana_plantations_tax_mult": "Categories: building ",
			"building_group_bg_banana_plantations_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_banana_plantations": "Categories: country ",
			"building_group_bg_banana_plantations_academics_fertility_mult": "Categories: building ",
			"building_group_bg_banana_plantations_academics_mortality_mult": "Categories: building ",
			"building_group_bg_banana_plantations_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_banana_plantations_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_banana_plantations_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_banana_plantations_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_banana_plantations_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_banana_plantations_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_banana_plantations_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_banana_plantations_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_banana_plantations_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_banana_plantations_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_banana_plantations_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_banana_plantations_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_banana_plantations_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_banana_plantations_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_banana_plantations_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_banana_plantations_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_banana_plantations_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_banana_plantations_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_banana_plantations_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_banana_plantations_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_banana_plantations_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_banana_plantations_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_banana_plantations_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_banana_plantations_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_banana_plantations_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_banana_plantations_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_banana_plantations_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_banana_plantations_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_banana_plantations_officers_fertility_mult": "Categories: building ",
			"building_group_bg_banana_plantations_officers_mortality_mult": "Categories: building ",
			"building_group_bg_banana_plantations_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_banana_plantations_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_banana_plantations_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_banana_plantations_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_banana_plantations_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_banana_plantations_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_banana_plantations_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_banana_plantations_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_banana_plantations_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_banana_plantations_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_banana_plantations_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_banana_plantations_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_banana_plantations_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_mining_fertility_mult": "Categories: building ",
			"building_group_bg_mining_academics_fertility_mult": "Categories: building ",
			"building_group_bg_mining_academics_mortality_mult": "Categories: building ",
			"building_group_bg_mining_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_mining_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_mining_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_mining_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_mining_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_mining_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_mining_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_mining_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_mining_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_mining_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_mining_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_mining_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_mining_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_mining_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_mining_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_mining_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_mining_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_mining_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_mining_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_mining_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_mining_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_mining_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_mining_officers_fertility_mult": "Categories: building ",
			"building_group_bg_mining_officers_mortality_mult": "Categories: building ",
			"building_group_bg_mining_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_mining_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_mining_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_mining_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_mining_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_mining_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_mining_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_mining_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_mining_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_mining_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_mining_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_mining_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_mining_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_fields_throughput_mult": "Categories: building ",
			"building_group_bg_gold_fields_fertility_mult": "Categories: building ",
			"building_group_bg_gold_fields_employee_mult": "Categories: building ",
			"building_group_bg_gold_fields_mortality_mult": "Categories: building ",
			"building_group_bg_gold_fields_tax_mult": "Categories: building ",
			"building_group_bg_gold_fields_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_gold_fields": "Categories: country ",
			"building_group_bg_gold_fields_academics_fertility_mult": "Categories: building ",
			"building_group_bg_gold_fields_academics_mortality_mult": "Categories: building ",
			"building_group_bg_gold_fields_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_fields_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_gold_fields_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_gold_fields_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_fields_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_gold_fields_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_gold_fields_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_fields_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_gold_fields_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_gold_fields_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_fields_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_gold_fields_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_gold_fields_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_fields_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_gold_fields_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_gold_fields_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_fields_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_gold_fields_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_gold_fields_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_fields_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_gold_fields_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_gold_fields_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_fields_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_gold_fields_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_gold_fields_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_fields_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_gold_fields_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_gold_fields_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_fields_officers_fertility_mult": "Categories: building ",
			"building_group_bg_gold_fields_officers_mortality_mult": "Categories: building ",
			"building_group_bg_gold_fields_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_fields_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_gold_fields_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_gold_fields_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_fields_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_gold_fields_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_gold_fields_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_fields_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_gold_fields_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_gold_fields_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_fields_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_gold_fields_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_gold_fields_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_mining_throughput_mult": "Categories: building ",
			"building_group_bg_gold_mining_fertility_mult": "Categories: building ",
			"country_subsidies_bg_gold_mining": "Categories: country ",
			"building_group_bg_gold_mining_academics_fertility_mult": "Categories: building ",
			"building_group_bg_gold_mining_academics_mortality_mult": "Categories: building ",
			"building_group_bg_gold_mining_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_mining_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_gold_mining_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_gold_mining_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_mining_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_gold_mining_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_gold_mining_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_mining_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_gold_mining_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_gold_mining_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_mining_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_gold_mining_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_gold_mining_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_mining_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_gold_mining_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_gold_mining_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_mining_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_gold_mining_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_gold_mining_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_mining_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_gold_mining_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_gold_mining_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_mining_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_gold_mining_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_gold_mining_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_mining_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_gold_mining_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_gold_mining_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_mining_officers_fertility_mult": "Categories: building ",
			"building_group_bg_gold_mining_officers_mortality_mult": "Categories: building ",
			"building_group_bg_gold_mining_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_mining_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_gold_mining_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_gold_mining_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_mining_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_gold_mining_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_gold_mining_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_mining_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_gold_mining_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_gold_mining_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_gold_mining_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_gold_mining_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_gold_mining_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_coal_mining_throughput_mult": "Categories: building ",
			"building_group_bg_coal_mining_fertility_mult": "Categories: building ",
			"country_subsidies_bg_coal_mining": "Categories: country ",
			"building_group_bg_coal_mining_academics_fertility_mult": "Categories: building ",
			"building_group_bg_coal_mining_academics_mortality_mult": "Categories: building ",
			"building_group_bg_coal_mining_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_coal_mining_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_coal_mining_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_coal_mining_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_coal_mining_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_coal_mining_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_coal_mining_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_coal_mining_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_coal_mining_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_coal_mining_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_coal_mining_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_coal_mining_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_coal_mining_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_coal_mining_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_coal_mining_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_coal_mining_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_coal_mining_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_coal_mining_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_coal_mining_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_coal_mining_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_coal_mining_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_coal_mining_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_coal_mining_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_coal_mining_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_coal_mining_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_coal_mining_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_coal_mining_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_coal_mining_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_coal_mining_officers_fertility_mult": "Categories: building ",
			"building_group_bg_coal_mining_officers_mortality_mult": "Categories: building ",
			"building_group_bg_coal_mining_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_coal_mining_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_coal_mining_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_coal_mining_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_coal_mining_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_coal_mining_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_coal_mining_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_coal_mining_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_coal_mining_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_coal_mining_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_coal_mining_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_coal_mining_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_coal_mining_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_iron_mining_throughput_mult": "Categories: building ",
			"building_group_bg_iron_mining_fertility_mult": "Categories: building ",
			"country_subsidies_bg_iron_mining": "Categories: country ",
			"building_group_bg_iron_mining_academics_fertility_mult": "Categories: building ",
			"building_group_bg_iron_mining_academics_mortality_mult": "Categories: building ",
			"building_group_bg_iron_mining_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_iron_mining_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_iron_mining_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_iron_mining_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_iron_mining_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_iron_mining_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_iron_mining_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_iron_mining_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_iron_mining_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_iron_mining_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_iron_mining_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_iron_mining_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_iron_mining_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_iron_mining_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_iron_mining_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_iron_mining_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_iron_mining_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_iron_mining_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_iron_mining_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_iron_mining_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_iron_mining_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_iron_mining_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_iron_mining_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_iron_mining_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_iron_mining_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_iron_mining_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_iron_mining_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_iron_mining_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_iron_mining_officers_fertility_mult": "Categories: building ",
			"building_group_bg_iron_mining_officers_mortality_mult": "Categories: building ",
			"building_group_bg_iron_mining_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_iron_mining_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_iron_mining_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_iron_mining_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_iron_mining_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_iron_mining_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_iron_mining_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_iron_mining_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_iron_mining_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_iron_mining_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_iron_mining_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_iron_mining_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_iron_mining_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_lead_mining_throughput_mult": "Categories: building ",
			"building_group_bg_lead_mining_fertility_mult": "Categories: building ",
			"country_subsidies_bg_lead_mining": "Categories: country ",
			"building_group_bg_lead_mining_academics_fertility_mult": "Categories: building ",
			"building_group_bg_lead_mining_academics_mortality_mult": "Categories: building ",
			"building_group_bg_lead_mining_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_lead_mining_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_lead_mining_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_lead_mining_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_lead_mining_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_lead_mining_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_lead_mining_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_lead_mining_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_lead_mining_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_lead_mining_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_lead_mining_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_lead_mining_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_lead_mining_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_lead_mining_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_lead_mining_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_lead_mining_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_lead_mining_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_lead_mining_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_lead_mining_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_lead_mining_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_lead_mining_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_lead_mining_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_lead_mining_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_lead_mining_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_lead_mining_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_lead_mining_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_lead_mining_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_lead_mining_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_lead_mining_officers_fertility_mult": "Categories: building ",
			"building_group_bg_lead_mining_officers_mortality_mult": "Categories: building ",
			"building_group_bg_lead_mining_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_lead_mining_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_lead_mining_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_lead_mining_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_lead_mining_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_lead_mining_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_lead_mining_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_lead_mining_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_lead_mining_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_lead_mining_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_lead_mining_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_lead_mining_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_lead_mining_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_sulfur_mining_throughput_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_fertility_mult": "Categories: building ",
			"country_subsidies_bg_sulfur_mining": "Categories: country ",
			"building_group_bg_sulfur_mining_academics_fertility_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_academics_mortality_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_sulfur_mining_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_sulfur_mining_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_sulfur_mining_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_sulfur_mining_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_sulfur_mining_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_sulfur_mining_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_sulfur_mining_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_sulfur_mining_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_sulfur_mining_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_sulfur_mining_officers_fertility_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_officers_mortality_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_sulfur_mining_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_sulfur_mining_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_sulfur_mining_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_sulfur_mining_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_sulfur_mining_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_logging_fertility_mult": "Categories: building ",
			"building_group_bg_logging_academics_fertility_mult": "Categories: building ",
			"building_group_bg_logging_academics_mortality_mult": "Categories: building ",
			"building_group_bg_logging_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_logging_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_logging_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_logging_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_logging_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_logging_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_logging_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_logging_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_logging_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_logging_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_logging_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_logging_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_logging_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_logging_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_logging_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_logging_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_logging_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_logging_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_logging_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_logging_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_logging_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_logging_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_logging_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_logging_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_logging_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_logging_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_logging_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_logging_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_logging_officers_fertility_mult": "Categories: building ",
			"building_group_bg_logging_officers_mortality_mult": "Categories: building ",
			"building_group_bg_logging_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_logging_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_logging_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_logging_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_logging_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_logging_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_logging_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_logging_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_logging_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_logging_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_logging_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_logging_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_logging_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_rubber_throughput_mult": "Categories: building ",
			"building_group_bg_rubber_fertility_mult": "Categories: building ",
			"country_subsidies_bg_rubber": "Categories: country ",
			"building_group_bg_rubber_academics_fertility_mult": "Categories: building ",
			"building_group_bg_rubber_academics_mortality_mult": "Categories: building ",
			"building_group_bg_rubber_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_rubber_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_rubber_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_rubber_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_rubber_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_rubber_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_rubber_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_rubber_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_rubber_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_rubber_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_rubber_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_rubber_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_rubber_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_rubber_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_rubber_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_rubber_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_rubber_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_rubber_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_rubber_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_rubber_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_rubber_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_rubber_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_rubber_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_rubber_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_rubber_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_rubber_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_rubber_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_rubber_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_rubber_officers_fertility_mult": "Categories: building ",
			"building_group_bg_rubber_officers_mortality_mult": "Categories: building ",
			"building_group_bg_rubber_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_rubber_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_rubber_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_rubber_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_rubber_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_rubber_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_rubber_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_rubber_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_rubber_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_rubber_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_rubber_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_rubber_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_rubber_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_whaling_fertility_mult": "Categories: building ",
			"building_group_bg_whaling_academics_fertility_mult": "Categories: building ",
			"building_group_bg_whaling_academics_mortality_mult": "Categories: building ",
			"building_group_bg_whaling_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_whaling_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_whaling_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_whaling_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_whaling_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_whaling_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_whaling_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_whaling_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_whaling_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_whaling_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_whaling_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_whaling_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_whaling_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_whaling_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_whaling_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_whaling_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_whaling_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_whaling_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_whaling_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_whaling_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_whaling_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_whaling_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_whaling_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_whaling_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_whaling_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_whaling_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_whaling_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_whaling_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_whaling_officers_fertility_mult": "Categories: building ",
			"building_group_bg_whaling_officers_mortality_mult": "Categories: building ",
			"building_group_bg_whaling_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_whaling_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_whaling_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_whaling_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_whaling_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_whaling_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_whaling_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_whaling_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_whaling_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_whaling_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_whaling_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_whaling_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_whaling_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_fishing_fertility_mult": "Categories: building ",
			"building_group_bg_fishing_academics_fertility_mult": "Categories: building ",
			"building_group_bg_fishing_academics_mortality_mult": "Categories: building ",
			"building_group_bg_fishing_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_fishing_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_fishing_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_fishing_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_fishing_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_fishing_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_fishing_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_fishing_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_fishing_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_fishing_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_fishing_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_fishing_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_fishing_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_fishing_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_fishing_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_fishing_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_fishing_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_fishing_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_fishing_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_fishing_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_fishing_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_fishing_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_fishing_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_fishing_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_fishing_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_fishing_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_fishing_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_fishing_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_fishing_officers_fertility_mult": "Categories: building ",
			"building_group_bg_fishing_officers_mortality_mult": "Categories: building ",
			"building_group_bg_fishing_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_fishing_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_fishing_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_fishing_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_fishing_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_fishing_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_fishing_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_fishing_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_fishing_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_fishing_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_fishing_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_fishing_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_fishing_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_oil_extraction_fertility_mult": "Categories: building ",
			"country_subsidies_bg_oil_extraction": "Categories: country ",
			"building_group_bg_oil_extraction_academics_fertility_mult": "Categories: building ",
			"building_group_bg_oil_extraction_academics_mortality_mult": "Categories: building ",
			"building_group_bg_oil_extraction_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_oil_extraction_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_oil_extraction_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_oil_extraction_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_oil_extraction_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_oil_extraction_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_oil_extraction_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_oil_extraction_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_oil_extraction_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_oil_extraction_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_oil_extraction_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_oil_extraction_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_oil_extraction_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_oil_extraction_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_oil_extraction_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_oil_extraction_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_oil_extraction_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_oil_extraction_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_oil_extraction_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_oil_extraction_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_oil_extraction_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_oil_extraction_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_oil_extraction_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_oil_extraction_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_oil_extraction_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_oil_extraction_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_oil_extraction_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_oil_extraction_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_oil_extraction_officers_fertility_mult": "Categories: building ",
			"building_group_bg_oil_extraction_officers_mortality_mult": "Categories: building ",
			"building_group_bg_oil_extraction_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_oil_extraction_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_oil_extraction_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_oil_extraction_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_oil_extraction_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_oil_extraction_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_oil_extraction_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_oil_extraction_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_oil_extraction_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_oil_extraction_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_oil_extraction_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_oil_extraction_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_oil_extraction_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_service_fertility_mult": "Categories: building ",
			"building_group_bg_service_academics_fertility_mult": "Categories: building ",
			"building_group_bg_service_academics_mortality_mult": "Categories: building ",
			"building_group_bg_service_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_service_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_service_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_service_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_service_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_service_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_service_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_service_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_service_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_service_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_service_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_service_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_service_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_service_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_service_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_service_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_service_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_service_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_service_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_service_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_service_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_service_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_service_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_service_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_service_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_service_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_service_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_service_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_service_officers_fertility_mult": "Categories: building ",
			"building_group_bg_service_officers_mortality_mult": "Categories: building ",
			"building_group_bg_service_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_service_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_service_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_service_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_service_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_service_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_service_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_service_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_service_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_service_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_service_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_service_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_service_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_urban_facilities_throughput_mult": "Categories: building ",
			"building_group_bg_urban_facilities_fertility_mult": "Categories: building ",
			"building_group_bg_urban_facilities_employee_mult": "Categories: building ",
			"building_group_bg_urban_facilities_mortality_mult": "Categories: building ",
			"building_group_bg_urban_facilities_tax_mult": "Categories: building ",
			"building_group_bg_urban_facilities_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_urban_facilities": "Categories: country ",
			"building_group_bg_urban_facilities_academics_fertility_mult": "Categories: building ",
			"building_group_bg_urban_facilities_academics_mortality_mult": "Categories: building ",
			"building_group_bg_urban_facilities_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_urban_facilities_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_urban_facilities_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_urban_facilities_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_urban_facilities_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_urban_facilities_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_urban_facilities_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_urban_facilities_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_urban_facilities_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_urban_facilities_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_urban_facilities_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_urban_facilities_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_urban_facilities_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_urban_facilities_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_urban_facilities_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_urban_facilities_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_urban_facilities_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_urban_facilities_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_urban_facilities_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_urban_facilities_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_urban_facilities_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_urban_facilities_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_urban_facilities_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_urban_facilities_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_urban_facilities_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_urban_facilities_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_urban_facilities_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_urban_facilities_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_urban_facilities_officers_fertility_mult": "Categories: building ",
			"building_group_bg_urban_facilities_officers_mortality_mult": "Categories: building ",
			"building_group_bg_urban_facilities_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_urban_facilities_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_urban_facilities_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_urban_facilities_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_urban_facilities_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_urban_facilities_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_urban_facilities_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_urban_facilities_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_urban_facilities_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_urban_facilities_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_urban_facilities_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_urban_facilities_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_urban_facilities_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_arts_throughput_mult": "Categories: building ",
			"building_group_bg_arts_fertility_mult": "Categories: building ",
			"building_group_bg_arts_employee_mult": "Categories: building ",
			"building_group_bg_arts_mortality_mult": "Categories: building ",
			"building_group_bg_arts_tax_mult": "Categories: building ",
			"building_group_bg_arts_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_arts": "Categories: country ",
			"building_group_bg_arts_academics_fertility_mult": "Categories: building ",
			"building_group_bg_arts_academics_mortality_mult": "Categories: building ",
			"building_group_bg_arts_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_arts_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_arts_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_arts_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_arts_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_arts_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_arts_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_arts_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_arts_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_arts_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_arts_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_arts_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_arts_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_arts_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_arts_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_arts_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_arts_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_arts_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_arts_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_arts_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_arts_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_arts_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_arts_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_arts_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_arts_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_arts_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_arts_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_arts_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_arts_officers_fertility_mult": "Categories: building ",
			"building_group_bg_arts_officers_mortality_mult": "Categories: building ",
			"building_group_bg_arts_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_arts_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_arts_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_arts_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_arts_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_arts_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_arts_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_arts_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_arts_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_arts_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_arts_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_arts_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_arts_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_power_throughput_mult": "Categories: building ",
			"building_group_bg_power_fertility_mult": "Categories: building ",
			"building_group_bg_power_employee_mult": "Categories: building ",
			"building_group_bg_power_mortality_mult": "Categories: building ",
			"building_group_bg_power_tax_mult": "Categories: building ",
			"building_group_bg_power_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_power": "Categories: country ",
			"building_group_bg_power_academics_fertility_mult": "Categories: building ",
			"building_group_bg_power_academics_mortality_mult": "Categories: building ",
			"building_group_bg_power_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_power_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_power_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_power_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_power_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_power_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_power_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_power_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_power_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_power_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_power_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_power_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_power_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_power_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_power_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_power_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_power_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_power_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_power_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_power_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_power_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_power_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_power_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_power_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_power_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_power_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_power_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_power_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_power_officers_fertility_mult": "Categories: building ",
			"building_group_bg_power_officers_mortality_mult": "Categories: building ",
			"building_group_bg_power_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_power_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_power_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_power_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_power_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_power_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_power_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_power_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_power_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_power_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_power_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_power_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_power_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_government_throughput_mult": "Categories: building ",
			"building_group_bg_government_fertility_mult": "Categories: building ",
			"country_subsidies_bg_government": "Categories: country ",
			"building_group_bg_government_academics_fertility_mult": "Categories: building ",
			"building_group_bg_government_academics_mortality_mult": "Categories: building ",
			"building_group_bg_government_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_government_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_government_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_government_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_government_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_government_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_government_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_government_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_government_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_government_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_government_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_government_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_government_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_government_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_government_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_government_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_government_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_government_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_government_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_government_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_government_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_government_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_government_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_government_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_government_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_government_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_government_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_government_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_government_officers_fertility_mult": "Categories: building ",
			"building_group_bg_government_officers_mortality_mult": "Categories: building ",
			"building_group_bg_government_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_government_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_government_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_government_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_government_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_government_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_government_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_government_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_government_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_government_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_government_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_government_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_government_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_technology_throughput_mult": "Categories: building ",
			"building_group_bg_technology_fertility_mult": "Categories: building ",
			"building_group_bg_technology_employee_mult": "Categories: building ",
			"building_group_bg_technology_mortality_mult": "Categories: building ",
			"building_group_bg_technology_tax_mult": "Categories: building ",
			"building_group_bg_technology_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_technology": "Categories: country ",
			"building_group_bg_technology_academics_fertility_mult": "Categories: building ",
			"building_group_bg_technology_academics_mortality_mult": "Categories: building ",
			"building_group_bg_technology_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_technology_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_technology_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_technology_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_technology_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_technology_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_technology_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_technology_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_technology_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_technology_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_technology_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_technology_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_technology_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_technology_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_technology_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_technology_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_technology_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_technology_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_technology_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_technology_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_technology_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_technology_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_technology_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_technology_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_technology_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_technology_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_technology_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_technology_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_technology_officers_fertility_mult": "Categories: building ",
			"building_group_bg_technology_officers_mortality_mult": "Categories: building ",
			"building_group_bg_technology_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_technology_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_technology_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_technology_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_technology_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_technology_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_technology_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_technology_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_technology_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_technology_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_technology_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_technology_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_technology_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_bureaucracy_throughput_mult": "Categories: building ",
			"building_group_bg_bureaucracy_fertility_mult": "Categories: building ",
			"building_group_bg_bureaucracy_employee_mult": "Categories: building ",
			"building_group_bg_bureaucracy_mortality_mult": "Categories: building ",
			"building_group_bg_bureaucracy_tax_mult": "Categories: building ",
			"building_group_bg_bureaucracy_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_bureaucracy": "Categories: country ",
			"building_group_bg_bureaucracy_academics_fertility_mult": "Categories: building ",
			"building_group_bg_bureaucracy_academics_mortality_mult": "Categories: building ",
			"building_group_bg_bureaucracy_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_bureaucracy_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_bureaucracy_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_bureaucracy_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_bureaucracy_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_bureaucracy_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_bureaucracy_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_bureaucracy_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_bureaucracy_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_bureaucracy_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_bureaucracy_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_bureaucracy_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_bureaucracy_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_bureaucracy_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_bureaucracy_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_bureaucracy_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_bureaucracy_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_bureaucracy_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_bureaucracy_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_bureaucracy_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_bureaucracy_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_bureaucracy_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_bureaucracy_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_bureaucracy_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_bureaucracy_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_bureaucracy_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_bureaucracy_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_bureaucracy_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_bureaucracy_officers_fertility_mult": "Categories: building ",
			"building_group_bg_bureaucracy_officers_mortality_mult": "Categories: building ",
			"building_group_bg_bureaucracy_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_bureaucracy_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_bureaucracy_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_bureaucracy_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_bureaucracy_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_bureaucracy_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_bureaucracy_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_bureaucracy_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_bureaucracy_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_bureaucracy_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_bureaucracy_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_bureaucracy_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_bureaucracy_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_trade_throughput_mult": "Categories: building ",
			"building_group_bg_trade_fertility_mult": "Categories: building ",
			"building_group_bg_trade_employee_mult": "Categories: building ",
			"building_group_bg_trade_mortality_mult": "Categories: building ",
			"building_group_bg_trade_tax_mult": "Categories: building ",
			"building_group_bg_trade_standard_of_living_add": "Categories: building ",
			"building_group_bg_trade_academics_fertility_mult": "Categories: building ",
			"building_group_bg_trade_academics_mortality_mult": "Categories: building ",
			"building_group_bg_trade_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_trade_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_trade_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_trade_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_trade_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_trade_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_trade_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_trade_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_trade_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_trade_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_trade_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_trade_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_trade_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_trade_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_trade_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_trade_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_trade_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_trade_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_trade_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_trade_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_trade_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_trade_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_trade_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_trade_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_trade_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_trade_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_trade_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_trade_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_trade_officers_fertility_mult": "Categories: building ",
			"building_group_bg_trade_officers_mortality_mult": "Categories: building ",
			"building_group_bg_trade_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_trade_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_trade_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_trade_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_trade_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_trade_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_trade_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_trade_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_trade_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_trade_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_trade_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_trade_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_trade_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_infrastructure_throughput_mult": "Categories: building ",
			"building_group_bg_infrastructure_fertility_mult": "Categories: building ",
			"building_group_bg_infrastructure_academics_fertility_mult": "Categories: building ",
			"building_group_bg_infrastructure_academics_mortality_mult": "Categories: building ",
			"building_group_bg_infrastructure_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_infrastructure_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_infrastructure_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_infrastructure_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_infrastructure_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_infrastructure_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_infrastructure_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_infrastructure_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_infrastructure_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_infrastructure_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_infrastructure_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_infrastructure_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_infrastructure_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_infrastructure_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_infrastructure_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_infrastructure_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_infrastructure_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_infrastructure_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_infrastructure_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_infrastructure_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_infrastructure_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_infrastructure_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_infrastructure_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_infrastructure_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_infrastructure_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_infrastructure_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_infrastructure_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_infrastructure_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_infrastructure_officers_fertility_mult": "Categories: building ",
			"building_group_bg_infrastructure_officers_mortality_mult": "Categories: building ",
			"building_group_bg_infrastructure_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_infrastructure_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_infrastructure_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_infrastructure_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_infrastructure_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_infrastructure_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_infrastructure_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_infrastructure_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_infrastructure_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_infrastructure_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_infrastructure_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_infrastructure_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_infrastructure_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_public_infrastructure_throughput_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_fertility_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_employee_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_mortality_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_tax_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_public_infrastructure": "Categories: country ",
			"building_group_bg_public_infrastructure_academics_fertility_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_academics_mortality_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_public_infrastructure_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_public_infrastructure_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_public_infrastructure_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_public_infrastructure_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_public_infrastructure_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_public_infrastructure_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_public_infrastructure_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_public_infrastructure_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_public_infrastructure_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_public_infrastructure_officers_fertility_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_officers_mortality_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_public_infrastructure_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_public_infrastructure_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_public_infrastructure_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_public_infrastructure_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_public_infrastructure_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_construction_throughput_mult": "Categories: building ",
			"building_group_bg_construction_fertility_mult": "Categories: building ",
			"building_group_bg_construction_employee_mult": "Categories: building ",
			"building_group_bg_construction_mortality_mult": "Categories: building ",
			"building_group_bg_construction_tax_mult": "Categories: building ",
			"building_group_bg_construction_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_construction": "Categories: country ",
			"building_group_bg_construction_academics_fertility_mult": "Categories: building ",
			"building_group_bg_construction_academics_mortality_mult": "Categories: building ",
			"building_group_bg_construction_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_construction_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_construction_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_construction_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_construction_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_construction_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_construction_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_construction_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_construction_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_construction_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_construction_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_construction_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_construction_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_construction_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_construction_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_construction_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_construction_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_construction_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_construction_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_construction_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_construction_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_construction_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_construction_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_construction_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_construction_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_construction_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_construction_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_construction_officers_fertility_mult": "Categories: building ",
			"building_group_bg_construction_officers_mortality_mult": "Categories: building ",
			"building_group_bg_construction_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_construction_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_construction_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_construction_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_construction_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_construction_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_construction_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_construction_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_construction_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_construction_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_construction_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_construction_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_construction_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_private_infrastructure_throughput_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_fertility_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_employee_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_mortality_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_tax_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_private_infrastructure": "Categories: country ",
			"building_group_bg_private_infrastructure_academics_fertility_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_academics_mortality_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_private_infrastructure_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_private_infrastructure_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_private_infrastructure_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_private_infrastructure_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_private_infrastructure_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_private_infrastructure_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_private_infrastructure_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_private_infrastructure_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_private_infrastructure_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_private_infrastructure_officers_fertility_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_officers_mortality_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_private_infrastructure_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_private_infrastructure_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_private_infrastructure_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_private_infrastructure_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_private_infrastructure_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_canals_throughput_mult": "Categories: building ",
			"building_group_bg_canals_fertility_mult": "Categories: building ",
			"building_group_bg_canals_employee_mult": "Categories: building ",
			"building_group_bg_canals_mortality_mult": "Categories: building ",
			"building_group_bg_canals_tax_mult": "Categories: building ",
			"building_group_bg_canals_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_canals": "Categories: country ",
			"building_group_bg_canals_academics_fertility_mult": "Categories: building ",
			"building_group_bg_canals_academics_mortality_mult": "Categories: building ",
			"building_group_bg_canals_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_canals_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_canals_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_canals_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_canals_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_canals_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_canals_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_canals_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_canals_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_canals_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_canals_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_canals_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_canals_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_canals_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_canals_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_canals_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_canals_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_canals_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_canals_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_canals_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_canals_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_canals_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_canals_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_canals_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_canals_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_canals_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_canals_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_canals_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_canals_officers_fertility_mult": "Categories: building ",
			"building_group_bg_canals_officers_mortality_mult": "Categories: building ",
			"building_group_bg_canals_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_canals_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_canals_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_canals_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_canals_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_canals_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_canals_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_canals_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_canals_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_canals_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_canals_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_canals_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_canals_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_throughput_mult": "Categories: building ",
			"building_group_bg_monuments_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_employee_mult": "Categories: building ",
			"building_group_bg_monuments_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_tax_mult": "Categories: building ",
			"building_group_bg_monuments_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_monuments": "Categories: country ",
			"building_group_bg_monuments_academics_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_academics_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_officers_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_officers_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_military_throughput_mult": "Categories: building ",
			"building_group_bg_military_fertility_mult": "Categories: building ",
			"building_group_bg_military_employee_mult": "Categories: building ",
			"building_group_bg_military_mortality_mult": "Categories: building ",
			"building_group_bg_military_tax_mult": "Categories: building ",
			"building_group_bg_military_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_military": "Categories: country ",
			"building_group_bg_military_academics_fertility_mult": "Categories: building ",
			"building_group_bg_military_academics_mortality_mult": "Categories: building ",
			"building_group_bg_military_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_military_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_military_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_military_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_military_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_military_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_military_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_military_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_military_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_military_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_military_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_military_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_military_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_military_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_military_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_military_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_military_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_military_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_military_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_military_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_military_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_military_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_military_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_military_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_military_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_military_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_military_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_military_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_military_officers_fertility_mult": "Categories: building ",
			"building_group_bg_military_officers_mortality_mult": "Categories: building ",
			"building_group_bg_military_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_military_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_military_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_military_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_military_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_military_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_military_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_military_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_military_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_military_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_military_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_military_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_military_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_army_throughput_mult": "Categories: building ",
			"building_group_bg_army_fertility_mult": "Categories: building ",
			"building_group_bg_army_employee_mult": "Categories: building ",
			"building_group_bg_army_mortality_mult": "Categories: building ",
			"building_group_bg_army_tax_mult": "Categories: building ",
			"building_group_bg_army_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_army": "Categories: country ",
			"building_group_bg_army_academics_fertility_mult": "Categories: building ",
			"building_group_bg_army_academics_mortality_mult": "Categories: building ",
			"building_group_bg_army_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_army_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_army_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_army_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_army_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_army_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_army_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_army_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_army_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_army_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_army_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_army_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_army_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_army_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_army_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_army_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_army_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_army_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_army_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_army_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_army_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_army_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_army_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_army_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_army_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_army_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_army_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_army_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_army_officers_fertility_mult": "Categories: building ",
			"building_group_bg_army_officers_mortality_mult": "Categories: building ",
			"building_group_bg_army_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_army_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_army_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_army_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_army_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_army_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_army_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_army_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_army_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_army_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_army_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_army_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_army_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_conscription_throughput_mult": "Categories: building ",
			"building_group_bg_conscription_fertility_mult": "Categories: building ",
			"building_group_bg_conscription_employee_mult": "Categories: building ",
			"building_group_bg_conscription_mortality_mult": "Categories: building ",
			"building_group_bg_conscription_tax_mult": "Categories: building ",
			"building_group_bg_conscription_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_conscription": "Categories: country ",
			"building_group_bg_conscription_academics_fertility_mult": "Categories: building ",
			"building_group_bg_conscription_academics_mortality_mult": "Categories: building ",
			"building_group_bg_conscription_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_conscription_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_conscription_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_conscription_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_conscription_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_conscription_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_conscription_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_conscription_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_conscription_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_conscription_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_conscription_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_conscription_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_conscription_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_conscription_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_conscription_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_conscription_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_conscription_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_conscription_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_conscription_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_conscription_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_conscription_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_conscription_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_conscription_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_conscription_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_conscription_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_conscription_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_conscription_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_conscription_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_conscription_officers_fertility_mult": "Categories: building ",
			"building_group_bg_conscription_officers_mortality_mult": "Categories: building ",
			"building_group_bg_conscription_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_conscription_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_conscription_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_conscription_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_conscription_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_conscription_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_conscription_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_conscription_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_conscription_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_conscription_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_conscription_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_conscription_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_conscription_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_navy_throughput_mult": "Categories: building ",
			"building_group_bg_navy_fertility_mult": "Categories: building ",
			"building_group_bg_navy_employee_mult": "Categories: building ",
			"building_group_bg_navy_mortality_mult": "Categories: building ",
			"building_group_bg_navy_tax_mult": "Categories: building ",
			"building_group_bg_navy_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_navy": "Categories: country ",
			"building_group_bg_navy_academics_fertility_mult": "Categories: building ",
			"building_group_bg_navy_academics_mortality_mult": "Categories: building ",
			"building_group_bg_navy_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_navy_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_navy_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_navy_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_navy_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_navy_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_navy_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_navy_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_navy_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_navy_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_navy_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_navy_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_navy_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_navy_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_navy_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_navy_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_navy_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_navy_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_navy_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_navy_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_navy_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_navy_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_navy_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_navy_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_navy_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_navy_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_navy_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_navy_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_navy_officers_fertility_mult": "Categories: building ",
			"building_group_bg_navy_officers_mortality_mult": "Categories: building ",
			"building_group_bg_navy_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_navy_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_navy_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_navy_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_navy_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_navy_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_navy_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_navy_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_navy_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_navy_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_navy_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_navy_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_navy_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_skyscraper_throughput_mult": "Categories: building ",
			"building_group_bg_skyscraper_fertility_mult": "Categories: building ",
			"building_group_bg_skyscraper_employee_mult": "Categories: building ",
			"building_group_bg_skyscraper_mortality_mult": "Categories: building ",
			"building_group_bg_skyscraper_tax_mult": "Categories: building ",
			"building_group_bg_skyscraper_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_skyscraper": "Categories: country ",
			"building_group_bg_skyscraper_academics_fertility_mult": "Categories: building ",
			"building_group_bg_skyscraper_academics_mortality_mult": "Categories: building ",
			"building_group_bg_skyscraper_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_skyscraper_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_skyscraper_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_skyscraper_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_skyscraper_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_skyscraper_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_skyscraper_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_skyscraper_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_skyscraper_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_skyscraper_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_skyscraper_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_skyscraper_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_skyscraper_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_skyscraper_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_skyscraper_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_skyscraper_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_skyscraper_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_skyscraper_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_skyscraper_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_skyscraper_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_skyscraper_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_skyscraper_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_skyscraper_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_skyscraper_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_skyscraper_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_skyscraper_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_skyscraper_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_skyscraper_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_skyscraper_officers_fertility_mult": "Categories: building ",
			"building_group_bg_skyscraper_officers_mortality_mult": "Categories: building ",
			"building_group_bg_skyscraper_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_skyscraper_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_skyscraper_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_skyscraper_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_skyscraper_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_skyscraper_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_skyscraper_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_skyscraper_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_skyscraper_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_skyscraper_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_skyscraper_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_skyscraper_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_skyscraper_soldiers_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_hidden_throughput_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_employee_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_tax_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_standard_of_living_add": "Categories: building ",
			"country_subsidies_bg_monuments_hidden": "Categories: country ",
			"building_group_bg_monuments_hidden_academics_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_academics_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_academics_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_hidden_aristocrats_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_aristocrats_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_aristocrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_hidden_bureaucrats_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_bureaucrats_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_bureaucrats_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_hidden_capitalists_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_capitalists_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_capitalists_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_hidden_clergymen_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_clergymen_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_clergymen_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_hidden_clerks_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_clerks_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_clerks_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_hidden_engineers_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_engineers_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_engineers_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_hidden_farmers_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_farmers_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_farmers_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_hidden_laborers_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_laborers_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_laborers_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_hidden_machinists_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_machinists_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_machinists_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_hidden_officers_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_officers_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_officers_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_hidden_peasants_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_peasants_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_peasants_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_hidden_shopkeepers_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_shopkeepers_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_shopkeepers_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_hidden_slaves_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_slaves_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_slaves_standard_of_living_add": "Categories: building ",
			"building_group_bg_monuments_hidden_soldiers_fertility_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_soldiers_mortality_mult": "Categories: building ",
			"building_group_bg_monuments_hidden_soldiers_standard_of_living_add": "Categories: building ",
			"state_pop_support_law_peasant_levies_add": "Categories: state ",
			"state_pop_support_law_peasant_levies_mult": "Categories: state ",
			"state_pop_support_law_professional_army_add": "Categories: state ",
			"state_pop_support_law_professional_army_mult": "Categories: state ",
			"state_pop_support_law_national_militia_add": "Categories: state ",
			"state_pop_support_law_national_militia_mult": "Categories: state ",
			"state_pop_support_law_mass_conscription_add": "Categories: state ",
			"state_pop_support_law_mass_conscription_mult": "Categories: state ",
			"state_pop_support_law_hereditary_bureaucrats_add": "Categories: state ",
			"state_pop_support_law_hereditary_bureaucrats_mult": "Categories: state ",
			"state_pop_support_law_appointed_bureaucrats_add": "Categories: state ",
			"state_pop_support_law_appointed_bureaucrats_mult": "Categories: state ",
			"state_pop_support_law_elected_bureaucrats_add": "Categories: state ",
			"state_pop_support_law_elected_bureaucrats_mult": "Categories: state ",
			"state_pop_support_law_child_labor_allowed_add": "Categories: state ",
			"state_pop_support_law_child_labor_allowed_mult": "Categories: state ",
			"state_pop_support_law_restricted_child_labor_add": "Categories: state ",
			"state_pop_support_law_restricted_child_labor_mult": "Categories: state ",
			"state_pop_support_law_compulsory_primary_school_add": "Categories: state ",
			"state_pop_support_law_compulsory_primary_school_mult": "Categories: state ",
			"state_pop_support_law_state_religion_add": "Categories: state ",
			"state_pop_support_law_state_religion_mult": "Categories: state ",
			"state_pop_support_law_freedom_of_conscience_add": "Categories: state ",
			"state_pop_support_law_freedom_of_conscience_mult": "Categories: state ",
			"state_pop_support_law_total_separation_add": "Categories: state ",
			"state_pop_support_law_total_separation_mult": "Categories: state ",
			"state_pop_support_law_ethnostate_add": "Categories: state ",
			"state_pop_support_law_ethnostate_mult": "Categories: state ",
			"state_pop_support_law_national_supremacy_add": "Categories: state ",
			"state_pop_support_law_national_supremacy_mult": "Categories: state ",
			"state_pop_support_law_racial_segregation_add": "Categories: state ",
			"state_pop_support_law_racial_segregation_mult": "Categories: state ",
			"state_pop_support_law_cultural_exclusion_add": "Categories: state ",
			"state_pop_support_law_cultural_exclusion_mult": "Categories: state ",
			"state_pop_support_law_multicultural_add": "Categories: state ",
			"state_pop_support_law_multicultural_mult": "Categories: state ",
			"state_pop_support_law_no_colonial_affairs_add": "Categories: state ",
			"state_pop_support_law_no_colonial_affairs_mult": "Categories: state ",
			"state_pop_support_law_colonial_resettlement_add": "Categories: state ",
			"state_pop_support_law_colonial_resettlement_mult": "Categories: state ",
			"state_pop_support_law_colonial_exploitation_add": "Categories: state ",
			"state_pop_support_law_colonial_exploitation_mult": "Categories: state ",
			"state_pop_support_law_autocracy_add": "Categories: state ",
			"state_pop_support_law_autocracy_mult": "Categories: state ",
			"state_pop_support_law_oligarchy_add": "Categories: state ",
			"state_pop_support_law_oligarchy_mult": "Categories: state ",
			"state_pop_support_law_elder_council_add": "Categories: state ",
			"state_pop_support_law_elder_council_mult": "Categories: state ",
			"state_pop_support_law_landed_voting_add": "Categories: state ",
			"state_pop_support_law_landed_voting_mult": "Categories: state ",
			"state_pop_support_law_wealth_voting_add": "Categories: state ",
			"state_pop_support_law_wealth_voting_mult": "Categories: state ",
			"state_pop_support_law_census_voting_add": "Categories: state ",
			"state_pop_support_law_census_voting_mult": "Categories: state ",
			"state_pop_support_law_universal_suffrage_add": "Categories: state ",
			"state_pop_support_law_universal_suffrage_mult": "Categories: state ",
			"state_pop_support_law_anarchy_add": "Categories: state ",
			"state_pop_support_law_anarchy_mult": "Categories: state ",
			"state_pop_support_law_traditionalism_add": "Categories: state ",
			"state_pop_support_law_traditionalism_mult": "Categories: state ",
			"state_pop_support_law_interventionism_add": "Categories: state ",
			"state_pop_support_law_interventionism_mult": "Categories: state ",
			"state_pop_support_law_agrarianism_add": "Categories: state ",
			"state_pop_support_law_agrarianism_mult": "Categories: state ",
			"state_pop_support_law_laissez_faire_add": "Categories: state ",
			"state_pop_support_law_laissez_faire_mult": "Categories: state ",
			"state_pop_support_law_cooperative_ownership_add": "Categories: state ",
			"state_pop_support_law_cooperative_ownership_mult": "Categories: state ",
			"state_pop_support_law_command_economy_add": "Categories: state ",
			"state_pop_support_law_command_economy_mult": "Categories: state ",
			"state_pop_support_law_no_schools_add": "Categories: state ",
			"state_pop_support_law_no_schools_mult": "Categories: state ",
			"state_pop_support_law_religious_schools_add": "Categories: state ",
			"state_pop_support_law_religious_schools_mult": "Categories: state ",
			"state_pop_support_law_private_schools_add": "Categories: state ",
			"state_pop_support_law_private_schools_mult": "Categories: state ",
			"state_pop_support_law_public_schools_add": "Categories: state ",
			"state_pop_support_law_public_schools_mult": "Categories: state ",
			"state_pop_support_law_outlawed_dissent_add": "Categories: state ",
			"state_pop_support_law_outlawed_dissent_mult": "Categories: state ",
			"state_pop_support_law_censorship_add": "Categories: state ",
			"state_pop_support_law_censorship_mult": "Categories: state ",
			"state_pop_support_law_right_of_assembly_add": "Categories: state ",
			"state_pop_support_law_right_of_assembly_mult": "Categories: state ",
			"state_pop_support_law_protected_speech_add": "Categories: state ",
			"state_pop_support_law_protected_speech_mult": "Categories: state ",
			"state_pop_support_law_chiefdom_add": "Categories: state ",
			"state_pop_support_law_chiefdom_mult": "Categories: state ",
			"state_pop_support_law_monarchy_add": "Categories: state ",
			"state_pop_support_law_monarchy_mult": "Categories: state ",
			"state_pop_support_law_presidential_republic_add": "Categories: state ",
			"state_pop_support_law_presidential_republic_mult": "Categories: state ",
			"state_pop_support_law_parliamentary_republic_add": "Categories: state ",
			"state_pop_support_law_parliamentary_republic_mult": "Categories: state ",
			"state_pop_support_law_theocracy_add": "Categories: state ",
			"state_pop_support_law_theocracy_mult": "Categories: state ",
			"state_pop_support_law_council_republic_add": "Categories: state ",
			"state_pop_support_law_council_republic_mult": "Categories: state ",
			"state_pop_support_law_no_health_system_add": "Categories: state ",
			"state_pop_support_law_no_health_system_mult": "Categories: state ",
			"state_pop_support_law_charitable_health_system_add": "Categories: state ",
			"state_pop_support_law_charitable_health_system_mult": "Categories: state ",
			"state_pop_support_law_private_health_insurance_add": "Categories: state ",
			"state_pop_support_law_private_health_insurance_mult": "Categories: state ",
			"state_pop_support_law_public_health_insurance_add": "Categories: state ",
			"state_pop_support_law_public_health_insurance_mult": "Categories: state ",
			"state_pop_support_law_no_home_affairs_add": "Categories: state ",
			"state_pop_support_law_no_home_affairs_mult": "Categories: state ",
			"state_pop_support_law_national_guard_add": "Categories: state ",
			"state_pop_support_law_national_guard_mult": "Categories: state ",
			"state_pop_support_law_secret_police_add": "Categories: state ",
			"state_pop_support_law_secret_police_mult": "Categories: state ",
			"state_pop_support_law_guaranteed_liberties_add": "Categories: state ",
			"state_pop_support_law_guaranteed_liberties_mult": "Categories: state ",
			"state_pop_support_law_serfdom_banned_add": "Categories: state ",
			"state_pop_support_law_serfdom_banned_mult": "Categories: state ",
			"state_pop_support_law_serfdom_add": "Categories: state ",
			"state_pop_support_law_serfdom_mult": "Categories: state ",
			"state_pop_support_law_regulatory_bodies_add": "Categories: state ",
			"state_pop_support_law_regulatory_bodies_mult": "Categories: state ",
			"state_pop_support_law_worker_protections_add": "Categories: state ",
			"state_pop_support_law_worker_protections_mult": "Categories: state ",
			"state_pop_support_law_no_migration_controls_add": "Categories: state ",
			"state_pop_support_law_no_migration_controls_mult": "Categories: state ",
			"state_pop_support_law_migration_controls_add": "Categories: state ",
			"state_pop_support_law_migration_controls_mult": "Categories: state ",
			"state_pop_support_law_closed_borders_add": "Categories: state ",
			"state_pop_support_law_closed_borders_mult": "Categories: state ",
			"state_pop_support_law_no_police_add": "Categories: state ",
			"state_pop_support_law_no_police_mult": "Categories: state ",
			"state_pop_support_law_local_police_add": "Categories: state ",
			"state_pop_support_law_local_police_mult": "Categories: state ",
			"state_pop_support_law_dedicated_police_add": "Categories: state ",
			"state_pop_support_law_dedicated_police_mult": "Categories: state ",
			"state_pop_support_law_militarized_police_add": "Categories: state ",
			"state_pop_support_law_militarized_police_mult": "Categories: state ",
			"state_pop_support_law_no_womens_rights_add": "Categories: state ",
			"state_pop_support_law_no_womens_rights_mult": "Categories: state ",
			"state_pop_support_law_women_own_property_add": "Categories: state ",
			"state_pop_support_law_women_own_property_mult": "Categories: state ",
			"state_pop_support_law_women_in_the_workplace_add": "Categories: state ",
			"state_pop_support_law_women_in_the_workplace_mult": "Categories: state ",
			"state_pop_support_law_womens_suffrage_add": "Categories: state ",
			"state_pop_support_law_womens_suffrage_mult": "Categories: state ",
			"state_pop_support_law_slavery_banned_add": "Categories: state ",
			"state_pop_support_law_slavery_banned_mult": "Categories: state ",
			"state_pop_support_law_debt_slavery_add": "Categories: state ",
			"state_pop_support_law_debt_slavery_mult": "Categories: state ",
			"state_pop_support_law_slave_trade_add": "Categories: state ",
			"state_pop_support_law_slave_trade_mult": "Categories: state ",
			"state_pop_support_law_legacy_slavery_add": "Categories: state ",
			"state_pop_support_law_legacy_slavery_mult": "Categories: state ",
			"state_pop_support_law_consumption_based_taxation_add": "Categories: state ",
			"state_pop_support_law_consumption_based_taxation_mult": "Categories: state ",
			"state_pop_support_law_land_based_taxation_add": "Categories: state ",
			"state_pop_support_law_land_based_taxation_mult": "Categories: state ",
			"state_pop_support_law_per_capita_based_taxation_add": "Categories: state ",
			"state_pop_support_law_per_capita_based_taxation_mult": "Categories: state ",
			"state_pop_support_law_proportional_taxation_add": "Categories: state ",
			"state_pop_support_law_proportional_taxation_mult": "Categories: state ",
			"state_pop_support_law_graduated_taxation_add": "Categories: state ",
			"state_pop_support_law_graduated_taxation_mult": "Categories: state ",
			"state_pop_support_law_mercantilism_add": "Categories: state ",
			"state_pop_support_law_mercantilism_mult": "Categories: state ",
			"state_pop_support_law_protectionism_add": "Categories: state ",
			"state_pop_support_law_protectionism_mult": "Categories: state ",
			"state_pop_support_law_free_trade_add": "Categories: state ",
			"state_pop_support_law_free_trade_mult": "Categories: state ",
			"state_pop_support_law_isolationism_add": "Categories: state ",
			"state_pop_support_law_isolationism_mult": "Categories: state ",
			"state_pop_support_law_no_social_security_add": "Categories: state ",
			"state_pop_support_law_no_social_security_mult": "Categories: state ",
			"state_pop_support_law_poor_laws_add": "Categories: state ",
			"state_pop_support_law_poor_laws_mult": "Categories: state ",
			"state_pop_support_law_wage_subsidies_add": "Categories: state ",
			"state_pop_support_law_wage_subsidies_mult": "Categories: state ",
			"state_pop_support_law_old_age_pension_add": "Categories: state ",
			"state_pop_support_law_old_age_pension_mult": "Categories: state ",
			"country_production_weekly_innovation_mult": "Categories: country ",
			"country_production_tech_spread_mult": "Categories: country ",
			"country_production_tech_cost_mult": "Categories: country ",
			"country_military_weekly_innovation_mult": "Categories: country ",
			"country_military_tech_spread_mult": "Categories: country ",
			"country_military_tech_cost_mult": "Categories: country ",
			"country_society_weekly_innovation_mult": "Categories: country ",
			"country_society_tech_spread_mult": "Categories: country ",
			"country_society_tech_cost_mult": "Categories: country ",
			"character_command_limit_combat_unit_regular_add": "Categories: character ",
			"character_command_limit_combat_unit_conscript_add": "Categories: character ",
			"character_command_limit_combat_unit_flotilla_add": "Categories: character ",
			"building_coffee_plantation_throughput_mult": "Categories: building ",
			"building_tea_plantation_throughput_mult": "Categories: building ",
			"building_tobacco_plantation_throughput_mult": "Categories: building ",
			"building_sugar_plantation_throughput_mult": "Categories: building ",
			"building_banana_plantation_throughput_mult": "Categories: building ",
			"building_barracks_throughput_mult": "Categories: building ",
			"building_conscription_center_throughput_mult": "Categories: building ",
			"building_naval_base_throughput_mult": "Categories: building ",
			"building_skyscraper_throughput_mult": "Categories: building ",
			"building_eiffel_tower_throughput_mult": "Categories: building ",
			"building_angkor_wat_throughput_mult": "Categories: building ",
			"building_big_ben_throughput_mult": "Categories: building ",
			"building_forbidden_city_throughput_mult": "Categories: building ",
			"building_hagia_sophia_throughput_mult": "Categories: building ",
			"building_mosque_of_djenne_throughput_mult": "Categories: building ",
			"building_saint_basils_cathedral_throughput_mult": "Categories: building ",
			"building_statue_of_liberty_throughput_mult": "Categories: building ",
			"building_taj_mahal_throughput_mult": "Categories: building ",
			"building_vatican_city_throughput_mult": "Categories: building ",
			"building_white_house_throughput_mult": "Categories: building ",
			"building_machu_picchu_throughput_mult": "Categories: building ",
			"building_argebam_throughput_mult": "Categories: building ",
			"building_chichen_itza_throughput_mult": "Categories: building ",
			"building_easter_island_heads_throughput_mult": "Categories: building ",
			"building_eye_of_sahara_throughput_mult": "Categories: building ",
			"building_giza_necropolis_throughput_mult": "Categories: building ",
			"building_khaju_bridge_throughput_mult": "Categories: building ",
			"building_petra_throughput_mult": "Categories: building ",
			"building_capitol_hill_throughput_mult": "Categories: building ",
			"building_central_park_throughput_mult": "Categories: building ",
			"building_logging_camp_throughput_mult": "Categories: building ",
			"building_fishing_wharf_throughput_mult": "Categories: building ",
			"building_oil_rig_throughput_mult": "Categories: building ",
			"building_suez_canal_throughput_mult": "Categories: building ",
			"building_panama_canal_throughput_mult": "Categories: building ",
			"building_trade_center_throughput_mult": "Categories: building ",
			"building_subsistence_farms_throughput_mult": "Categories: building ",
			"building_subsistence_orchards_throughput_mult": "Categories: building ",
			"building_subsistence_pastures_throughput_mult": "Categories: building ",
			"building_subsistence_fishing_villages_throughput_mult": "Categories: building ",
			"building_subsistence_rice_paddies_throughput_mult": "Categories: building ",
		}
		# Everything below this is generated, don't change without scripts
		self.EffectsList = {
			"add_cultural_obsession": "Adds a new obsession to the culture in scope<br>add_cultural_obsession = X<br>Where X is a goods<br>Supported Scopes: culture",
			"remove_cultural_obsession": "Removes a new obsession to the culture in scope<br>remove_cultural_obsession = X<br>Where X is a goods<br>Supported Scopes: culture",
			"every_participant": "Any of two participants of the diplomatic pact in a scope<br>every_participant = { limit = { triggers } effects }<br>Supported Scopes: diplomatic_pact<br>Supported Targets: country",
			"ordered_participant": "Any of two participants of the diplomatic pact in a scope<br>ordered_participant = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: diplomatic_pact<br>Supported Targets: country",
			"random_participant": "Any of two participants of the diplomatic pact in a scope<br>random_participant = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: diplomatic_pact<br>Supported Targets: country",
			"every_market_goods": "Iterate through all active (market) goods in a market<br>every_market_goods = { limit = { triggers } effects }<br>Supported Scopes: market<br>Supported Targets: market_goods",
			"every_scope_country": "Iterate through all countries with a presence in the supported scope (currently: only market scope)<br>every_scope_country = { limit = { triggers } effects }<br>Supported Scopes: market<br>Supported Targets: country",
			"ordered_market_goods": "Iterate through all active (market) goods in a market<br>ordered_market_goods = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: market<br>Supported Targets: market_goods",
			"ordered_scope_country": "Iterate through all countries with a presence in the supported scope (currently: only market scope)<br>ordered_scope_country = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: market<br>Supported Targets: country",
			"random_market_goods": "Iterate through all active (market) goods in a market<br>random_market_goods = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: market<br>Supported Targets: market_goods",
			"random_scope_country": "Iterate through all countries with a presence in the supported scope (currently: only market scope)<br>random_scope_country = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: market<br>Supported Targets: country",
			"add_civil_war_progress": "Adds the specified number of percentage points to a civil war progress (range is [0, 1], 0.1 means 10 percentage points)<br>add_civil_war_progress = 0.1 / -0.1<br>Supported Scopes: civil_war",
			"every_scope_pop": "Iterate through all pops in a: country, state, interest group, culture<br>every_scope_pop = { limit = { triggers } effects }<br>Supported Scopes: country, culture, interest_group, state<br>Supported Targets: pop",
			"ordered_scope_pop": "Iterate through all pops in a: country, state, interest group, culture<br>ordered_scope_pop = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country, culture, interest_group, state<br>Supported Targets: pop",
			"random_scope_pop": "Iterate through all pops in a: country, state, interest group, culture<br>random_scope_pop = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country, culture, interest_group, state<br>Supported Targets: pop",
			"every_trade_route": "Iterate through all trade routes in a: market, country, marketgoods<br>every_trade_route = { limit = { triggers } effects }<br>Supported Scopes: country, market, market_goods<br>Supported Targets: trade_route",
			"ordered_trade_route": "Iterate through all trade routes in a: market, country, marketgoods<br>ordered_trade_route = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country, market, market_goods<br>Supported Targets: trade_route",
			"random_trade_route": "Iterate through all trade routes in a: market, country, marketgoods<br>random_trade_route = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country, market, market_goods<br>Supported Targets: trade_route",
			"add_ig_to_party": "Adds target interest group to scope party<br>py:py_key = {<br>	add_ig_to_party = ig:ig_key<br>}<br>Supported Scopes: party<br>Supported Targets: interest_group",
			"add_momentum": "Adds momentum to a Party during a campaign perioddd_momentum = value<br>Supported Scopes: party",
			"disband_party": "Removes all interest groups from the party, causing it to disband<br>disband_party = yes<br>Supported Scopes: party",
			"every_member": "Iterate through all interest group members of a party<br>every_member = { limit = { triggers } effects }<br>Supported Scopes: party<br>Supported Targets: interest_group",
			"ordered_member": "Iterate through all interest group members of a party<br>ordered_member = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: party<br>Supported Targets: interest_group",
			"random_member": "Iterate through all interest group members of a party<br>random_member = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: party<br>Supported Targets: interest_group",
			"remove_ig_from_party": "Removes target interest group from scope party<br>py:py_key = {<br>	remove_ig_from_party = ig:ig_key<br>}<br>Supported Scopes: party<br>Supported Targets: interest_group",
			"set_ruling_party": "Adds all interest groups in a party to government and removes all other interest groups from the government<br>set_ruling_party = yes<br>Supported Scopes: party",
			"every_scope_state": "Iterate through all states including provinces from a: country, state_region, theater, or front<br>every_scope_state = { limit = { triggers } effects }<br>Supported Scopes: country, front, state_region, strategic_region, theater<br>Supported Targets: state",
			"ordered_scope_state": "Iterate through all states including provinces from a: country, state_region, theater, or front<br>ordered_scope_state = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country, front, state_region, strategic_region, theater<br>Supported Targets: state",
			"random_scope_state": "Iterate through all states including provinces from a: country, state_region, theater, or front<br>random_scope_state = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country, front, state_region, strategic_region, theater<br>Supported Targets: state",
			"set_target_technology": "Sets a (new) target technology scope for a journal entry<br>set_target_technology = <scope><br>Supported Scopes: journalentry",
			"add_diplomatic_play_war_support": "Adds war support to the target country in the scoped diplomatic play. The amount will appear under the 'situations' header in tooltips<br>add_diplomatic_play_war_support = { target = country value = value }<br>Supported Scopes: diplomatic_play",
			"add_escalation": "Add escalation to a diplomatic play<br>add_escalation = integer<br>Supported Scopes: diplomatic_play",
			"add_initiator_backers": "Add a tag/scope country to the initiator side of a diplomatic play<br>add_initiator_backers = { list of scopes/tags }<br>Supported Scopes: diplomatic_play",
			"add_target_backers": "Add a tag/scope country to the target side of a diplomatic play<br>add_target_backers = { list of scopes/tags }<br>Supported Scopes: diplomatic_play",
			"add_war_goal": "Adds a war goal to a DP. Same data read in as add_war_goal in create_diplomatic_play<br>random_diplomatic_play = { add_war_goal = { holder = initiator type = secession primary_demand = yes }<br>Supported Scopes: diplomatic_play",
			"end_play": "End a diplomatic play<br>end_play = bool<br>Supported Scopes: diplomatic_play",
			"every_scope_initiator_ally": "Iterate through all allies to an initiator in a: diplomatic play<br>every_scope_initiator_ally = { limit = { triggers } effects }<br>Supported Scopes: diplomatic_play<br>Supported Targets: country",
			"every_scope_play_involved": "Iterate through all involved in a: diplomatic play<br>every_scope_play_involved = { limit = { triggers } effects }<br>Supported Scopes: diplomatic_play<br>Supported Targets: country",
			"every_scope_target_ally": "Iterate through all allies to a target in a: diplomatic play<br>every_scope_target_ally = { limit = { triggers } effects }<br>Supported Scopes: diplomatic_play<br>Supported Targets: country",
			"ordered_scope_initiator_ally": "Iterate through all allies to an initiator in a: diplomatic play<br>ordered_scope_initiator_ally = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: diplomatic_play<br>Supported Targets: country",
			"ordered_scope_play_involved": "Iterate through all involved in a: diplomatic play<br>ordered_scope_play_involved = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: diplomatic_play<br>Supported Targets: country",
			"ordered_scope_target_ally": "Iterate through all allies to a target in a: diplomatic play<br>ordered_scope_target_ally = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: diplomatic_play<br>Supported Targets: country",
			"random_scope_initiator_ally": "Iterate through all allies to an initiator in a: diplomatic play<br>random_scope_initiator_ally = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: diplomatic_play<br>Supported Targets: country",
			"random_scope_play_involved": "Iterate through all involved in a: diplomatic play<br>random_scope_play_involved = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: diplomatic_play<br>Supported Targets: country",
			"random_scope_target_ally": "Iterate through all allies to a target in a: diplomatic play<br>random_scope_target_ally = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: diplomatic_play<br>Supported Targets: country",
			"remove_initiator_backers": "Remove a tag/scope country from the initiator side of a diplomatic play<br>remove_initiator_backers = { list of scopes/tags }<br>Supported Scopes: diplomatic_play",
			"remove_target_backers": "Remove a tag/scope country to the target side of a diplomatic play<br>remove_target_backers = { list of scopes/tags }<br>Supported Scopes: diplomatic_play",
			"remove_war_goal": "Removes a war goal from a DP.<br>any_diplomatic_play = { limit = { has_war_goal = return_state } remove_war_goal = { who = initiator war_goal = return_state } }<br>Supported Scopes: diplomatic_play",
			"resolve_play_for": "effect end diplo play for one side, with it gaining war goals<br>resolve_play_for = initiator<br>resolve_play_for = scope:custom_scoped_country<br>Supported Scopes: diplomatic_play<br>Supported Targets: country",
			"set_key": "Set name to a diplomatic play<br>set_key = loc_key<br>Supported Scopes: diplomatic_play",
			"set_war": "Set a diplomatic play to be a war<br>set_war = bool<br>Supported Scopes: diplomatic_play",
			"lock_trade_route": "Lock a trade route for a set amount of time, preventing it from being cancelled manually<br>lock_trade_route = {<br>	years = 5<br>}<br>Supported Scopes: trade_route",
			"every_scope_admiral": "Iterate through all admirals in a: country or interestgroup<br>every_scope_admiral = { limit = { triggers } effects }<br>Supported Scopes: country, front, interest_group<br>Supported Targets: character",
			"every_scope_character": "Iterate through all characters in a: country, interestgroup, or front<br>every_scope_character = { limit = { triggers } effects }<br>Supported Scopes: country, front, interest_group<br>Supported Targets: character",
			"every_scope_general": "Iterate through all generals in a: country, interestgroup, or front<br>every_scope_general = { limit = { triggers } effects }<br>Supported Scopes: country, front, interest_group<br>Supported Targets: character",
			"every_scope_politician": "Iterate through all politicians in a: country or interestgroup<br>every_scope_politician = { limit = { triggers } effects }<br>Supported Scopes: country, front, interest_group<br>Supported Targets: character",
			"ordered_scope_admiral": "Iterate through all admirals in a: country or interestgroup<br>ordered_scope_admiral = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country, front, interest_group<br>Supported Targets: character",
			"ordered_scope_character": "Iterate through all characters in a: country, interestgroup, or front<br>ordered_scope_character = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country, front, interest_group<br>Supported Targets: character",
			"ordered_scope_general": "Iterate through all generals in a: country, interestgroup, or front<br>ordered_scope_general = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country, front, interest_group<br>Supported Targets: character",
			"ordered_scope_politician": "Iterate through all politicians in a: country or interestgroup<br>ordered_scope_politician = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country, front, interest_group<br>Supported Targets: character",
			"random_scope_admiral": "Iterate through all admirals in a: country or interestgroup<br>random_scope_admiral = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country, front, interest_group<br>Supported Targets: character",
			"random_scope_character": "Iterate through all characters in a: country, interestgroup, or front<br>random_scope_character = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country, front, interest_group<br>Supported Targets: character",
			"random_scope_general": "Iterate through all generals in a: country, interestgroup, or front<br>random_scope_general = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country, front, interest_group<br>Supported Targets: character",
			"random_scope_politician": "Iterate through all politicians in a: country or interestgroup<br>random_scope_politician = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country, front, interest_group<br>Supported Targets: character",
			"add_pop_wealth": "Adds the wealth of the pop<br>add_pop_wealth = { wealth_distribution = {...} update_loyalties = true/false }<br>Where the distribution adding to wealth of the pop<br>Supported Scopes: pop",
			"change_pop_culture": "Changes the culture of the scoped pop to a specified culture by a specified percentage<br>change_pop_culture = { target = cu:spanish value = 0.33 }<br>Supported Scopes: pop",
			"change_pop_religion": "Changes the religion of the scoped pop to a specified religion by a specified percentage<br>change_pop_religion = { target = rel:catholic value = 0.5 }<br>Supported Scopes: pop",
			"change_poptype": "Changes the type of the pop to the given type<br>Supported Scopes: pop<br>Supported Targets: pop_type",
			"move_pop": "Moves the scoped pop to the specified state (they become unemployed)<br>move_pop = s:STATE_TUSCANY.region_state:TUSNOTE: VERY IMPORTANT! This effect _may_ change the pop type of the moved pop. This will happen under the following conditions:<br>1. if the current pop type cannot be unemployed, the new pop type will be the default one<br>2.if the current pop type is a slave type and the target state does not allow slavery, the new pop type will be the default one<br>Supported Scopes: pop<br>Supported Targets: state",
			"set_pop_literacy": "Sets the literacy of the pop<br>set_pop_literacy = { literacy_rate = {...} }<br>Where the ratio is a script value computing the percentage of (workforce) pops that will be literate<br>Supported Scopes: pop",
			"set_pop_qualifications": "Sets the pop qualifications of the pop for the given type<br>set_pop_qualifications = { pop_type = {} qualifications = {...} }<br>Where the qualifications is a script value computing the percentage of (workforce) pops that will have the qualifications<br>Supported Scopes: pop",
			"set_pop_wealth": "Sets the wealth of the pop<br>set_pop_wealth = { wealth_distribution = {...} update_loyalties = true/false }<br>Where wealth is a script values<br>Supported Scopes: pop",
			"every_supporting_character": "Iterate through all characters that support the scoped political movement<br>every_supporting_character = { limit = { triggers } effects }<br>Supported Scopes: political_movement<br>Supported Targets: character",
			"every_supporting_interest_group": "Iterate through all interest groups supporting a political movement<br>every_supporting_interest_group = { limit = { triggers } effects }<br>Supported Scopes: political_movement<br>Supported Targets: interest_group",
			"ordered_supporting_character": "Iterate through all characters that support the scoped political movement<br>ordered_supporting_character = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: political_movement<br>Supported Targets: character",
			"ordered_supporting_interest_group": "Iterate through all interest groups supporting a political movement<br>ordered_supporting_interest_group = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: political_movement<br>Supported Targets: interest_group",
			"random_supporting_character": "Iterate through all characters that support the scoped political movement<br>random_supporting_character = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: political_movement<br>Supported Targets: character",
			"random_supporting_interest_group": "Iterate through all interest groups supporting a political movement<br>random_supporting_interest_group = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: political_movement<br>Supported Targets: interest_group",
			"every_scope_interest_marker": "Iterate through all interest markers in a: country, strategic region<br>every_scope_interest_marker = { limit = { triggers } effects }<br>Supported Scopes: country, strategic_region<br>Supported Targets: interest_marker",
			"ordered_scope_interest_marker": "Iterate through all interest markers in a: country, strategic region<br>ordered_scope_interest_marker = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country, strategic_region<br>Supported Targets: interest_marker",
			"random_scope_interest_marker": "Iterate through all interest markers in a: country, strategic region<br>random_scope_interest_marker = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country, strategic_region<br>Supported Targets: interest_marker",
			"add_modifier": "Adds a timed modifier effect to object in scope<br>Supported Scopes: country, building, character, front, institution, interest_group, political_movement, state",
			"remove_modifier": "Removes a timed modifier effect to object in scope<br>Supported Scopes: country, building, character, front, institution, interest_group, political_movement, state",
			"add_journal_entry": "Adds a journal entry to a scoped country's journal, with optional saved scope target<br>add_journal_entry = { type = <key> target = <scope> }<br>Supported Scopes: none",
			"add_to_global_variable_list": "Adds the event target to a variable list<br>add_to_variable_list = { name = X target = Y }<br>Where X is the name of the variable<br>Where Y is an event target<br>Supported Scopes: none",
			"add_to_list": "Adds the current scope to an arbitrarily-named list (or creates the list if not already present) to be referenced later in the (unbroken) event chain<br>add_to_list = <string> NOTE, if adding a permanent target to a temporary list, the whole list becomes permanent<br>Supported Scopes: none",
			"add_to_local_variable_list": "Adds the event target to a variable list<br>add_to_variable_list = { name = X target = Y }<br>Where X is the name of the variable<br>Where Y is an event target<br>Supported Scopes: none",
			"add_to_temporary_list": "Adds the current scope to an arbitrarily-named list (or creates the list if not already present) to be referenced later in the same effect<br>add_to_temporary_list = <string> NOTE, if adding a temporary target to a permanent list, the list will stay permanent<br>Supported Scopes: none",
			"add_to_variable_list": "Adds the event target to a variable list<br>add_to_variable_list = { name = X target = Y }<br>Where X is the name of the variable<br>Where Y is an event target<br>Supported Scopes: none",
			"assert_if": "Conditionally cause an assert during run time<br>assert_if = { limit = { X } text = Y }, where X is a trigger and Y is an optional string<br>Supported Scopes: none",
			"assert_read": "Conditionally cause an assert during read time<br>assert_read = X, where X is yes or the string to be printed in the assert<br>Supported Scopes: none",
			"change_global_variable": "Changes the value or a numeric variable<br>change_variable = { name = X operation = Y }<br>Where X is the name of the numeric variable to modify<br>Where the valid operations are add, subtract, multiply, divide, modulo, min and max<br>Where Y is a fixed point value, script value or event target of a value type<br>Supported Scopes: none",
			"change_infamy": "Change infamy of scope country<br>change_infamy = amount<br>Supported Scopes: none",
			"change_local_variable": "Changes the value or a numeric variable<br>change_variable = { name = X operation = Y }<br>Where X is the name of the numeric variable to modify<br>Where the valid operations are add, subtract, multiply, divide, modulo, min and max<br>Where Y is a fixed point value, script value or event target of a value type<br>Supported Scopes: none",
			"change_variable": "Changes the value or a numeric variable<br>change_variable = { name = X operation = Y }<br>Where X is the name of the numeric variable to modify<br>Where the valid operations are add, subtract, multiply, divide, modulo, min and max<br>Where Y is a fixed point value, script value or event target of a value type<br>Supported Scopes: none",
			"clamp_global_variable": "Clamps a variable the specified max and min<br>clamp_variable = { name = X max = Y min = Z }<br>Where X is the name of the variable<br>Where Y and Z are script values<br>Supported Scopes: none",
			"clamp_local_variable": "Clamps a variable the specified max and min<br>clamp_variable = { name = X max = Y min = Z }<br>Where X is the name of the variable<br>Where Y and Z are script values<br>Supported Scopes: none",
			"clamp_variable": "Clamps a variable the specified max and min<br>clamp_variable = { name = X max = Y min = Z }<br>Where X is the name of the variable<br>Where Y and Z are script values<br>Supported Scopes: none",
			"clear_global_variable_list": "Empties the list<br>clear_variable_list = variable_name<br>Supported Scopes: none",
			"clear_local_variable_list": "Empties the list<br>clear_variable_list = variable_name<br>Supported Scopes: none",
			"clear_saved_scope": "Clears a saved scope from the top scope<br>save_scope_as = cool_scope -> clear_saved_scope = cool_scope<br>Supported Scopes: none",
			"clear_variable_list": "Empties the list<br>clear_variable_list = variable_name<br>Supported Scopes: none",
			"create_country": "Creates a new country<br>create_country = {<br>	tag = TAG			# optional, if not specified origin's tag will be used<br>	origin = country	# optional, newly created country will inherit certain values from the origin country<br>	                    # at least one of tag or origin must be supplied<br>	state = state		# can be repeated; at least one state or province must be supplied<br>	province = province	# can be repeated; at least one state or province must be supplied<br>						# both states and provinces can be supplied at the same time<br>	on_created = effect	# optional effect that will be run with the newly created country in scope<br>}<br>Supported Scopes: none",
			"custom_description": "Wraps effects that get a custom description instead of the auto-generated one<br>custom_description = {<br>	text = <effect_localization_key><br>	subject = <optional subject scope> #defaults to current scope<br>	object = <optional object scope><br>	value = <optional script value><br>	... effects ...<br>}<br>Supported Scopes: none",
			"custom_description_no_bullet": "Wraps effects that get a custom description instead of the auto-generated one. Also ensures no bullet point appears<br>custom_description_no_bullet = {<br>	text = <effect_localization_key><br>	subject = <optional subject scope> #defaults to current scope<br>	object = <optional object scope><br>	value = <optional script value><br>	... effects ...<br>}<br>Supported Scopes: none",
			"custom_label": "just a tooltip, the scope as object (for grouping, localization).<br>custom_label = key; alternatively custom_label = { text = key subject = scope (optional) <hidden effects> }<br>Supported Scopes: none",
			"custom_tooltip": "just a tooltip, the scope as subject (for grouping, localization).<br>custom_tooltip = key; alternatively custom_tooltip = { text = key subject = scope (optional) <hidden effects> }<br>Supported Scopes: none",
			"debug_log": "Log a string to the debug log when this effect executes, debug_log = message, the message can be a localization string with ROOT, SCOPE and PREV available<br>Supported Scopes: none",
			"debug_log_scopes": "Log the current scope to the debug log when this effect executes<br>debug_log_scopes = yes # log full scope info<br>debug_log_scopes = no  # log only current scope<br>Supported Scopes: none",
			"else": "Executes enclosed effects if limit criteria of preceding 'if' or 'else_if' is not met<br>if = { limit = { triggers } effects }<br>else = { effects }<br>Supported Scopes: none",
			"else_if": "Executes enclosed effects if limit criteria of preceding 'if' or 'else_if' is not met, and its own limit is met<br>if = { limit = { triggers } effects }<br>else_if = { limit = { triggers } effects }<br>Supported Scopes: none",
			"every_character": "Iterate through all characters globally<br>every_character = { limit = { triggers } effects }<br>Supported Scopes: none<br>Supported Targets: character",
			"every_character_in_exile_pool": "Iterate through characters in the exile pool<br>every_character_in_exile_pool = { limit = { triggers } effects }<br>Supported Scopes: none<br>Supported Targets: character",
			"every_character_in_void": "Iterate through characters in the void<br>every_character_in_void = { limit = { triggers } effects }<br>Supported Scopes: none<br>Supported Targets: character",
			"every_country": "Iterate through all countries globally<br>every_country = { limit = { triggers } effects }<br>Supported Scopes: none<br>Supported Targets: country",
			"every_diplomatic_play": "Iterate through all diplomatic plays globally<br>every_diplomatic_play = { limit = { triggers } effects }<br>Supported Scopes: none<br>Supported Targets: diplomatic_play",
			"every_in_global_list": "Iterate through all items in global list. list = name or variable = name<br>every_in_global_list = { limit = { triggers } effects }<br>Supported Scopes: none",
			"every_in_list": "Iterate through all items in list. list = name or variable = name<br>every_in_list = { limit = { triggers } effects }<br>Supported Scopes: none",
			"every_in_local_list": "Iterate through all items in local list. list = name or variable = name<br>every_in_local_list = { limit = { triggers } effects }<br>Supported Scopes: none",
			"every_market": "Iterate through all markets globally<br>every_market = { limit = { triggers } effects }<br>Supported Scopes: none<br>Supported Targets: market",
			"every_state": "Iterate through all states globally<br>every_state = { limit = { triggers } effects }<br>Supported Scopes: none<br>Supported Targets: state",
			"every_state_region": "Iterate through all state regions<br>every_state_region = { limit = { triggers } effects }<br>Supported Scopes: none<br>Supported Targets: state_region",
			"hidden_effect": "Enclosed effects are not shown in tooltips<br>hidden_effect = { <more effects> }<br>Supported Scopes: none",
			"if": "Executes enclosed effects if limit criteria are met<br>if = { limit = { triggers } effects }<br>Supported Scopes: none",
			"ordered_character": "Iterate through all characters globally<br>ordered_character = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: none<br>Supported Targets: character",
			"ordered_character_in_exile_pool": "Iterate through characters in the exile pool<br>ordered_character_in_exile_pool = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: none<br>Supported Targets: character",
			"ordered_character_in_void": "Iterate through characters in the void<br>ordered_character_in_void = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: none<br>Supported Targets: character",
			"ordered_country": "Iterate through all countries globally<br>ordered_country = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: none<br>Supported Targets: country",
			"ordered_diplomatic_play": "Iterate through all diplomatic plays globally<br>ordered_diplomatic_play = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: none<br>Supported Targets: diplomatic_play",
			"ordered_in_global_list": "Iterate through all items in global list. list = name or variable = name<br>ordered_in_global_list = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: none",
			"ordered_in_list": "Iterate through all items in list. list = name or variable = name<br>ordered_in_list = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: none",
			"ordered_in_local_list": "Iterate through all items in local list. list = name or variable = name<br>ordered_in_local_list = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: none",
			"ordered_market": "Iterate through all markets globally<br>ordered_market = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: none<br>Supported Targets: market",
			"ordered_state": "Iterate through all states globally<br>ordered_state = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: none<br>Supported Targets: state",
			"ordered_state_region": "Iterate through all state regions<br>ordered_state_region = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: none<br>Supported Targets: state_region",
			"post_notification": "Posts notification<br>Supported Scopes: none",
			"post_proposal": "Posts proposal<br>Supported Scopes: none",
			"random": "run an effect depending on a random chance, do nothing otherwise.<br>random = {<br>    chance = 0-100     # random chance in percent. can also be a script value or complex math<br>    modifier = { ... } # optional MTTH-style modifier for the chance<br>    effects...         # effects to run if the random roll succeeds<br>}<br>Supported Scopes: none",
			"random_character": "Iterate through all characters globally<br>random_character = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: none<br>Supported Targets: character",
			"random_character_in_exile_pool": "Iterate through characters in the exile pool<br>random_character_in_exile_pool = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: none<br>Supported Targets: character",
			"random_character_in_void": "Iterate through characters in the void<br>random_character_in_void = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: none<br>Supported Targets: character",
			"random_country": "Iterate through all countries globally<br>random_country = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: none<br>Supported Targets: country",
			"random_diplomatic_play": "Iterate through all diplomatic plays globally<br>random_diplomatic_play = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: none<br>Supported Targets: diplomatic_play",
			"random_in_global_list": "Iterate through all items in global list. list = name or variable = name<br>random_in_global_list = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: none",
			"random_in_list": "Iterate through all items in list. list = name or variable = name<br>random_in_list = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: none",
			"random_in_local_list": "Iterate through all items in local list. list = name or variable = name<br>random_in_local_list = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: none",
			"random_list": "a random list effect<br>random_list = { X1 = { trigger = { enables/disable this effect} modifier = Y1 effect1 } X2 = { trigger = { enables/disable this effect} modifier = Y2 effect2 } ... }<br>Selects one effect from the list and fires it. The effects are weighted by numbers X1, X2... (the higher the number, the higher the chance of the effect being picked).<br>The chances can be modified by optional value modifier lists Y1, Y2... (AKA MTTH constructs)<br>Supported Scopes: none",
			"random_log_scopes": "Log the current scope to the random log when this effect executes.<br>Only use temprorarily for debugging purposes as it can introduce localized strings into the random log.<br>random_log_scopes = yes # log full scope info<br>random_log_scopes = no  # log only current scope<br>Supported Scopes: none",
			"random_market": "Iterate through all markets globally<br>random_market = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: none<br>Supported Targets: market",
			"random_state": "Iterate through all states globally<br>random_state = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: none<br>Supported Targets: state",
			"random_state_region": "Iterate through all state regions<br>random_state_region = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: none<br>Supported Targets: state_region",
			"remove_from_list": "Removes the current scope from a named list remove_from_list = <string><br>Supported Scopes: none",
			"remove_global_variable": "Removes a variable<br>remove_variable = variable_name<br>Supported Scopes: none",
			"remove_list_global_variable": "Removes the target from a variable list<br>remove_list_variable = { name = X target = Y }<br>Where X is the name of the variable<br>Where Y is an event target<br>Supported Scopes: none",
			"remove_list_local_variable": "Removes the target from a variable list<br>remove_list_variable = { name = X target = Y }<br>Where X is the name of the variable<br>Where Y is an event target<br>Supported Scopes: none",
			"remove_list_variable": "Removes the target from a variable list<br>remove_list_variable = { name = X target = Y }<br>Where X is the name of the variable<br>Where Y is an event target<br>Supported Scopes: none",
			"remove_local_variable": "Removes a variable<br>remove_variable = variable_name<br>Supported Scopes: none",
			"remove_variable": "Removes a variable<br>remove_variable = variable_name<br>Supported Scopes: none",
			"round_global_variable": "Rounds a variable to the nearest specified value<br>round_variable = { name = X nearest = Y }<br>Where X is the name of the variable<br>Where Y is a script value<br>Supported Scopes: none",
			"round_local_variable": "Rounds a variable to the nearest specified value<br>round_variable = { name = X nearest = Y }<br>Where X is the name of the variable<br>Where Y is a script value<br>Supported Scopes: none",
			"round_variable": "Rounds a variable to the nearest specified value<br>round_variable = { name = X nearest = Y }<br>Where X is the name of the variable<br>Where Y is a script value<br>Supported Scopes: none",
			"save_scope_as": "Saves the current scope as an arbitrarily-named target to be referenced later in the (unbroken) event chain<br>save_scope_as = <string><br>Supported Scopes: none",
			"save_scope_value_as": "Saves a numerical or bool value as an arbitrarily-named target to be referenced later in the (unbroken) event chain<br>save_scope_value_as = { name = <string> value = x }<br>Supported Scopes: none",
			"save_temporary_scope_as": "Saves the current scope as an arbitrarily-named temporary target to be referenced later in the same effect<br>save_temporary_scope_as = <string><br>Supported Scopes: none",
			"save_temporary_scope_value_as": "Saves a numerical or bool value as an arbitrarily-named temporary target to be referenced later in the same effect<br>save_temporary_scope_value_as = { name = <string> value = x }<br>Supported Scopes: none",
			"set_global_variable": "Sets a variable<br>set_variable = { name = X value = Y days = Z }<br>Where X is the name of the variable used to then access it<br>Where Y is any event target, bool, value, script value or flag (flag:W)<br>An optional days where Z is the number of days or script value<br>This variable will be accessible with <type_>var:X. With type being in a scope object or in a top scope<br>Can also be used as set_variable = X (equivalent to set_variable = { name = X value = yes })<br>Supported Scopes: none",
			"set_local_variable": "Sets a variable<br>set_variable = { name = X value = Y days = Z }<br>Where X is the name of the variable used to then access it<br>Where Y is any event target, bool, value, script value or flag (flag:W)<br>An optional days where Z is the number of days or script value<br>This variable will be accessible with <type_>var:X. With type being in a scope object or in a top scope<br>Can also be used as set_variable = X (equivalent to set_variable = { name = X value = yes })<br>Supported Scopes: none",
			"set_variable": "Sets a variable<br>set_variable = { name = X value = Y days = Z }<br>Where X is the name of the variable used to then access it<br>Where Y is any event target, bool, value, script value or flag (flag:W)<br>An optional days where Z is the number of days or script value<br>This variable will be accessible with <type_>var:X. With type being in a scope object or in a top scope<br>Can also be used as set_variable = X (equivalent to set_variable = { name = X value = yes })<br>Supported Scopes: none",
			"show_as_tooltip": "Enclosed effects are only shown in tooltips (but are not actually executed)<br>show_as_tooltip = { <more effects> }<br>Supported Scopes: none",
			"start_tutorial_lesson": "Starts the tutorial lesson with the given key. Does nothing if the tutorial is not running, the lesson is completed (or already running), or the lesson cannot be triggered (e.g. trigger fails)<br>Supported Scopes: none",
			"switch": "Switch on a trigger for the evaluation of another trigger with an optional fallback trigger.<br>switch = {<br>	trigger = simple_assign_trigger<br>	case_1 = { effects }<br>	case_2 = { effects }<br>	case_n = { effects }<br>	fallback = { effects }<br>Supported Scopes: none",
			"trigger_event": "Triggers an event for the current scope<br>trigger_event = X<br>trigger_event = { id = X days/weeks/months/years = Y }<br>Where X is an event ID and Y is an integer to delay the event by<br>Supported Scopes: none",
			"while": "Repeats enclosed effects while limit criteria are met or until set iteration count is reached<br>while = { limit = { triggers } effects }<br> while = { count = 3 effects }<br>Default max of 1000.<br>Supported Scopes: none",
			"set_subsidized": "Sets whether a building is subsidized<br>set_subsidized = yes/no<br>Supported Scopes: building",
			"abandon_revolution": "Removes interest group from revolution<br>abandon_revolution = yes/no<br>Supported Scopes: interest_group",
			"add_ideology": "Adds an ideology to scoped interest group<br>add_ideology = x<br>Supported Scopes: interest_group",
			"add_ruling_interest_group": "Adds interest group to government<br>add_ruling_interest_group = yes/no<br>Supported Scopes: interest_group",
			"every_preferred_law": "Iterate through all active and possible laws in an interest group's country, ordered by how much they prefer that law<br>every_preferred_law = { limit = { triggers } effects }<br>Supported Scopes: interest_group<br>Supported Targets: law",
			"join_revolution": "Adds interest group to ongoing revolution<br>join_revolution = yes/no<br>Supported Scopes: interest_group",
			"ordered_preferred_law": "Iterate through all active and possible laws in an interest group's country, ordered by how much they prefer that law<br>ordered_preferred_law = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: interest_group<br>Supported Targets: law",
			"random_preferred_law": "Iterate through all active and possible laws in an interest group's country, ordered by how much they prefer that law<br>random_preferred_law = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: interest_group<br>Supported Targets: law",
			"remove_ideology": "Removes an ideology from scoped interest group<br>remove_ideology = x<br>Supported Scopes: interest_group",
			"remove_ruling_interest_group": "Removes interest group in scope from government<br>remove_ruling_interest_group = yes/no<br>Supported Scopes: interest_group",
			"set_ig_bolstering": "Starts/stops bolstering the interest group in scope<br>set_ig_bolstering = yes/no<br>Supported Scopes: interest_group",
			"set_ig_suppression": "Starts/stops suppressing the interest group in scope<br>set_ig_suppression = yes/no<br>Supported Scopes: interest_group",
			"set_interest_group_name": "Renames interest group to the specified loc key<br>set_interest_group_name = x<br>Supported Scopes: interest_group",
			"activate_building": "Activate a building in a state<br>activate_building = { building = building_key }<br>Supported Scopes: state",
			"add_culture_standard_of_living_modifier": "Apply a standard of living modifier in the scoped state for the given culture. Other than the required culture argument, this effect has the same syntax as add_modifier.<br>Supported Scopes: state",
			"add_loyalists_in_state": "Adds loyalists to pops in scope state, all parameters except value are optional,<br>if interest_group is specified pops gain loyalists based on their ig membership,<br>pop type and strata cannot be used at the same time<br>add_radicals_in_state = {<br>	value = x<br>	interest_group = <scope/ig:key><br>	pop_type = <scope/pop_type:key><br>	strata = <key><br>	culture = <scope/cu:key><br>	religion = <scope/rel:key><br>}<br>Supported Scopes: state",
			"add_radicals_in_state": "Adds radicals to pops in scope state, all parameters except value are optional,<br>if interest_group is specified pops gain radicals based on their ig membership,<br>pop type and strata cannot be used at the same time<br>add_radicals_in_state = {<br>	value = x<br>	interest_group = <scope/ig:key><br>	pop_type = <scope/pop_type:key><br>	strata = <key><br>	culture = <scope/cu:key><br>	religion = <scope/rel:key><br>}<br>Supported Scopes: state",
			"add_religion_standard_of_living_modifier": "Apply a standard of living modifier in the scoped state for the given religion. Other than the required religion argument, this effect has the same syntax as add_modifier.<br>Supported Scopes: state",
			"convert_population": "Changes X% of the different religion population to the specified religion.<br>convert_population = { target = rel:catholic value = 0.5 }<br>Supported Scopes: state",
			"create_building": "Creates a building in the scoped state. Supported values are:<br>	building = <building><br>	activate_production_methods = { <production_methods> }<br>	subsidized = yes/no<br>	reserves = [0..1] (percentage of cash reserves the building should be created with)<br>	level = arable_land/integerIf level is \"arable_land\", the building will be of the necessary level to exhaust all available arable land in the state.<br>If level is \"urbanization\", the building will be of the necessary level to exhaust all available urbanzation in the state.<br>If level is an integer, the building will be of that levelPlease note: this effect works a little differently if there already is a building of the specified type in the state. If that happens:<br>	1. the level will be the maximum between the scripted level and the level of the existing building<br>	2. the cash reserves will be the maximum between the scripted value and the existing cash reserves<br>Supported Scopes: state",
			"create_pop": "Creates a pop in the scoped state<br>Supported Scopes: state",
			"deactivate_building": "Deactivate a building in a state<br>deactivate_building = { building = building_key }<br>Supported Scopes: state",
			"force_resource_depletion": "Forces a resource depletion in state<br>force_resource_depletion = bg_gold_mining<br>Supported Scopes: state",
			"force_resource_discovery": "Forces a resource discovery in state<br>force_resource_discovery = bg_gold_mining<br>Supported Scopes: state",
			"kill_population_percent_in_state": "Kills a percentage of the population in the scoped state.All parameters except percent are optional. Pop type and strata cannot be used at the same time.kill_population_percent = {<br>	percent = <decimal value><br>	culture = <scope/cu:key><br>	religion = <scope/rel:key><br>	interest_group = <scope/ig:key><br>	pop_type = <scope/pop_type:key><br>	strata = <key><br>}<br>Supported Scopes: state",
			"remove_building": "Remove a building in the scope state<br>remove_building = building_key<br>Supported Scopes: state",
			"set_available_for_autonomous_investment": "Sets a building type as available for autonomous investment in the current scoped State<br>set_available_for_autonomous_investment = building type scope<br>Supported Scopes: state<br>Supported Targets: building_type",
			"set_state_owner": "Set State Owner<br>set_state_owner = scope<br>Supported Scopes: state<br>Supported Targets: country",
			"set_state_type": "Sets a state to a certain type (incorporated, unincorporated, treaty_port)<br>Supported Scopes: state",
			"start_building_construction": "Start constructing a building in a scoped state as a government construction<br>start_building_construction = building_barracks<br>Supported Scopes: state",
			"start_privately_funded_building_construction": "Start constructing a building in a scoped state as a private construction<br>start_privately_funded_building_construction = building_barracks<br>Supported Scopes: state",
			"unset_available_for_autonomous_investment": "Sets a building type as unavailable for autonomous investment in the current scoped State<br>unset_available_for_autonomous_investment = building type scope<br>Supported Scopes: state<br>Supported Targets: building_type",
			"add_war_exhaustion": "Adds war exhaustion to the target country in the scoped war. The amount will appear under the 'situations' header in tooltips<br>add_war_exhaustion = { target = country value = value }<br>Supported Scopes: war",
			"add_war_war_support": "Adds war support to the target country in the scoped war. The amount will appear under the 'situations' header in tooltips<br>add_war_war_support = { target = country value = value }<br>Supported Scopes: war",
			"every_scope_front": "Iterate through all Fronts related to the scoped War<br>every_scope_front = { limit = { triggers } effects }<br>Supported Scopes: war<br>Supported Targets: front",
			"ordered_scope_front": "Iterate through all Fronts related to the scoped War<br>ordered_scope_front = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: war<br>Supported Targets: front",
			"random_scope_front": "Iterate through all Fronts related to the scoped War<br>random_scope_front = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: war<br>Supported Targets: front",
			"every_neighbouring_state": "Iterate through all states neighbouring a state region<br>every_neighbouring_state = { limit = { triggers } effects }<br>Supported Scopes: country, state, state_region, strategic_region<br>Supported Targets: state",
			"ordered_neighbouring_state": "Iterate through all states neighbouring a state region<br>ordered_neighbouring_state = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country, state, state_region, strategic_region<br>Supported Targets: state",
			"random_neighbouring_state": "Iterate through all states neighbouring a state region<br>random_neighbouring_state = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country, state, state_region, strategic_region<br>Supported Targets: state",
			"activate_law": "Activates a law for a country<br>Supported Scopes: country<br>Supported Targets: law_type",
			"add_banned_goods": "Adds a total ban of a good to a country<br>add_banned_goods = <goods key/scope><br>Supported Scopes: country<br>Supported Targets: goods",
			"add_change_relations_progress": "Add progress towards changing relations between two countries<br>add_change_relations_progress = {<br>	tcountry = country scope/tag<br>	value = amount<br>}<br>Supported Scopes: country",
			"add_declared_interest": "Will create a declared interest in the target strategic region<br>c:FRA = { add_declared_interest = region_nile_basin }<br>Supported Scopes: country",
			"add_enactment_modifier": "Adds an enactment-related timed modifier effect to object in scope<br>Supported Scopes: country",
			"add_enactment_phase": "Changes the current law enactment phase in scope country by an added amount. The result will be clamped between 0 and NPolitics::LAW_ENACTMENT_MAX_PHASES. The enacting law will pass if the resulting value equals NPolitics::LAW_ENACTMENT_MAX_PHASES.<br>Supported Scopes: country",
			"add_enactment_setback": "Changes the current law enactment setback count in scope country by an added amount. The result will be clamped between 0 and NPolitics::LAW_ENACTMENT_MAX_SETBACKS. The law enactment will fail if the resulting value equals NPolitics::LAW_ENACTMENT_MAX_SETBACKS.<br>Supported Scopes: country",
			"add_era_researched": "Add specified era as researched in a country scope<br>add_era_researched = era<br>Supported Scopes: country",
			"add_investment_pool": "Directly adds money to the investment pool<br>add_investment_pool = 50<br>Supported Scopes: country",
			"add_law_progress": "Adds x% progress to the current checkpoint of the law being passed (range is [0, 1], 0.1 means 10 percentage points)<br>add_law_progress = 0.1 / -0.1<br>Supported Scopes: country",
			"add_loyalists": "Adds loyalists to pops in scope country, all parameters except value are optional,<br>if interest_group is specified pops gain loyalists based on their ig membership,<br>pop type and strata cannot be used at the same time<br>add_radicals = {<br>	value = x<br>	interest_group = <scope/ig:key><br>	pop_type = <scope/pop_type:key><br>	strata = <key><br>	culture = <scope/cu:key><br>	religion = <scope/rel:key><br>}<br>Supported Scopes: country",
			"add_primary_culture": "Adds a culture to the primary cultures of a country<br>add_primary_culture = X<br>Where X is a culture scope<br>Supported Scopes: country<br>Supported Targets: culture",
			"add_radicals": "Adds radicals to pops in scope country, all parameters except value are optional,<br>if interest_group is specified pops gain radicals based on their ig membership,<br>pop type and strata cannot be used at the same time<br>add_radicals = {<br>	value = x<br>	interest_group = <scope/ig:key><br>	pop_type = <scope/pop_type:key><br>	strata = <key><br>	culture = <scope/cu:key><br>	religion = <scope/rel:key><br>}<br>Supported Scopes: country",
			"add_taxed_goods": "Adds consumption taxes on a good to a country<br>add_taxed_goods = <goods key/scope><br>Supported Scopes: country<br>Supported Targets: goods",
			"add_technology_progress": "Add technology progress<br>add_technology_progress = { progress = X technology = Y }<br>Where X is a fixed point and Y is an technology<br>Supported Scopes: country",
			"add_technology_researched": "Research the specified technology in a country scope<br>add_technology_researched = technology<br>Supported Scopes: country",
			"add_treasury": "Add/remove money from a country<br>add_treasury = fixed point<br>Supported Scopes: country",
			"annex": "Annexes a country<br>annex = scope<br>Supported Scopes: country<br>Supported Targets: country",
			"call_election": "Sets the next election date for country in N months<br>call_election = {<br>	months = 6<br>}<br>Supported Scopes: country",
			"cancel_enactment": "Stops enacting the country's currently enacting law<br>cancel_enactment = yes<br>Supported Scopes: country",
			"change_institution_investment_level": "Add/remove the investment level for the institution<br>change_institution_investment_level = { <br>	institution = institution_police<br>	investment = -1<br>}<br>Supported Scopes: country",
			"change_relations": "Change relations between two countries<br>change_relations = {<br>	tcountry = country scope/tag<br>	value = amount<br>}<br>Supported Scopes: country",
			"change_subject_type": "Will change the subject type of the country that is the current scope.<br>change_subject_type = subject_type_dominion<br>Supported Scopes: country",
			"change_tag": "Change the tag for the scoped country<br>c:GBR = { change_tag = FRA }<br>Supported Scopes: country",
			"change_tension": "Change tension between two countries<br>change_tension = {<br>	tcountry = country scope/tag<br>	value = amount<br>}<br>Supported Scopes: country",
			"clear_debt": "Clear country loans = bool<br>Supported Scopes: country",
			"clear_enactment_modifier": "Clears the current law enactment modifier of scope country.<br>Supported Scopes: country",
			"clear_scaled_debt": "Clears an amount of debt equal to the defined multiplier on target's max credit<br>clear_scaled_debt = value<br>Supported Scopes: country",
			"complete_objective_subgoal": "Completes an objective subgoal<br>complete_objective_subgoal = <key><br>Supported Scopes: country",
			"create_character": "Creates a character, any option can be omitted.<br>create_character = {<br>	name = loc_key or alternatively first_name and last_name separately<br>	culture = culture_tag<br>	religion = religion scope (if omitted, it's defined by the character's culture religion)<br>	female = bool or character scope (gets the same value from the character)<br>	noble = bool or character scope (gets the same value from the character)<br>	ruler = bool<br>	heir = bool<br>	historical = bool<br>	age = integer, range, or character scope (gets the age from a character)<br>	ideology = ideology key or scope<br>	interest_group = interest group key or scope<br>	template = base template to generate the character from<br>	on_created = effect<br>	save_scope_as = scope name<br>	trait_generation = effect<br>	hq = HQ scope or strategic region scope<br>}<br>Supported Scopes: country",
			"create_diplomatic_pact": "Create a diplomatic pact between two countries, with scope country as initiator<br>create_diplomatic_pact = {<br>	tcountry = country scope/tag<br>	type = diplomatic action type<br>}<br>Supported Scopes: country",
			"create_diplomatic_play": "Create a diplomatic play with the scoped object as target<br>create_diplomatic_play = {<br>	name = loc_key<br>	escalation = integer between 0 and 100<br>	war = bool<br>	initiator = country scope/tag<br>	type = diplomatic play type<br>	add_initiator_backers = { list of country scopes/tags }<br>	add_target_backers = { list of country scopes/tags }<br>	add_war_goal = { holder = country scope/tag, type = x, state = <state target>, country = <country target,> region = <region target>  }<br>}<br>Supported Scopes: country",
			"create_incident": "Creates a diplomatic incident that generates infamy, with target country as the victim<br>create_incident = {<br>	tcountry = country scope/tag<br>	value = infamy amount<br>}<br>Supported Scopes: country",
			"create_trade_route": "Creates a new Trade Route<br>trade_route = {<br>	goods = x<br>	level = x<br>	import = yes/no<br>	origin = state_region<br>	target = state_region<br>}<br>Supported Scopes: country",
			"create_truce": "Create a truce betweeen two countries<br>create_truce = {<br>	tcountry = country scope/tag<br>	months = integer<br>}<br>Supported Scopes: country",
			"deactivate_law": "Deactivates a law for a country<br>Supported Scopes: country<br>Supported Targets: law_type",
			"deactivate_parties": "Deactivates parties in scoped country.<br>deactivate_parties = yes<br>Supported Scopes: country",
			"end_truce": "Ends a truce betweeen two countries<br>end_truce = {<br>	tcountry = country scope/tag<br>	months = integer<br>}<br>Supported Scopes: country",
			"every_active_party": "Iterate through all active political parties in a country<br>every_active_party = { limit = { triggers } effects }<br>Supported Scopes: country<br>Supported Targets: party",
			"every_civil_war": "Iterate through all civil wars related to the scoped country<br>every_civil_war = { limit = { triggers } effects }<br>Supported Scopes: country<br>Supported Targets: civil_war",
			"every_in_hierarchy": "Any country in current hierarchy, including current<br>every_in_hierarchy = { limit = { triggers } effects }<br>Supported Scopes: country<br>Supported Targets: country",
			"every_interest_group": "Iterate through all interest groups in a country<br>every_interest_group = { limit = { triggers } effects }<br>Supported Scopes: country<br>Supported Targets: interest_group",
			"every_law": "Iterate through all laws in a country<br>every_law = { limit = { triggers } effects }<br>Supported Scopes: country<br>Supported Targets: law",
			"every_overlord_or_above": "Any country above current in hierarchy<br>every_overlord_or_above = { limit = { triggers } effects }<br>Supported Scopes: country<br>Supported Targets: country",
			"every_political_movement": "Iterate through all political movements in a country<br>every_political_movement = { limit = { triggers } effects }<br>Supported Scopes: country<br>Supported Targets: political_movement",
			"every_potential_party": "Iterate through all potential political parties in a country<br>every_potential_party = { limit = { triggers } effects }<br>Supported Scopes: country<br>Supported Targets: party",
			"every_rival_country": "Any country that is rival to the country in a scope<br>every_rival_country = { limit = { triggers } effects }<br>Supported Scopes: country<br>Supported Targets: country",
			"every_scope_ally": "Iterate through all allies to a: country<br>every_scope_ally = { limit = { triggers } effects }<br>Supported Scopes: country<br>Supported Targets: country",
			"every_scope_cobelligerent": "Iterate through all co-belligerents to a: country<br>every_scope_cobelligerent = { limit = { triggers } effects }<br>Supported Scopes: country<br>Supported Targets: country",
			"every_scope_diplomatic_pact": "Any diplomatic pact of the country in a scope<br>every_scope_diplomatic_pact = { limit = { triggers } effects }<br>Supported Scopes: country<br>Supported Targets: diplomatic_pact",
			"every_scope_theater": "Iterate through all theaters in a: country<br>every_scope_theater = { limit = { triggers } effects }<br>Supported Scopes: country<br>Supported Targets: theater",
			"every_scope_violate_sovereignty_interested_parties": "Iterate through all countries that would be interested if country in scope has their sovereignty violated<br>every_scope_violate_sovereignty_interested_parties = { limit = { triggers } effects }<br>Supported Scopes: country<br>Supported Targets: country",
			"every_scope_violate_sovereignty_wars": "Iterate through all relevant wars if target country had their sovereignty violated by scoped country<br>every_scope_violate_sovereignty_wars = { limit = { triggers } effects }<br>Supported Scopes: country<br>Supported Targets: war",
			"every_scope_war": "Iterate through all wars related to the scope<br>every_scope_war = { limit = { triggers } effects }<br>Supported Scopes: country<br>Supported Targets: war",
			"every_strategic_objective": "Iterate through all Strategic Objective states from the scoped Country<br>every_strategic_objective = { limit = { triggers } effects }<br>Supported Scopes: country<br>Supported Targets: state",
			"every_subject_or_below": "Any country below current in hierarchy<br>every_subject_or_below = { limit = { triggers } effects }<br>Supported Scopes: country<br>Supported Targets: country",
			"kill_population_percent": "Kills a percentage of the population in the scoped country.All parameters except percent are optional. Pop type and strata cannot be used at the same time.kill_population_percent = {<br>	percent = <decimal value><br>	culture = <scope/cu:key><br>	religion = <scope/rel:key><br>	interest_group = <scope/ig:key><br>	pop_type = <scope/pop_type:key><br>	strata = <key><br>}<br>Supported Scopes: country",
			"make_independent": "Makes a country independent.<br>make_independent = bool<br>Supported Scopes: country",
			"ordered_active_party": "Iterate through all active political parties in a country<br>ordered_active_party = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country<br>Supported Targets: party",
			"ordered_civil_war": "Iterate through all civil wars related to the scoped country<br>ordered_civil_war = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country<br>Supported Targets: civil_war",
			"ordered_in_hierarchy": "Any country in current hierarchy, including current<br>ordered_in_hierarchy = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country<br>Supported Targets: country",
			"ordered_interest_group": "Iterate through all interest groups in a country<br>ordered_interest_group = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country<br>Supported Targets: interest_group",
			"ordered_law": "Iterate through all laws in a country<br>ordered_law = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country<br>Supported Targets: law",
			"ordered_overlord_or_above": "Any country above current in hierarchy<br>ordered_overlord_or_above = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country<br>Supported Targets: country",
			"ordered_political_movement": "Iterate through all political movements in a country<br>ordered_political_movement = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country<br>Supported Targets: political_movement",
			"ordered_potential_party": "Iterate through all potential political parties in a country<br>ordered_potential_party = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country<br>Supported Targets: party",
			"ordered_rival_country": "Any country that is rival to the country in a scope<br>ordered_rival_country = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country<br>Supported Targets: country",
			"ordered_scope_ally": "Iterate through all allies to a: country<br>ordered_scope_ally = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country<br>Supported Targets: country",
			"ordered_scope_cobelligerent": "Iterate through all co-belligerents to a: country<br>ordered_scope_cobelligerent = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country<br>Supported Targets: country",
			"ordered_scope_diplomatic_pact": "Any diplomatic pact of the country in a scope<br>ordered_scope_diplomatic_pact = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country<br>Supported Targets: diplomatic_pact",
			"ordered_scope_theater": "Iterate through all theaters in a: country<br>ordered_scope_theater = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country<br>Supported Targets: theater",
			"ordered_scope_violate_sovereignty_interested_parties": "Iterate through all countries that would be interested if country in scope has their sovereignty violated<br>ordered_scope_violate_sovereignty_interested_parties = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country<br>Supported Targets: country",
			"ordered_scope_violate_sovereignty_wars": "Iterate through all relevant wars if target country had their sovereignty violated by scoped country<br>ordered_scope_violate_sovereignty_wars = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country<br>Supported Targets: war",
			"ordered_scope_war": "Iterate through all wars related to the scope<br>ordered_scope_war = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country<br>Supported Targets: war",
			"ordered_strategic_objective": "Iterate through all Strategic Objective states from the scoped Country<br>ordered_strategic_objective = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country<br>Supported Targets: state",
			"ordered_subject_or_below": "Any country below current in hierarchy<br>ordered_subject_or_below = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country<br>Supported Targets: country",
			"play_as": "Change which country scoped country's player will play as<br>play_as = <scope><br>Supported Scopes: country<br>Supported Targets: country",
			"random_active_party": "Iterate through all active political parties in a country<br>random_active_party = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country<br>Supported Targets: party",
			"random_civil_war": "Iterate through all civil wars related to the scoped country<br>random_civil_war = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country<br>Supported Targets: civil_war",
			"random_in_hierarchy": "Any country in current hierarchy, including current<br>random_in_hierarchy = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country<br>Supported Targets: country",
			"random_interest_group": "Iterate through all interest groups in a country<br>random_interest_group = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country<br>Supported Targets: interest_group",
			"random_law": "Iterate through all laws in a country<br>random_law = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country<br>Supported Targets: law",
			"random_overlord_or_above": "Any country above current in hierarchy<br>random_overlord_or_above = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country<br>Supported Targets: country",
			"random_political_movement": "Iterate through all political movements in a country<br>random_political_movement = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country<br>Supported Targets: political_movement",
			"random_potential_party": "Iterate through all potential political parties in a country<br>random_potential_party = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country<br>Supported Targets: party",
			"random_rival_country": "Any country that is rival to the country in a scope<br>random_rival_country = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country<br>Supported Targets: country",
			"random_scope_ally": "Iterate through all allies to a: country<br>random_scope_ally = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country<br>Supported Targets: country",
			"random_scope_cobelligerent": "Iterate through all co-belligerents to a: country<br>random_scope_cobelligerent = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country<br>Supported Targets: country",
			"random_scope_diplomatic_pact": "Any diplomatic pact of the country in a scope<br>random_scope_diplomatic_pact = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country<br>Supported Targets: diplomatic_pact",
			"random_scope_theater": "Iterate through all theaters in a: country<br>random_scope_theater = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country<br>Supported Targets: theater",
			"random_scope_violate_sovereignty_interested_parties": "Iterate through all countries that would be interested if country in scope has their sovereignty violated<br>random_scope_violate_sovereignty_interested_parties = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country<br>Supported Targets: country",
			"random_scope_violate_sovereignty_wars": "Iterate through all relevant wars if target country had their sovereignty violated by scoped country<br>random_scope_violate_sovereignty_wars = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country<br>Supported Targets: war",
			"random_scope_war": "Iterate through all wars related to the scope<br>random_scope_war = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country<br>Supported Targets: war",
			"random_strategic_objective": "Iterate through all Strategic Objective states from the scoped Country<br>random_strategic_objective = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country<br>Supported Targets: state",
			"random_subject_or_below": "Any country below current in hierarchy<br>random_subject_or_below = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country<br>Supported Targets: country",
			"recalculate_pop_ig_support": "Recalculates and updates a country's pop IG memberships = bool<br>Supported Scopes: country",
			"remove_active_objective_subgoal": "Removes an active objective subgoal<br>remove_active_objective_subgoal = <key><br>Supported Scopes: country",
			"remove_banned_goods": "Removes a total ban of a good from a country<br>remove_banned_goods = <goods key/scope><br>Supported Scopes: country<br>Supported Targets: goods",
			"remove_diplomatic_pact": "Removes a diplomatic pact between two countries, with scope country as initiator<br>remove_diplomatic_pact = {<br>	country = country scope/tag<br>	type = diplomatic action type<br>}<br>Supported Scopes: country",
			"remove_enactment_modifier": "Removes an enactment-related timed modifier effect to object in scope<br>Supported Scopes: country",
			"remove_primary_culture": "Removes a culture from the primary cultures of a country<br>remove_primary_culture = X<br>Where X is a culture scope<br>Supported Scopes: country<br>Supported Targets: culture",
			"remove_taxed_goods": "Removes consumption taxes on a good from a country<br>remove_taxed_goods = <goods key/scope><br>Supported Scopes: country<br>Supported Targets: goods",
			"seize_investment_pool": "Seize investment pool for the treasury and transfer all private construction queue elements to the government queue = bool<br>Supported Scopes: country",
			"set_capital": "Set capital state in a country scope<br>set_capital = X<br>Where X is a state region<br>Supported Scopes: country",
			"set_country_type": "Sets the type of country for a country, for history<br>Supported Scopes: country",
			"set_diplomats_expelled": "Set diplomats expelled = bool<br>Supported Scopes: country<br>Supported Targets: country",
			"set_government_wage_level": "Sets the government wage level of scoped country<br>set_government_wage_level = very_low/low/medium/high/very_high<br>Supported Scopes: country",
			"set_institution_investment_level": "Sets the investment level for an institution<br>set_institution_investment_level = { institution = <key> level = x }<br>Supported Scopes: country",
			"set_market_capital": "Set market capital in a country scope<br>set_market_capital = X<br>Where X is a state region<br>Supported Scopes: country",
			"set_military_wage_level": "Sets the military wage level of scoped country<br>set_military_wage_level = very_low/low/medium/high/very_high<br>Supported Scopes: country",
			"set_mutual_secret_goal": "Set mutual secret AI goal for scope country and target country<br>set_mutual_secret_goal = {<br>	tcountry = country scope/tag<br>	secret_goal = secret goal type<br>}<br>Supported Scopes: country",
			"set_next_election_date": "Set next election date for country<br>set_next_election_date = year.month.day<br>Supported Scopes: country",
			"set_owes_obligation_to": "Set whether a country owes another a obligation<br>set_owes_obligation = {<br>	country = country scope/tag<br>	setting = yes/no<br>}<br>Supported Scopes: country",
			"set_relations": "Set relations between two countries<br>set_relations = {<br>	tcountry = country scope/tag<br>	value = amount<br>}<br>Supported Scopes: country",
			"set_ruling_interest_groups": "Creates a government for the country in scope from a set of interest groups<br>set_ruling_interest_groups = { ig_tag1 ig_tag2 }<br>Supported Scopes: country",
			"set_secret_goal": "Set a secret AI goal for scope country towards another country<br>set_secret_goal = {<br>	tcountry = country scope/tag<br>	secret_goal = secret goal type<br>}<br>Supported Scopes: country",
			"set_state_religion": "Changes the state religion of the country to the specified religion<br>set_state_religion = X<br>Where X is a religion scope<br>Supported Scopes: country<br>Supported Targets: religion",
			"set_strategy": "Set AI strategy for scope country<br>set_strategy = <key><br>Supported Scopes: country",
			"set_tariffs_export_priority": "Sets Export Prioritized tariffs for a good in scoped country<br>set_tariffs_export_priority = <scope/key><br>Supported Scopes: country<br>Supported Targets: goods",
			"set_tariffs_import_priority": "Sets Import Prioritized tariffs for a good in scoped country<br>set_tariffs_import_priority = <scope/key><br>Supported Scopes: country<br>Supported Targets: goods",
			"set_tariffs_no_priority": "Sets tariffs to have no import/export priority for a good in scoped country<br>set_tariffs_no_priority = <scope/key><br>Supported Scopes: country<br>Supported Targets: goods",
			"set_tax_level": "Sets the overall tax level of scoped country<br>set_tax_level = very_low/low/medium/high/very_high<br>Supported Scopes: country",
			"set_tension": "Set tension between two countries<br>set_tension = {<br>	tcountry = country scope/tag<br>	value = amount<br>}<br>Supported Scopes: country",
			"start_research_random_technology": "Scoped country starts research of any random technology they can<br>start_research_random_technology = yes<br>Supported Scopes: country",
			"take_on_scaled_debt": "Transfers an amount of debt equal to the defined multiplier on target's max credit<br>take_on_scaled_debt = {<br>	who = <country><br>	value = decimal value<br>}<br>Supported Scopes: country",
			"update_party_support": "Updates party support in scoped country.<br>update_party_support = yes<br>Supported Scopes: country",
			"validate_subsidies": "Validates subsidies across a country's buildings.<br>validate_subsidies = bool<br>Supported Scopes: country",
			"violate_sovereignty_join": "Target joins scoped war<br>violate_sovereignty_accept = <country><br>Supported Scopes: country",
			"activate_production_method": "Activates the named production method for buildings of a certain type in country/state<br>Supported Scopes: country, state",
			"every_scope_building": "Iterate through all buildings in a: state, country<br>every_scope_building = { limit = { triggers } effects }<br>Supported Scopes: country, state<br>Supported Targets: building",
			"every_scope_culture": "Iterate through all cultures in the scope<br>every_scope_culture = { limit = { triggers } effects }<br>Supported Scopes: country, state<br>Supported Targets: culture",
			"ordered_scope_building": "Iterate through all buildings in a: state, country<br>ordered_scope_building = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country, state<br>Supported Targets: building",
			"ordered_scope_culture": "Iterate through all cultures in the scope<br>ordered_scope_culture = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country, state<br>Supported Targets: culture",
			"random_scope_building": "Iterate through all buildings in a: state, country<br>random_scope_building = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country, state<br>Supported Targets: building",
			"random_scope_culture": "Iterate through all cultures in the scope<br>random_scope_culture = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country, state<br>Supported Targets: culture",
			"add_character_role": "Adds a new role to a character<br>add_character_role = general<br>Supported Scopes: character",
			"add_commander_rank": "Promotes/demotes a character a given amount of military ranks<br>Supported Scopes: character",
			"add_experience": "Adds an amount of experience to a commander<br>add_experience = 0.2<br>Supported Scopes: character",
			"add_random_trait": "Adds a random qualifying Trait of the specified category<br>add_random_trait = personality / skill / condition<br>Supported Scopes: character",
			"add_trait": "Add a trait to a Character<br>add_trait = trait<br>Supported Scopes: character",
			"change_character_religion": "Changes the religion of the scoped character<br>change_character_religion = rel:protestant<br>Supported Scopes: character<br>Supported Targets: religion",
			"disinherit_character": "Strips the scoped character of their heir status in whichever countries apply.<br>scope:larry = { disinherit_character = yes }<br>Supported Scopes: character",
			"exile_character": "Exile a character to the exile pool<br>exile_character = yes<br>Supported Scopes: character",
			"free_character_from_void": "Frees a character from the void, if set to no character is deleted instead<br>free_character_from_void = yes<br>Supported Scopes: character",
			"kill_character": "Kill a character<br>kill_character = bool (yes - kill [by default], no - don't do anything)<br>kill_character = {<br>	hidden = bool (yes - without notification; no - show notification [by default])<br>	value = bool (yes - kill [by default], no - don't do anything)<br>}<br>Supported Scopes: character",
			"place_character_in_void": "Banishes a character to the void, duration is how long character is kept before being deleted<br>place_character_in_void = months<br>Supported Scopes: character",
			"remove_as_interest_group_leader": "Removes a character from position as interest group leader<br>remove_as_interest_group_leader = yes<br>Supported Scopes: character",
			"remove_character_role": "Removes an existing role from a character<br>remove_character_role = general<br>Supported Scopes: character",
			"remove_trait": "Remove a trait from a Character<br>remove_trait = trait<br>Supported Scopes: character",
			"set_as_interest_group_leader": "Sets a character as interest group leader<br>set_as_interest_group_leader = yes<br>Supported Scopes: character",
			"set_character_as_ruler": "Set scoped character as ruler in their country.<br>scope:larry = { set_character_as_ruler = yes }<br>Supported Scopes: character",
			"set_character_busy": "Mark a character as busy or clear said mark<br>set_character_busy = bool<br>Supported Scopes: character",
			"set_commander_rank": "Promotes/demotes a character to a given military rank value<br>set_commander_rank = 3<br>Supported Scopes: character",
			"set_home_country": "Set a character's home country. This makes them start considering themselves as having been exiled, i.e. was_exiled starts evaluating to yes for them.<br>set_home_country = c:FRA<br>Supported Scopes: character<br>Supported Targets: country",
			"set_home_country_definition": "Set a character's home country directly to a tag, you can use this to avoid making sure that the tag exists, this makes them an exile<br>set_home_country_definition = cd:FRA<br>Supported Scopes: character<br>Supported Targets: country_definition",
			"set_ideology": "Changes scoped character's ideology<br>set_ideology = x<br>Supported Scopes: character<br>Supported Targets: ideology",
			"transfer_character": "Transfers current scope character to target country<br>transfer_character = country<br>Supported Scopes: character<br>Supported Targets: country",
			"every_combat_units": "Iterate through all combat units of input scope<br>every_combat_units = { limit = { triggers } effects }<br>Supported Scopes: building, character<br>Supported Targets: combat_unit",
			"ordered_combat_units": "Iterate through all combat units of input scope<br>ordered_combat_units = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: building, character<br>Supported Targets: combat_unit",
			"random_combat_units": "Iterate through all combat units of input scope<br>random_combat_units = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: building, character<br>Supported Targets: combat_unit",
			"add_arable_land": "Add/remove arable land from a state region<br>Supported Scopes: state_region",
			"add_claim": "Adds scoped state region as a claim for target country<br>add_claim = scope/country<br>Supported Scopes: state_region<br>Supported Targets: country",
			"add_devastation": "Add/remove devastation from a state region<br>Supported Scopes: state_region",
			"add_homeland": "Adds scoped state region as Homeland for target culture<br>add_homeland = scope/culture<br>Supported Scopes: state_region",
			"add_pollution": "Increase/decrease pollution level in a scoped state region<br>add_pollution = 10<br>Supported Scopes: state_region",
			"create_state": "creates a state in a state region<br>Supported Scopes: state_region",
			"remove_claim": "Removes scoped state region as a claim for target country<br>add_claim = scope/country<br>Supported Scopes: state_region<br>Supported Targets: country",
			"remove_homeland": "Removes scoped state region as Homeland for target culture<br>add_homeland = scope/culture<br>Supported Scopes: state_region",
			"set_devastation": "Set devastation to a state region<br>Supported Scopes: state_region",
			"set_owner_of_provinces": "Gives a set of provinces in a state region to a specific country<br>set_owner_of_provinces = { country = <scope> provinces = {} }<br>Supported Scopes: state_region",
			"every_primary_culture": "Primary cultures of the scoped country or country definition<br>every_primary_culture = { limit = { triggers } effects }<br>Supported Scopes: country, country_definition, state<br>Supported Targets: culture",
			"ordered_primary_culture": "Primary cultures of the scoped country or country definition<br>ordered_primary_culture = {<br>limit = { triggers }<br>order_by = script_value<br>position = int<br>min = int<br>max = script_value<br>check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max<br>effects }<br>Supported Scopes: country, country_definition, state<br>Supported Targets: culture",
			"random_primary_culture": "Primary cultures of the scoped country or country definition<br>random_primary_culture = { limit = { triggers } (optional) weight = { mtth } effects }<br>Supported Scopes: country, country_definition, state<br>Supported Targets: culture",
		}
		self.TriggersList = {
			"has_active_building": "True if a state has an active building type<br>has_active_building = building<br>Supported Scopes: market, state",
			"has_label": "Check if the scope object has the specified label<br>has_label = label_key<br>Supported Scopes: province",
			"has_terrain": "Check if the province has the specified terrain type<br>has_terrain = terrain_key<br>Supported Scopes: province",
			"is_province_land": "Check if the province is on land<br>Traits: yes/no <br>Supported Scopes: province",
			"check_area": "Compares areas of object to another object<br>Supported Scopes: country, province, state, state_region, strategic_region, theater",
			"any_member": "Iterate through all interest group members of a party<br>any_member = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: party<br>Supported Targets: interest_group",
			"election_momentum": "Compare election momentum of the scoped party against a value<br>election_momentum = 0.75<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: party",
			"has_party_member": "Checks if the target interest group is a member of scope party<br>has_party_member = <ig><br>Traits: interest_group scope<br>Supported Scopes: party<br>Supported Targets: interest_group",
			"is_party": "Checks if the target party is same as scoped party. Will only work on exact same party object, meaning you can't compare across countries.<br>is_party = <party><br>Traits: party scope<br>Supported Scopes: party<br>Supported Targets: party",
			"is_party_type": "Checks if the scoped party's type is the specified one<br>is_party_type = party_type_database_key<br>Supported Scopes: party",
			"is_same_party_type": "Checks if Party is of the same party type as target<br>is_same_party_type_as = scope:neighboring_party<br>Traits: party scope<br>Supported Scopes: party<br>Supported Targets: party",
			"is_goal_complete": "Check if the journal entry's goal has been met<br>is_goal_complete = yes/no<br>Traits: yes/no <br>Supported Scopes: journalentry",
			"is_progressing": "Check if the journal entry is progressing<br>is_progressing = yes/no<br>Traits: yes/no <br>Supported Scopes: journalentry",
			"has_discrimination_trait": "Checks if scoped culture or religion has the given discrimination trait<br>has_trait = trait<br>Supported Scopes: culture, religion",
			"has_battle_condition": "True if the battle side currently has a condition with the given key<br>has_battle_condition = battle_condition_key<br>Supported Scopes: battle_side",
			"any_scope_initiator_ally": "Iterate through all allies to an initiator in a: diplomatic play<br>any_scope_initiator_ally = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: diplomatic_play<br>Supported Targets: country",
			"any_scope_play_involved": "Iterate through all involved in a: diplomatic play<br>any_scope_play_involved = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: diplomatic_play<br>Supported Targets: country",
			"any_scope_target_ally": "Iterate through all allies to a target in a: diplomatic play<br>any_scope_target_ally = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: diplomatic_play<br>Supported Targets: country",
			"diplomatic_play_pm_usage": "Checks how the ratio of Combat Units (of the same type) on the scoped Diplomatic Play, on the target country's side, with the specified Production Method compares to the value<br>diplomatic_play_pm_usage = { target = X production_method = Y value <comparator> Z}<br>where X = country scope and Y = production method key and Z = value to compare to<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: diplomatic_play",
			"escalation": "Checks whether escalation has passed a certain threshold<br>escalation > -58<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: diplomatic_play",
			"has_play_goal": "Checks if diplomatic play has a certain war goal type<br>has_play_goal = return_state<br>Supported Scopes: diplomatic_play",
			"initiator_is": "Checks who the initiator of a diplomatic play is<br>initiator_is = country<br>Traits: country scope<br>Supported Scopes: diplomatic_play<br>Supported Targets: country",
			"is_diplomatic_play_type": "Checks diplomatic play is of a certain type<br>is_diplomatic_play_type = play type<br>Supported Scopes: diplomatic_play",
			"is_war": "True if the diplomatic play has escalated into war<br>is_war = bool<br>Traits: yes/no <br>Supported Scopes: diplomatic_play",
			"target_is": "Checks who the target of a diplomatic play is<br>target_is = country<br>Traits: country scope<br>Supported Scopes: diplomatic_play<br>Supported Targets: country",
			"is_interest_active": "Is the interest marker active<br>is_interest_active = yes/no<br>Traits: yes/no <br>Supported Scopes: interest_marker",
			"any_scope_admiral": "Iterate through all admirals in a: country or interestgroup<br>any_scope_admiral = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country, front, interest_group<br>Supported Targets: character",
			"any_scope_character": "Iterate through all characters in a: country, interestgroup, or front<br>any_scope_character = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country, front, interest_group<br>Supported Targets: character",
			"any_scope_general": "Iterate through all generals in a: country, interestgroup, or front<br>any_scope_general = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country, front, interest_group<br>Supported Targets: character",
			"any_scope_politician": "Iterate through all politicians in a: country or interestgroup<br>any_scope_politician = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country, front, interest_group<br>Supported Targets: character",
			"culture_accepted": "Checks if pop's culture is accepted<br>culture_accepted = bool<br>Traits: yes/no <br>Supported Scopes: pop",
			"has_ongoing_assimilation": "Checks if the scoped pop has ongoing cultural assimilation<br>has_ongoing_assimilation = yes<br>Traits: yes/no <br>Supported Scopes: pop",
			"has_ongoing_conversion": "Checks if the scoped pop has ongoing religious conversion<br>has_ongoing_conversion = yes<br>Traits: yes/no <br>Supported Scopes: pop",
			"has_pop_culture": "Checks if pop has specific culture<br>has_pop_culture = culture<br>Supported Scopes: pop",
			"has_pop_religion": "Checks if pop has specific religion<br>has_religion = religion<br>Supported Scopes: pop",
			"has_state_religion": "Check if the Pop has the state religion<br>Traits: yes/no <br>Supported Scopes: pop",
			"is_employed": "Check if the pop is employed<br>Traits: yes/no <br>Supported Scopes: pop",
			"is_pop_type": "Checks if pop is of specified type<br>is_pop_type = poptype<br>Supported Scopes: pop",
			"pop_employment_building": "Checks if pop is working in a specific building type<br>pop_employment_building = building<br>Supported Scopes: pop",
			"pop_employment_building_group": "Checks if pop is working in a specific building type<br>pop_employment_building = building<br>Supported Scopes: pop",
			"pop_has_primary_culture": "Checks if pop's culture is primary<br>pop_has_primary_culture = bool<br>Traits: yes/no <br>Supported Scopes: pop",
			"pop_is_discriminated": "Checks if pop is discriminated against<br>pop_is_discriminated = bool<br>Traits: yes/no <br>Supported Scopes: pop",
			"quality_of_life": "Compares the quality of life of the given pop<br>quality_of_life > 10<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: pop",
			"religion_accepted": "Checks if pop's religion is accepted<br>religion_accepted = bool<br>Traits: yes/no <br>Supported Scopes: pop",
			"standard_of_living": "Compares the standard of living of a given pop<br>standard_of_living > 10<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: pop",
			"strata": "Checks the strata of the scoped pop<br>strata >= rich/middle/poor<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: pop",
			"wealth": "Checks if a pop has a certain amount of wealth<br>wealth = value<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: pop",
			"is_same_law_group_as": "Checks if scope law type is in the same group as the target law type scope<br>is_same_law_group_as = <law type scope><br>Traits: law_type scope<br>Supported Scopes: law_type<br>Supported Targets: law_type",
			"active_lens": "Checks if the specified lens is open<br>active_lens = lens<br>An interface trigger, can only be used in specific places<br>Supported Scopes: none",
			"active_lens_option": "Checks if the specified lens option is activated<br>active_lens_option = lens_option_key<br>An interface trigger, can only be used in specific places<br>Supported Scopes: none",
			"add_to_temporary_list": "Saves a temporary target for use during the trigger execution<br>This is used to build lists in triggers.<br>If used within an any-trigger, placement within the trigger is quite important. The game will iterate through every instance of the any-trigger until it finds a single instance that fulfills the requirements, and then it will stop.<br>In order to add every instance of a scope that fulfills certain conditions, use \"count = all\" while also placing this \"effect\" at the very end of the any-trigger (so that every condition is evaluated for every iteration).<br>Supported Scopes: none",
			"all_false": "true if all children are false (equivalent to NOR)<br>Supported Scopes: none",
			"always": "checks if the assigned yes/no value is true<br>always = yes # always succeeds<br>always = no  # always fails<br>always = scope:a_boolean_value # evaluated at runtime<br>Traits: yes/no <br>Supported Scopes: none",
			"and": "all inside trigger must be true<br>Supported Scopes: none",
			"any_character": "Iterate through all characters globally<br>any_character = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: none<br>Supported Targets: character",
			"any_character_in_exile_pool": "Iterate through characters in the exile pool<br>any_character_in_exile_pool = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: none<br>Supported Targets: character",
			"any_character_in_void": "Iterate through characters in the void<br>any_character_in_void = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: none<br>Supported Targets: character",
			"any_country": "Iterate through all countries globally<br>any_country = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: none<br>Supported Targets: country",
			"any_diplomatic_play": "Iterate through all diplomatic plays globally<br>any_diplomatic_play = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: none<br>Supported Targets: diplomatic_play",
			"any_false": "true if any child is false (equivalent to NAND)<br>Supported Scopes: none",
			"any_in_global_list": "Iterate through all items in global list. list = name or variable = name<br>any_in_global_list = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: none",
			"any_in_list": "Iterate through all items in list. list = name or variable = name<br>any_in_list = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: none",
			"any_in_local_list": "Iterate through all items in local list. list = name or variable = name<br>any_in_local_list = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: none",
			"any_market": "Iterate through all markets globally<br>any_market = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: none<br>Supported Targets: market",
			"any_state": "Iterate through all states globally<br>any_state = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: none<br>Supported Targets: state",
			"any_state_region": "Iterate through all state regions<br>any_state_region = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: none<br>Supported Targets: state_region",
			"assert_if": "Conditionally cause an assert during run time<br>assert_if = { limit = { X } text = Y }, where X is a trigger and Y is an optional string<br>Supported Scopes: none",
			"assert_read": "Conditionally cause an assert during read time<br>assert_read = X, where X is yes or the string to be printed in the assert<br>Supported Scopes: none",
			"calc_true_if": "Returns true if the specified number of sub-triggers return true<br>calc_true_if = { amount = 2 <trigger> <trigger> <trigger> }<br>Supported Scopes: none",
			"can_start_tutorial_lesson": "Can the specified tutorial lesson be started?<br>can_start_tutorial_lesson = reactive_advice_succession<br>An interface trigger, can only be used in specific places<br>Supported Scopes: none",
			"current_tooltip_depth": "Returns the number of tooltips currently open on screen<br>An interface trigger, can only be used in specific places<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: none",
			"custom_description": "Wraps triggers that get a custom description instead of the auto-generated one<br>custom_description = {<br>	text = <trigger_localization_key><br>	subject = <optional subject scope> #defaults to current scope<br>	object = <optional object scope><br>	value = <optional script value><br>	... triggers ...<br>}<br>Supported Scopes: none",
			"custom_tooltip": "Replaces the tooltips for the enclosed triggers with a custom text<br>custom_tooltip = {<br>	text = <text><br>	subject = <scope> (optional)<br>	<trigger><br>}<br>Supported Scopes: none",
			"debug_log": "Log whether the parent trigger succeeded or failed<br>Supported Scopes: none",
			"debug_log_details": "Log whether the parent trigger succeeded or failed. Log which children succeeded or failed<br>Supported Scopes: none",
			"error_check": "Checks an error in code that specifically uses the CErrorTable::CheckTrigger path, in general avoid this and just use normal script<br>Supported Scopes: none",
			"exists": "Checks whether the specified scope target exists (check for not being the null object)<br>exists = from.owner.var:cool_var.mother<br>Supported Scopes: none",
			"game_date": "Compare to current game date<br>current_game_date = 1837.1.1<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: none",
			"global_variable_list_size": "Checks the size of a variable list<br>variable_list_size = { name = X target >= Y }<br>Where X is the name of the variable<br>Where Y is a script value or number<br>Supported Scopes: none",
			"has_cosmetic_dlc": "Does the client have this cosmetic DLC<br>An interface trigger, can only be used in specific places<br>Supported Scopes: none",
			"has_dlc_feature": "Does the host have DLC that enables this particular feature<br>Supported Scopes: none",
			"has_game_rule": "Is the given game rule setting enabled?<br>has_game_rule = faster_conversion<br>Supported Scopes: none",
			"has_game_started": "True if game has started<br>has_game_started = bool<br>Traits: yes/no <br>Supported Scopes: none",
			"has_gameplay_dlc": "Does the host have this gameplay DLC<br>Supported Scopes: none",
			"has_global_variable": "Checks whether the current scope has the specified variable set<br>has_variable = name<br>Supported Scopes: none",
			"has_global_variable_list": "Checks whether the current scope has the specified variable list set<br>has_variable_list = name<br>Supported Scopes: none",
			"has_local_variable": "Checks whether the current scope has the specified variable set<br>has_variable = name<br>Supported Scopes: none",
			"has_local_variable_list": "Checks whether the current scope has the specified variable list set<br>has_variable_list = name<br>Supported Scopes: none",
			"has_map_interaction": "Checks if the map interaction type is active<br>has_map_interaction = key<br>An interface trigger, can only be used in specific places<br>Supported Scopes: none",
			"has_map_interaction_diplomatic_action": "Checks if our current map interaction is a specific diplomatic action<br>has_map_interaction_diplomatic_action = <key><br>An interface trigger, can only be used in specific places<br>Supported Scopes: none",
			"has_map_interaction_export_goods": "Checks if the specified lens option is to export the specified goods<br>has_selected_export_option_for_goods = <scope><br>An interface trigger, can only be used in specific places<br>Supported Scopes: none",
			"has_map_interaction_import_goods": "Checks if the specified lens option is to import the specified goods<br>has_selected_import_option_for_goods = <scope><br>An interface trigger, can only be used in specific places<br>Supported Scopes: none",
			"has_reached_end_date": "True if the end date (NDefines::NGame::END_DATE) has been reached<br>has_reached_end_date = yes<br>Traits: yes/no <br>Supported Scopes: none",
			"has_unification_candidate": "Check if there is at least one unification candidate for country tag<br>has_country_unification_candidate = GER<br>Supported Scopes: none",
			"has_variable": "Checks whether the current scope has the specified variable set<br>has_variable = name<br>Supported Scopes: none",
			"has_variable_list": "Checks whether the current scope has the specified variable list set<br>has_variable_list = name<br>Supported Scopes: none",
			"hidden_trigger": "AndTrigger that doesn't generate tooltips for contents within<br>hidden_trigger = {}<br>Supported Scopes: none",
			"is_building_type_expanded": "Checks if the CProductionMethodsPanelEntry for a particular CBuildingType is expanded<br>is_building_type_expanded = <scope/key><br>An interface trigger, can only be used in specific places<br>Supported Scopes: none",
			"is_game_paused": "Checks if the game is paused<br>is_game_paused = yes/no<br>An interface trigger, can only be used in specific places<br>Traits: yes/no <br>Supported Scopes: none",
			"is_gamestate_tutorial_active": "Is the gamestate tutorial active? See save_progress_in_gamestate in tutorial_lesson_chains documentation.<br>An interface trigger, can only be used in specific places<br>Traits: yes/no <br>Supported Scopes: none",
			"is_in_list": "Checks if a target in in a list<br>Supported Scopes: none",
			"is_lens_open": "Checks if a certain lens is open, specified as a lens key. Specify an optional named tab to check if this tab is open.<br>is_lens_open = { lens = lens_key tab_name = tab_key }<br>An interface trigger, can only be used in specific places<br>Supported Scopes: none",
			"is_objective_completed": "Is the objective completed for the country in scope?<br>is_objective_completed = yes<br>Traits: yes/no <br>Supported Scopes: none",
			"is_panel_open": "Checks if a certain infopanel is open, specified as an event target (target) or as a string (panel_name). Specify an optional named tab (tab_name) to check if this tab is open.<br>is_panel_open = { target = <scope> OR panel_name = panel_name tab_name = tab_name }<br>An interface trigger, can only be used in specific places<br>Supported Scopes: none",
			"is_popup_open": "Checks if the specified popup panel is open<br>is_popup_open = popup<br>An interface trigger, can only be used in specific places<br>Supported Scopes: none",
			"is_rightclick_menu_open": "Checks if the specified rightclick menu is open<br>is_rightclick_menu_open = <menu_key><br>An interface trigger, can only be used in specific places<br>Supported Scopes: none",
			"is_set": "Checks whether the specified scope target has been set (includes being the null object)<br>is_set = from.owner.var:cool_var.mother<br>Supported Scopes: none",
			"is_target_in_global_variable_list": "Checks if a target is in a variable list<br>is_target_in_variable_list = { name = X target = Y }<br>Where X is the name of the variable<br>Where Y is an event target<br>Supported Scopes: none",
			"is_target_in_local_variable_list": "Checks if a target is in a variable list<br>is_target_in_variable_list = { name = X target = Y }<br>Where X is the name of the variable<br>Where Y is an event target<br>Supported Scopes: none",
			"is_target_in_variable_list": "Checks if a target is in a variable list<br>is_target_in_variable_list = { name = X target = Y }<br>Where X is the name of the variable<br>Where Y is an event target<br>Supported Scopes: none",
			"is_tutorial_active": "Is the tutorial active?<br>An interface trigger, can only be used in specific places<br>Traits: yes/no <br>Supported Scopes: none",
			"is_tutorial_lesson_active": "Is this the current tutorial lesson?<br>is_tutorial_lesson_active = reactive_advice_succession<br>An interface trigger, can only be used in specific places<br>Supported Scopes: none",
			"is_tutorial_lesson_chain_completed": "Has the tutorial lesson chain with the specified key been finished?<br>An interface trigger, can only be used in specific places<br>Supported Scopes: none",
			"is_tutorial_lesson_completed": "has the tutorial lesson with the specified name been finished?<br>An interface trigger, can only be used in specific places<br>Supported Scopes: none",
			"is_tutorial_lesson_step_completed": "Has the tutorial lesson step been finished?<br>is_tutorial_lesson_step_completed = lesson_key:step_key<br>An interface trigger, can only be used in specific places<br>Supported Scopes: none",
			"list_size": "Checks the size of a list<br>list_size = { name = X value >= Y }<br>Where X is the name of the list<br>Where Y is a script value<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: none",
			"local_variable_list_size": "Checks the size of a variable list<br>variable_list_size = { name = X target >= Y }<br>Where X is the name of the variable<br>Where Y is a script value or number<br>Supported Scopes: none",
			"nand": "a negated AND trigger<br>Supported Scopes: none",
			"nor": "a negated OR trigger<br>Supported Scopes: none",
			"not": "negates content of trigger<br>Supported Scopes: none",
			"or": "at least one entry inside trigger must be true<br>Supported Scopes: none",
			"save_temporary_scope_as": "Saves a temporary target for use during the trigger execution<br>Supported Scopes: none",
			"save_temporary_scope_value_as": "Saves a numerical or bool value as an arbitrarily-named temporary target to be referenced later in the same effect<br>save_temporary_scope_value_as = { name = <string> value = x }<br>Supported Scopes: none",
			"should_show_nudity": "can nudity be shown?<br>should_show_nudity = yes/no<br>An interface trigger, can only be used in specific places<br>Traits: yes/no <br>Supported Scopes: none",
			"switch": "Switch on a trigger for the evaluation of another trigger with an optional fallback trigger.<br>switch = {<br>	trigger = simple_assign_trigger<br>	case_1 = { triggers }<br>	case_2 = { triggers }<br>	case_n = { triggers }<br>	fallback = { triggers }<br>Supported Scopes: none",
			"trigger_else": "Evaluates the triggers if the display_triggers of preceding 'trigger_if' or 'trigger_else_if' is not mettrigger_if = { limit = { <display_triggers> } triggers }<br> trigger_else = { triggers }<br>Supported Scopes: none",
			"trigger_else_if": "Evaluates the enclosed triggers if the display_triggers of the preceding `trigger_if` or `trigger_else_if` is not met and its own display_trigger of the limit is mettrigger_if = { limit = { <display_triggers> } triggers }<br>trigger_else_if = { limit = { <display_triggers> } triggers }<br>Supported Scopes: none",
			"trigger_if": "Evaluates the triggers if the display_triggers of the limit are met<br>trigger_if = { limit = { <display_triggers> } triggers }<br>Supported Scopes: none",
			"variable_list_size": "Checks the size of a variable list<br>variable_list_size = { name = X target >= Y }<br>Where X is the name of the variable<br>Where Y is a script value or number<br>Supported Scopes: none",
			"weighted_calc_true_if": "Returns true if the sum of weights of fulfilled sub-triggers amount to the specified sum<br>weighted_calc_true_if = { amount = 10 5 = { <trigger> } 15 = { <trigger> } 7 = { <trigger> } }<br>Supported Scopes: none",
			"year": "Compares the current year of the game<br>year > 1850<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: none",
			"has_building": "True if a state/market/state region/country has a building type<br>has_building = building<br>Supported Scopes: country, market, state, state_region",
			"country_definition_has_culture": "Checks if a culture is one of the cultures of the country definition<br>country_definition_has_culture = <culture><br>Traits: culture scope<br>Supported Scopes: country_definition<br>Supported Targets: culture",
			"aggressive_diplomatic_plays_permitted": "True if country is independent or permitted to start their own Diplomatic Plays<br>aggressive_diplomatic_plays_permitted = bool<br>Traits: yes/no <br>Supported Scopes: country",
			"any_active_party": "Iterate through all active political parties in a country<br>any_active_party = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country<br>Supported Targets: party",
			"any_civil_war": "Iterate through all civil wars related to the scoped country<br>any_civil_war = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country<br>Supported Targets: civil_war",
			"any_in_hierarchy": "Any country in current hierarchy, including current<br>any_in_hierarchy = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country<br>Supported Targets: country",
			"any_interest_group": "Iterate through all interest groups in a country<br>any_interest_group = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country<br>Supported Targets: interest_group",
			"any_law": "Iterate through all laws in a country<br>any_law = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country<br>Supported Targets: law",
			"any_overlord_or_above": "Any country above current in hierarchy<br>any_overlord_or_above = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country<br>Supported Targets: country",
			"any_political_movement": "Iterate through all political movements in a country<br>any_political_movement = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country<br>Supported Targets: political_movement",
			"any_potential_party": "Iterate through all potential political parties in a country<br>any_potential_party = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country<br>Supported Targets: party",
			"any_rival_country": "Any country that is rival to the country in a scope<br>any_rival_country = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country<br>Supported Targets: country",
			"any_scope_ally": "Iterate through all allies to a: country<br>any_scope_ally = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country<br>Supported Targets: country",
			"any_scope_cobelligerent": "Iterate through all co-belligerents to a: country<br>any_scope_cobelligerent = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country<br>Supported Targets: country",
			"any_scope_diplomatic_pact": "Any diplomatic pact of the country in a scope<br>any_scope_diplomatic_pact = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country<br>Supported Targets: diplomatic_pact",
			"any_scope_theater": "Iterate through all theaters in a: country<br>any_scope_theater = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country<br>Supported Targets: theater",
			"any_scope_violate_sovereignty_interested_parties": "Iterate through all countries that would be interested if country in scope has their sovereignty violated<br>any_scope_violate_sovereignty_interested_parties = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country<br>Supported Targets: country",
			"any_scope_violate_sovereignty_wars": "Iterate through all relevant wars if target country had their sovereignty violated by scoped country<br>any_scope_violate_sovereignty_wars = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country<br>Supported Targets: war",
			"any_scope_war": "Iterate through all wars related to the scope<br>any_scope_war = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country<br>Supported Targets: war",
			"any_strategic_objective": "Iterate through all Strategic Objective states from the scoped Country<br>any_strategic_objective = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country<br>Supported Targets: state",
			"any_subject_or_below": "Any country below current in hierarchy<br>any_subject_or_below = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country<br>Supported Targets: country",
			"approaching_bureaucracy_shortage": "Check if Institutions in the country will incur a Bureaucracy shortage eventually<br>Traits: yes/no <br>Supported Scopes: country",
			"arable_land_country": "Compare arable land in *all* states<br>arable_land_country > 10<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"army_reserves": "Compare the amount of Army Reserves<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"authority": "Compares the available authority of the scoped country<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"average_country_infrastructure": "Check average infrastructure in all states owned by scope country<br>average_country_infrastructure = 3<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"average_incorporated_country_infrastructure": "Check average infrastructure in incorporated states owned by the scope country<br>average_incorporated_country_infrastructure = 3<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"bureaucracy": "Compares the available bureaucracy of the scoped country<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"can_afford_diplomatic_action": "Checks if the country in scope can afford the Influence for the specified diplomatic action (pact or ongoing)<br>can_afford_diplomatic_action = { target = X type = Y }<br>Where X = country and Y = diplomatic action type<br>Supported Scopes: country",
			"can_establish_any_export_route": "Check if a country can establish any export routes<br>can_establish_any_export_route = <goods key/scope><br>Traits: goods scope<br>Supported Scopes: country<br>Supported Targets: goods",
			"can_establish_any_import_route": "Check if a country can establish any import routes<br>can_establish_any_import_route = <goods key/scope><br>Traits: goods scope<br>Supported Scopes: country<br>Supported Targets: goods",
			"can_form_nation": "Check if the target country is able to potentially form a nation<br>can_form_nation = <tag><br>Supported Scopes: country",
			"can_have_as_subject": "Checks if a country can have another country as a particular type of subject<br>can_have_as_subject = { who = X type = Y }<br>Where X = country and Y = subject type<br>Supported Scopes: country",
			"can_have_subjects": "Check if the country is able to have subjects of it sown<br>Traits: yes/no <br>Supported Scopes: country",
			"can_research": "True if a country can research an technology<br>can_research = technology<br>Supported Scopes: country",
			"can_take_on_scaled_debt": "Checks if scoped country can take on a certain amount of scaled debt from another country<br>can_take_on_scaled_debt = { who = X value = Y }<br>Where X = country and Y = decimal value<br>Supported Scopes: country",
			"construction_queue_duration": "Compares the maximum of all the very roughly approximated weeks remaining to finish the constructions in any queue: construction_queue_duration < 52<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"construction_queue_government_duration": "Compares the very roughly approximated weeks remaining to finish the constructions in the government queue: construction_queue_government_duration < 52<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"construction_queue_num_queued_government_levels": "Compares the number of government constructed building levels in the construction queue<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"construction_queue_num_queued_levels": "Compares the number of building levels in the construction queue<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"construction_queue_num_queued_private_levels": "Compares the number of privately constructed building levels in the construction queue<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"construction_queue_private_duration": "Compares the very roughly approximated weeks remaining to finish the constructions in the private queue: construction_queue_private_duration < 52<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"country_has_primary_culture": "Checks if a culture is one of the primary cultures in the country<br>country_has_primary_culture = <culture><br>Traits: culture scope<br>Supported Scopes: country<br>Supported Targets: culture",
			"country_has_state_religion": "Checks if a religion is the state religion in the country<br>country_has_accepted_religion = <religion><br>Traits: religion scope<br>Supported Scopes: country<br>Supported Targets: religion",
			"country_or_subject_owns_entire_state_region": "Checks whether the scoped country or any of its subjects owns the entire specified state region<br>country_or_subject_owns_entire_state_region = key<br>Supported Scopes: country",
			"country_pm_usage": "Checks how the ratio of Combat Units (of the same type) on the scoped Country with the specified Production Method compares to the value<br>country_pm_usage = { target = X production_method = Y value <comparator> Z}<br>where X = country scope and Y = production method key and Z = value to compare to<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"country_rank": "Compares a Country's Power Ranking<br>country_rank < rank_value:major_power<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"country_tier": "Compare tier of country tag<br>country_tier = x<br>Supported Scopes: country",
			"culture_percent_country": "Checks that a country's population has a certain percentage of a specific culture<br>scope:example_country = {<br>  culture_percent_country = {<br>    target = cu:dixie<br>    value >= 0.2<br>  }<br>}<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"empty_agitator_slots": "Checks number of empty agitator slots in a country<br>empty_agitator_slots >= 1<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"enacting_any_law": "Checks if you're enacting any law.<br>enacting_any_law = bool<br>Traits: yes/no <br>Supported Scopes: country",
			"enactment_chance": "Compares the current enactment chance in scope country (including values from enactment modifier)<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"enactment_chance_without_enactment_modifier": "Compares the current enactment chance in scope country but excludes values from enactment modifier<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"enactment_phase": "Compares the current law enactment phase in scope country.<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"enactment_setback_count": "Compares the current enactment setback count in scope country.<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"expanding_institution": "Checks if the institution is expanding<br>expanding_institution = <scope/key><br>Supported Scopes: country",
			"global_country_ranking": "Compares a Country's Power Ranking (position)<br>global_country_ranking > 42<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"gold_reserves": "Does the country have the required gold reserves<br>gold_reserves > 500<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"gold_reserves_limit": "Compares the country's gold reserves limit<br>gold_reserves > gold_reserves_limit<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"government_legitimacy": "Compare Legitimacy<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"government_transfer_of_power": "Checks country's government's transfer of power<br>government_transfer_of_power = key<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"government_wage_level": "Compares the government wage level of scoped country<br>government_wage_level = <level><br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"government_wage_level_value": "Compares the government wage level value of scoped country<br>government_wage_level_value = <level><br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"has_active_peace_deal": "True if the country is in a war where there is a proposed peace deal<br>has_active_peace_deal = bool<br>Traits: yes/no <br>Supported Scopes: country",
			"has_any_secessionists_broken_out": "Check if the country has secessionists broken out<br>Traits: yes/no <br>Supported Scopes: country",
			"has_any_secessionists_growing": "Check if the country has any secessionists growing<br>Traits: yes/no <br>Supported Scopes: country",
			"has_any_secessionists_possible": "Check if the country has any new secessionists possible<br>Traits: yes/no <br>Supported Scopes: country",
			"has_attitude": "Checks if scoped country has a particular attitude towards another country<br>has_attitude = { who = X attitude = Y }<br>Where X = country and Y = attitude type<br>Supported Scopes: country",
			"has_claim": "Checks if country in scope has a claim on state/state region<br>has_claim = <scope><br>Supported Scopes: country",
			"has_completed_subgoal": "Checks if the scoped country has completed a certain subgoal<br>has_completed_subgoal = subgoal_key<br>Supported Scopes: country",
			"has_consumption_tax": "Checks if the country is taxing the target good.<br>c:FRA = { has_consumption_tax = g:grain }<br>Traits: goods scope<br>Supported Scopes: country<br>Supported Targets: goods",
			"has_convoys_being_sunk": "Check if the country has convoys being sunk through convoy raiding<br>Traits: yes/no <br>Supported Scopes: country",
			"has_decreasing_interests": "Checks if the country has decreasing interest levels<br>Traits: yes/no <br>Supported Scopes: country",
			"has_diplomatic_pact": "Checks if two countries have an active diplomatic pact of type<br>has_diplomatic_pact = { who = X type = Y is_initiator = yes/no }<br>Where X = country and Y = diplomatic action type, is_initiator is optional parameter that checks to see if scope country is the original initiator/target of the pact<br>Supported Scopes: country",
			"has_diplomatic_relevance": "Checks if target country is diplomatically relevant for scope country<br>has_diplomatic_relevance = <scope><br>Traits: country scope<br>Supported Scopes: country<br>Supported Targets: country",
			"has_diplomats_expelled": "Checks if country in scope has recently expelled diplomats of event target<br>has_diplomats_expelled = country<br>Traits: country scope<br>Supported Scopes: country<br>Supported Targets: country",
			"has_export_priority_tariffs": "Checks if scoped country has Import Prioritized tariffs for a good<br>has_export_priority_tariffs = <key/scope><br>Traits: goods scope<br>Supported Scopes: country<br>Supported Targets: goods",
			"has_free_government_reform": "Check if the country has a free (of radicals) government reform <br>has_free_government_reform = <yes/no><br>Traits: yes/no <br>Supported Scopes: country",
			"has_global_highest_gdp": "Checks if the scoped country has the highest GDP<br>has_global_highest_gdp = yes/no<br>Traits: yes/no <br>Supported Scopes: country",
			"has_global_highest_innovation": "Checks if the scoped country has the highest weekly innovation<br>has_global_highest_innovation = yes/no<br>Traits: yes/no <br>Supported Scopes: country",
			"has_government_clout": "Does the country's government have the necessary total Clout<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"has_government_type": "Is the country's government type as specified<br>has_government_type = key<br>Supported Scopes: country",
			"has_healthy_economy": "Check if the country has a healthy economy<br>Traits: yes/no <br>Supported Scopes: country",
			"has_import_priority_tariffs": "Checks if scoped country has Import Prioritized tariffs for a good<br>has_import_priority_tariffs = <key/scope><br>Traits: goods scope<br>Supported Scopes: country<br>Supported Targets: goods",
			"has_institution": "Checks if scope country has a particular type of institution<br>has_institution = <scope/key><br>Supported Scopes: country",
			"has_insurrectionary_interest_groups": "Check if the country has Interest Groups that are insurrectionary<br>Traits: yes/no <br>Supported Scopes: country",
			"has_interest_marker_in_region": "True if scope country has an interest marker in target region<br>has_interest_marker_in_region = region scope/tag<br>Supported Scopes: country",
			"has_journal_entry": "Check if the country has at least one active journal entry of the specified type<br>has_journal_entry = key<br>Supported Scopes: country",
			"has_law": "Checks if a country has a certain Law active<br>Traits: law_type scope<br>Supported Scopes: country<br>Supported Targets: law_type",
			"has_no_priority_tariffs": "Checks if scoped country has Unprioritized tariffs for a good<br>has_no_priority_tariffs = <key/scope><br>Traits: goods scope<br>Supported Scopes: country<br>Supported Targets: goods",
			"has_objective": "Checks if the scoped country has a certain objective type<br>has_objective = objective_type_key<br>Supported Scopes: country",
			"has_overlapping_interests": "Checks if country in scope has an overlapping interest marker with any of target country's interests<br>has_overlapping_interests = <scope><br>Traits: country scope<br>Supported Scopes: country<br>Supported Targets: country",
			"has_possible_decisions": "Check if a country has any possible Decisions<br>has_possible_decisions = yes<br>Traits: yes/no <br>Supported Scopes: country",
			"has_potential_to_form_country": "Check if the target country could ever be able to form a nation<br>has_potential_to_form_country = <tag><br>Supported Scopes: country",
			"has_researchable_technology": "Check if the country has any researchable technology left.<br>Traits: yes/no <br>Supported Scopes: country",
			"has_revolution": "Check if the country has revolutionary uprising<br>Traits: yes/no <br>Supported Scopes: country",
			"has_ruling_interest_group": "Does the country's government include the named IG<br>Supported Scopes: country",
			"has_ruling_interest_group_count": "Does the country's government consist of the specified number of IGs<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"has_secret_goal": "Checks if scoped country has a particular secret goal towards another country<br>has_secret_goal = { who = X secret_goal = Y }<br>Where X = country and Y = secret_goal type<br>Supported Scopes: country",
			"has_state_in_state_region": "Check if country has a state in the state region<br>has_state_in_state_region = key<br>Supported Scopes: country",
			"has_strategic_adjacency": "Checks if country in scope has a strategic adjacency (direct/coastal/wargoal adjacency) to target state/country<br>has_strategic_adjacency = <scope><br>Supported Scopes: country",
			"has_strategic_land_adjacency": "Checks if country in scope has a strategic adjacency (direct land border or wargoal adjacency only) to target state/country<br>has_strategic_adjacency = <scope><br>Supported Scopes: country",
			"has_strategy": "Checks if country in scope has a particular AI strategy<br>has_strategy = <key><br>Supported Scopes: country",
			"has_subject_relation_with": "Checks if country in scope is subject or overlord of event target<br>has_subject_relation_with = country<br>Traits: country scope<br>Supported Scopes: country<br>Supported Targets: country",
			"has_sufficient_construction_capacity_for_investment": "Check if country has enough construction capacity to be spending all of its incoming investment pool funds.<br>Traits: yes/no <br>Supported Scopes: country",
			"has_technology_progress": "Does the country have the required progress for an technology<br>has_technology_progress = { technology = X progress = Y }<br>Where X is an technology and Y is a fixed point<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"has_technology_researched": "True if a country has researched an technology<br>has_technology_researched = <scope/key><br>Supported Scopes: country",
			"has_treaty_port_in_country": "Checks if the scoped country has a treaty port in target country<br>c:POR = { has_treaty_port_in_country = c:CHI }<br>Traits: country scope<br>Supported Scopes: country<br>Supported Targets: country",
			"has_truce_with": "Check if a country has a truce with a different target country<br>has_truce_with = c:GBR<br>Traits: country scope<br>Supported Scopes: country<br>Supported Targets: country",
			"has_war_with": "Checks if country in scope is at war with event target<br>has_war_with = country<br>Traits: country scope<br>Supported Scopes: country<br>Supported Targets: country",
			"has_wasted_construction": "Check if country is wasting any of its produced construction.<br>Traits: yes/no <br>Supported Scopes: country",
			"highest_secession_progress": "Compares the highest secession progress of any secession movement in a given country<br>highest_secession_progress > 0.7<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"in_default": "Check if the country is currently in default<br>Traits: yes/no <br>Supported Scopes: country",
			"in_election_campaign": "Check if the country is in election campaign period<br>in_election_campaign = <yes/no><br>Traits: yes/no <br>Supported Scopes: country",
			"influence": "Compares the available influence of the scoped country<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"institution_investment_level": "Compares the level of investment in an institution<br>institution_investment_level = { institution = <key> value = <comparator value> }<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"investment_pool": "Does the country have this amount of money saved in its investment pool<br>investment_pool > 1000<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"investment_pool_gross_income": "Does the country have this amount of gross income (income before expenses) for its investment pool<br>investment_pool_gross_income > 1000<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"investment_pool_net_income": "Does the country have this amount of net income (income after expenses) for its investment pool<br>investment_pool_net_income > 1000<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"is_adjacent": "Checks if country in scope is adjacent to a target country<br>is_adjacent = <scope><br>Traits: country scope<br>Supported Scopes: country<br>Supported Targets: country",
			"is_ai": "True if country scope is controlled by an AI<br>is_ai = bool<br>Traits: yes/no <br>Supported Scopes: country",
			"is_at_war": "Check if the country is at war<br>Traits: yes/no <br>Supported Scopes: country",
			"is_banning_goods": "Check if a country is banning a good<br>is_banning_goods = <goods key/scope><br>Supported Scopes: country",
			"is_construction_paused": "Check if construction in a state is paused.<br>Traits: yes/no <br>Supported Scopes: country",
			"is_country_alive": "Checks if the scoped country is alive, i.e. if it has at least one state on the map and can be interacted with<br>is_country_alive = yes/no<br>Traits: yes/no <br>Supported Scopes: country",
			"is_country_type": "Checks the countrys type<br>is_country_type = country type<br>Supported Scopes: country",
			"is_diplomatic_play_committed_participant": "True if country is a committed participant of any diplomatic play<br>is_diplomatic_play_participant = bool<br>Traits: yes/no <br>Supported Scopes: country",
			"is_diplomatic_play_enemy_of": "Checks if country in scope is in a diplomatic play against event target<br>is_diplomatic_play_enemy_of = country<br>Traits: country scope<br>Supported Scopes: country<br>Supported Targets: country",
			"is_diplomatic_play_initiator": "True if country is the initiator of any diplomatic play<br>is_diplomatic_play_initiator = bool<br>Traits: yes/no <br>Supported Scopes: country",
			"is_diplomatic_play_target": "True if country is the target of any diplomatic play<br>is_diplomatic_play_target = bool<br>Traits: yes/no <br>Supported Scopes: country",
			"is_diplomatic_play_undecided_participant": "True if country is a undecided participant of any diplomatic play<br>is_diplomatic_play_participant = bool<br>Traits: yes/no <br>Supported Scopes: country",
			"is_direct_subject_of": "Checks if country in scope is a direct subject (not subject-of-subject) of event target<br>is_subject_of = country<br>Traits: country scope<br>Supported Scopes: country<br>Supported Targets: country",
			"is_enacting_law": "Checks if the scoped country is enacting a specific law type.<br>is_enacting_law = law_type:law_conscription<br>Traits: law_type scope<br>Supported Scopes: country<br>Supported Targets: law_type",
			"is_expanding_institution": "Are you expanding an institution<br>is_expanding_institution = <yes>/<no><br>Traits: yes/no <br>Supported Scopes: country",
			"is_home_country_for": "Checks if a country is the home country for target country<br>Traits: country scope<br>Supported Scopes: country<br>Supported Targets: country",
			"is_in_customs_union": "Check if the country is part of a customs union<br>Traits: yes/no <br>Supported Scopes: country",
			"is_in_war_together": "Checks if country in scope is in war on the same side as event target<br>is_in_war_together = country<br>Traits: country scope<br>Supported Scopes: country<br>Supported Targets: country",
			"is_junior_in_customs_union": "True if country is a junior country in a customs custom<br>is_junior_in_customs_union = bool<br>Traits: yes/no <br>Supported Scopes: country",
			"is_local_player": "True if country scope is a player<br>is_local_player = bool<br>Traits: yes/no <br>Supported Scopes: country",
			"is_losing_power_rank": "Check if the country is in the process of dropping in power ranking<br>Traits: yes/no <br>Supported Scopes: country",
			"is_owed_obligation_by": "Checks if the scoped country is owed a obligation by the target country<br>is_owed_obligation_by = c:FRA<br>Traits: country scope<br>Supported Scopes: country<br>Supported Targets: country",
			"is_player": "True if country scope is a player<br>is_player = bool<br>Traits: yes/no <br>Supported Scopes: country",
			"is_researching_technology": "Check if the country is actively researching a tech<br>is_researching_technology = <scope/key/any><br>Supported Scopes: country",
			"is_researching_technology_category": "Check if the country is actively researching a tech category<br>is_researching_technology_category = <key/any><br>Supported Scopes: country",
			"is_secessionist": "Check if the country is secessionist<br>Traits: yes/no <br>Supported Scopes: country",
			"is_subject": "True if country is a subject<br>is_subject = bool<br>Traits: yes/no <br>Supported Scopes: country",
			"is_subject_of": "Checks if country in scope is subject (or subject-of-subject) of event target<br>is_subject_of = country<br>Traits: country scope<br>Supported Scopes: country<br>Supported Targets: country",
			"is_subject_type": "Checks the country's subject type<br>is_subject_type = subject type<br>Supported Scopes: country",
			"is_supporting_unification_candidate": "Check if scope country is supporting a unification candidate for a specific country formation<br>is_supporting_unification_candidate = { who = c:PRU country_formation = GER }<br>Supported Scopes: country",
			"is_taxing_goods": "Check if a country is taxing a good<br>has_embargo = <goods key/scope><br>Supported Scopes: country",
			"is_unification_candidate": "Check if scope country is a unification candidate for country tag<br>has_country_unification_candidate = GER<br>Supported Scopes: country",
			"is_violating_sovereignty_of": "Check if the scoped country is violating the sovereignty of a target country<br>is_violating_sovereignty_of = c:GBR<br>Traits: country scope<br>Supported Scopes: country<br>Supported Targets: country",
			"isolated_states": "Compare number of Isolated States<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"leading_producer_of": "Checks if country is producing the most of a certain good<br>leading_producer_of = g:luxury_clothes<br>Traits: goods scope<br>Supported Scopes: country<br>Supported Targets: goods",
			"leads_customs_union": "Check if any other country is part of this country's customs union<br>leads_customs_union = bool<br>Traits: yes/no <br>Supported Scopes: country",
			"max_num_declared_interests": "Compares the maximum number of declared interests of scoped country<br>max_num_declared_interests = <value><br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"military_wage_level": "Compares the military wage level of scoped country<br>military_wage_level = <level><br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"military_wage_level_value": "Compares the military wage level value of scoped country<br>military_wage_level_value = <level><br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"navy_reserves": "Compare the amount of Navy Reserves<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"num_declared_interests": "Compares the number of declared interests of scoped country<br>num_declared_interests = <value><br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"num_taxed_goods": "Compares the number of consumption taxed goods of scoped country<br>num_taxed_goods = <value><br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"number_of_possible_decisions": "The number of possible Descision a Country can take<br>umber_of_possible_decisions > 0<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"owes_obligation_to": "Checks if country in scope owes a obligation to event target<br>owes_obligation_to = country<br>Traits: country scope<br>Supported Scopes: country<br>Supported Targets: country",
			"owns_entire_state_region": "Check if country owns entire region<br>owns_entire_state_region = key<br>Supported Scopes: country",
			"owns_treaty_port_in": "Does country own the treaty port in assigned state region<br>owns_treaty_port_in = key<br>Supported Scopes: country",
			"pop_type_percent_country": "Checks whether the scoped country has <percent> of its population belonging to the specified pop type<br>scope:example_country = {<br>	pop_type_percent_country = {<br>		pop_type = <pop_type><br>		percent <compare operator (<,>,= and so on)> <percent><br>	}<br>}<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"prestige": "Compare prestige<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"produced_authority": "Compares the produced authority of the scoped country<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"produced_bureaucracy": "Compares the produced bureaucracy of the scoped country<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"produced_influence": "Compares the produced influence of the scoped country<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"religion_percent_country": "Checks that a country's population has a certain percentage of a specific religion<br>scope:example_country = {<br>  religion_percent_country = {<br>    target = rel:catholic<br>    value <= 0.8<br>  }<br>}<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"ruler_can_have_command": "Checks if the country's government type allows its ruler to have command<br>ruler_can_have_command = yes/no<br>Traits: yes/no <br>Supported Scopes: country",
			"scaled_debt": "Compare value to a country's debt relative to debt ceiling<br>scaled_debt = value<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"should_set_wargoal": "Check if the country is lacking a primary wargoal in any diplomatic play it is part of<br>Traits: yes/no <br>Supported Scopes: country",
			"shrinking_institution": "Checks if the institution is shrinking<br>expanding_institution = <scope/key><br>Supported Scopes: country",
			"supply_network_strength": "Compares the country's supply network strength (can exceed 1)<br>supply_network_strength > 1.1<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"taking_loans": "Check if the country is currently running a weekly deficit and taking loans to compensate<br>Traits: yes/no <br>Supported Scopes: country",
			"tax_level": "Compares the overall tax level of scoped country<br>tax_level = <level><br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"tax_level_value": "Compares the overall tax level integer value of scoped country<br>income_tax_level_value = <level><br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"total_population": "Compares the total population of a given country<br>total_population > 100000<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"was_formed_from": "Check if a formed country previously had a specific definition<br>was_formed_from = <tag><br>Supported Scopes: country",
			"weekly_net_fixed_income": "Does the country have this amount of weekly income after fixed expenses<br>weekly_net_income > 1000<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country",
			"age": "Compares the character age<br>age > 20<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: character",
			"can_agitate": "Check if the scope character can agitate the target country<br>can_agitate = <scope/c:TAG><br>Traits: country scope<br>Supported Scopes: character<br>Supported Targets: country",
			"character_supports_political_movement": "Checks whether the scoped character supports a political movement<br>character_supports_political_movement = yes/no<br>Traits: yes/no <br>Supported Scopes: character",
			"commander_pm_usage": "Checks how the ratio of Combat Units on the scoped Commander, on the target country's side, with the specified Production Method compares to the value<br>commander_pm_usage = { target = X production_method = Y value <comparator> Z}<br>where X = country scope and Y = production method key and Z = value to compare to<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: character",
			"commander_rank": "Compares the commanders rank<br>commander_rank > 2<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: character",
			"experience_level": "Compares the character experience level<br>experience_level > 1<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: character",
			"has_commander_order": "Checks characters order<br>has_order = order key/order scope<br>Supported Scopes: character",
			"has_culture": "Checks characters culture<br>has_culture = culture scope or character scope<br>Supported Scopes: character",
			"has_high_attrition": "Checks if a Commander's attrition is higher than defined NORMAL_ATTRITION<br>has_high_attrition = bool<br>Traits: yes/no <br>Supported Scopes: character",
			"has_religion": "Checks characters religion<br>has_religion = religion/character scope<br>Supported Scopes: character",
			"has_role": "Checks if character has the specified role<br>has_role = role<br>Supported Scopes: character",
			"has_template": "Checks if character was made from the specified template<br>has_template = template_key<br>Supported Scopes: character",
			"has_trait": "Checks if character has specific trait<br>has_trait = trait<br>Supported Scopes: character",
			"is_advancing_on_front": "Checks if a commander is advancing on a front<br>is_advancing_on_front = front<br>Traits: front scope<br>Supported Scopes: character<br>Supported Targets: front",
			"is_attacker_in_battle": "Checks if a Commander is attacker in a battle<br>is_attacker_in_battle = bool<br>Traits: yes/no <br>Supported Scopes: character",
			"is_busy": "Check if character is busy<br>is_busy = bool<br>Traits: yes/no <br>Supported Scopes: character",
			"is_character_alive": "Checks if the scoped character is alive<br>is_character_alive = bool<br>Traits: yes/no <br>Supported Scopes: character",
			"is_defender_in_battle": "Checks if a Commander is defender in a battle<br>is_defender_in_battle = bool<br>Traits: yes/no <br>Supported Scopes: character",
			"is_female": "Check if character is female<br>is_female = bool<br>Traits: yes/no <br>Supported Scopes: character",
			"is_heir": "Checks whether the scoped character is an heir<br>is_heir = yes / no<br>Traits: yes/no <br>Supported Scopes: character",
			"is_historical": "Check if character is historical<br>is_historical = yes/no<br>Traits: yes/no <br>Supported Scopes: character",
			"is_in_battle": "Checks if a Commander is engaged in battle<br>is_in_battle = bool<br>Traits: yes/no <br>Supported Scopes: character",
			"is_in_exile_pool": "Checks whether the scoped character is in the exile pool<br>is_in_exile_pool = yes/no<br>Traits: yes/no <br>Supported Scopes: character",
			"is_in_void": "Check if character is in the void<br>is_in_void = bool<br>Traits: yes/no <br>Supported Scopes: character",
			"is_mobilized": "Checks if the commander is mobilized<br>is_mobilized = bool<br>Traits: yes/no <br>Supported Scopes: character",
			"is_monarch": "Checks if character is a monarch of a country with hereditary succession<br>is_monarch = bool<br>Traits: yes/no <br>Supported Scopes: character",
			"is_on_front": "Checks is a character has been assigned to a Front and has arrived there<br>is_on_front = yes/no<br>Traits: yes/no <br>Supported Scopes: character",
			"is_repairing": "Checks if an Admiral is unavailable and repairing after loosing a naval battle<br>is_repairing = bool<br>Traits: yes/no <br>Supported Scopes: character",
			"is_ruler": "Checks if character is a ruler/head of state of a country<br>is_ruler = bool<br>Traits: yes/no <br>Supported Scopes: character",
			"is_traveling": "Checks if the commander is traveling<br>is_traveling = bool<br>Traits: yes/no <br>Supported Scopes: character",
			"trait_value": "Compares the character's total trait value<br>trait_value < experience_level<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: character",
			"was_exiled": "Checks whether the scoped character was exiled<br>was_exiled = yes/no<br>Traits: yes/no <br>Supported Scopes: character",
			"infrastructure": "Compares the infrastructure value of a given state<br>infrastructure > 10<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: state, state_region",
			"infrastructure_usage": "Compares the infrastructure usage value of a given state<br>infrastructure_usage > 10<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: state, state_region",
			"culture_is_discriminated_in": "Checks if a culture is discriminated against within the scope country<br>culture_is_discriminated_in = c:USA<br>Traits: country scope<br>Supported Scopes: culture<br>Supported Targets: country",
			"culture_secession_progress": "Checks the culture's progress percentage towards secession in a country. 0 if no secession movement is active for the culture.<br>culture_secession_progress = { target = scope:example_country value > 0.5 }<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: culture",
			"has_cultural_obsession": "Checks if a culture has a certain goods as obsession<br>has_cultural_obsession = <goods key><br>Supported Scopes: culture",
			"has_culture_graphics": "Checks if a culture has a certain culture_graphics<br>has_culture_graphics = <culture graphics key><br>Supported Scopes: culture",
			"has_homeland": "Checks if scoped culture has a homeland in target state or state region<br>has_homeland = state/state region<br>Supported Scopes: culture",
			"is_primary_culture_of": "Checks if culture is any of a country's primary cultures<br>is_primary_culture_of = <country><br>Traits: country scope<br>Supported Scopes: culture<br>Supported Targets: country",
			"shares_heritage_and_other_trait_with_any_primary_culture": "Checks if culture shares any trait marked as 'heritage' and other 'non-heritage' trait with any of a country's primary cultures<br>shares_heritage_and_other_trait_with_any_primary_culture = <country><br>Traits: country scope<br>Supported Scopes: culture<br>Supported Targets: country",
			"shares_heritage_trait_with_any_primary_culture": "Checks if culture shares any trait marked as 'heritage' with any of a country's primary cultures<br>shares_heritage_trait_with_any_primary_culture = <country><br>Traits: country scope<br>Supported Scopes: culture<br>Supported Targets: country",
			"shares_non_heritage_trait_with_any_primary_culture": "Checks if culture shares any trait *other than* one marked as 'heritage' with any of a country's primary cultures<br>shares_non_heritage_trait_with_any_primary_culture = <country><br>Traits: country scope<br>Supported Scopes: culture<br>Supported Targets: country",
			"shares_trait_with_any_primary_culture": "Checks if the culture shares any trait with any of a country's primary cultures<br>shares_trait_with_any_primary_culture = <country><br>Traits: country scope<br>Supported Scopes: culture<br>Supported Targets: country",
			"battle_side_pm_usage": "Checks how the ratio of Combat Units on the scoped Battle, on the target country's side, with the specified Production Method compares to the value<br>battle_side_pm_usage = { target = X production_method = Y value <comparator> Z}<br>where X = country scope and Y = production method key and Z = value to compare to<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: battle",
			"any_participant": "Any of two participants of the diplomatic pact in a scope<br>any_participant = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: diplomatic_pact<br>Supported Targets: country",
			"is_diplomatic_action_type": "Checks diplomatic pact is of a certain action type<br>is_diplomatic_action_type = diplomatic action type<br>Supported Scopes: diplomatic_pact",
			"is_diplomatic_pact_in_danger": "Checks if diplomatic pact is in danger of breaking<br>is_diplomatic_pact_in_danger = yes<br>Traits: yes/no <br>Supported Scopes: diplomatic_pact",
			"any_market_goods": "Iterate through all active (market) goods in a market<br>any_market_goods = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: market<br>Supported Targets: market_goods",
			"any_scope_country": "Iterate through all countries with a presence in the supported scope (currently: only market scope)<br>any_scope_country = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: market<br>Supported Targets: country",
			"market_has_goods_shortage": "Check if market has a shortage on any of its building inputs<br>market_has_goods_shortage = yes/no<br>Traits: yes/no <br>Supported Scopes: market",
			"is_land_theater": "Checks if a theater is a land theater<br>is_land_theater = bool<br>Traits: yes/no <br>Supported Scopes: theater",
			"civil_war_progress": "Compare progress of civil war<br>civil_war_progress > 0.50<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: civil_war",
			"is_civil_war_type": "Check if the scoped civil war is of a specific type<br>is_civil_war_type = revolution / secession<br>Supported Scopes: civil_war",
			"any_scope_pop": "Iterate through all pops in a: country, state, interest group, culture<br>any_scope_pop = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country, culture, interest_group, state<br>Supported Targets: pop",
			"any_trade_route": "Iterate through all trade routes in a: market, country, marketgoods<br>any_trade_route = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country, market, market_goods<br>Supported Targets: trade_route",
			"is_tradeable": "Check if a goods or market goods is tradeable<br>is_tradeable = yes/no<br>Traits: yes/no <br>Supported Scopes: goods, market_goods",
			"any_scope_state": "Iterate through all states including provinces from a: country, state_region, theater, or front<br>any_scope_state = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country, front, state_region, strategic_region, theater<br>Supported Targets: state",
			"front_side_pm_usage": "Checks how the ratio of Combat Units on the scoped Front, on the target country's side, with the specified Production Method compares to the value<br>front_side_pm_usage = { target = X production_method = Y value <comparator> Z}<br>where X = country scope and Y = production method key and Z = value to compare to<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: front",
			"is_vulnerable_front": "Whether the scoped Front doesn't have any Battalions nor Generals on target side, and the enemy has at least one General.<br>is_vulnerable_front = scope:example_country<br>Traits: country scope<br>Supported Scopes: front<br>Supported Targets: country",
			"is_consumed_by_government_buildings": "Check if the market goods is instrumental in running the bureaucratic machine<br>Traits: yes/no <br>Supported Scopes: market_goods",
			"is_consumed_by_military_buildings": "Check if the goods is instrumental in running the war machine<br>Traits: yes/no <br>Supported Scopes: market_goods",
			"market_goods_buy_orders": "Checks if market goods has the specified number of buy orders<br>market_goods_buy_orders < X<br>Where X = fixed point<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: market_goods",
			"market_goods_cheaper": "Checks if market goods is at least the specified percentage cheaper than base price<br>market_goods_cheaper > X<br>Where X = fixed point<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: market_goods",
			"market_goods_consumption": "Checks if market goods has the specified number of total consumption<br>market_goods_consumption < X<br>Where X = fixed point<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: market_goods",
			"market_goods_delta": "Checks if market has the specified goods delta (production + imports) - (consumption + exports)<br>market_goods_delta < X<br>Where X = fixed point<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: market_goods",
			"market_goods_exports": "Checks if market goods has the specified number of exports<br>market_goods_exports < X<br>Where X = fixed point<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: market_goods",
			"market_goods_has_goods_shortage": "Check if market goods has a shortage in the market<br>market_goods_has_goods_shortage = yes/no<br>Traits: yes/no <br>Supported Scopes: market_goods",
			"market_goods_imports": "Checks if market goods has the specified number of imports<br>market_goods_imports < X<br>Where X = fixed point<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: market_goods",
			"market_goods_pricier": "Checks if market goods is at least the specified percentage more expensive than base price<br>market_goods_pricier > X<br>Where X = fixed point<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: market_goods",
			"market_goods_production": "Checks if market goods has the specified number of total production<br>market_goods_production < X<br>Where X = fixed point<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: market_goods",
			"market_goods_sell_orders": "Checks if market goods has the specified number of sell orders<br>market_goods_sell_orders < X<br>Where X = fixed point<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: market_goods",
			"market_goods_shortage_ratio": "Compares the shortage ratio of a market goods in its market<br>market_goods_shortage_ratio > 0.33<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: market_goods",
			"is_trade_route_active": "Checks if the scoped trade route is active<br>is_trade_route_active = yes/no<br>Traits: yes/no <br>Supported Scopes: trade_route",
			"is_trade_route_productive": "Checks if the scoped trade route is productive<br>is_trade_route_productive = yes/no<br>Traits: yes/no <br>Supported Scopes: trade_route",
			"trade_route_needs_convoys_to_grow": "Checks if the scoped trade route needs more convoys to be able to grow<br>trade_route_needs_convoys_to_grow = yes/no<br>Traits: yes/no <br>Supported Scopes: trade_route",
			"has_diplomatic_play": "Check if strategic region has a diplomatic play or not<br>Traits: yes/no <br>Supported Scopes: strategic_region",
			"is_state_religion": "Checks if the religion is the state religion in a country<br>is_accepted_religion = <country><br>Traits: country scope<br>Supported Scopes: religion<br>Supported Targets: country",
			"shares_heritage_trait_with_state_religion": "Checks if the religion shares any trait marked as 'religion_group' with a country's religion<br>shares_heritage_trait_with_state_religion = <country><br>Traits: country scope<br>Supported Scopes: religion<br>Supported Targets: country",
			"shares_trait_with_state_religion": "Checks if the religion shares any trait with a country's state religion<br>shares_trait_with_state_religion = <country><br>Traits: country scope<br>Supported Scopes: religion<br>Supported Targets: country",
			"literacy_rate": "Checks if a pop, state or country has a certain amount of literacy<br>literacy = value<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country, pop, state",
			"any_supporting_character": "Iterate through all characters that support the scoped political movement<br>any_supporting_character = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: political_movement<br>Supported Targets: character",
			"any_supporting_interest_group": "Iterate through all interest groups supporting a political movement<br>any_supporting_interest_group = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: political_movement<br>Supported Targets: interest_group",
			"is_political_movement_type": "Check if a political movement is a particular type<br>is_political_movement_type = movement_to_enact<br>Supported Scopes: political_movement",
			"is_revolutionary_movement": "Check whether the scoped political movement is causing a brewing revolution in the country<br>is_revolutionary_movement = yes/no<br>Traits: yes/no <br>Supported Scopes: political_movement",
			"political_movement_radicalism": "Compare radicalism of political movement<br>political_movement_radicalism > 50<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: political_movement",
			"political_movement_support": "Compare support of political movement<br>political_movement_support > 50<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: political_movement",
			"any_scope_interest_marker": "Iterate through all interest markers in a: country, strategic region<br>any_scope_interest_marker = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country, strategic_region<br>Supported Targets: interest_marker",
			"has_port": "Check if state has at least one port<br>has_port = yes/no<br>Traits: yes/no <br>Supported Scopes: country, market, state",
			"has_modifier": "Check if a supported scope has a certain timed modifier<br>Supported scopes: Country, Character, State, Building, InterestGroup, PoliticalMovement, Institution, Front<br>has_modifier = <key><br>Supported Scopes: country, building, character, front, institution, interest_group, political_movement, state",
			"building_has_goods_shortage": "Check if building has a shortage of any of its inputs<br>building_has_goods_shortage = yes/no<br>Traits: yes/no <br>Supported Scopes: building",
			"can_queue_building_levels": "Checks if the building's owner could queue the provided number of additional levels without hitting a level or resource potential cap<br>can_queue_building_levels = number<br>Supported Scopes: building",
			"cash_reserves_available": "Evaluates a production building's available cash reserves<br>cash_reserves_available > 25000<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: building",
			"cash_reserves_ratio": "Evaluates a production building's available cash reserve ratio compared to its maximum<br>Returns 1 if the building has no maximum cash reserves<br>cash_reserves_ratio > 0.2<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: building",
			"earnings": "Compare a building's current annual earnings per employee<br>earnings >= 10<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: building",
			"has_active_production_method": "Checks if a scoped building has the specified production method active<br>has_active_production_method = key<br>Supported Scopes: building",
			"has_employee_slots_filled": "Checks whether the amount of employees of a certain poptype are above or below a given percentage of the total amount the building can currently hire. I.e. if a building is at 80% (given as 0.8) of its current hiring capacity for Shopkeepers, for example.<br>has_employee_slots_filled = { pop_type = X percent = Y }<br>Where X is a pop type and Y is a fixed point<br>Supported Scopes: building",
			"has_failed_hires": "Checks if a building failed to hire someone last week<br>has_failed_hires = yes/no<br>Traits: yes/no <br>Supported Scopes: building",
			"is_buildable": "Check if a building is buildable = yes (default)<br>is_buildable = yes/no<br>Traits: yes/no <br>Supported Scopes: building",
			"is_building_group": "True if scope is a building of given group<br>building_group = building<br>Supported Scopes: building",
			"is_building_type": "True if scope is a building of given type<br>is_building_type = building<br>Supported Scopes: building",
			"is_government_funded": "Check if a building is is_government_funded<br>is_government_funded = yes/no<br>Traits: yes/no <br>Supported Scopes: building",
			"is_subsidized": "Check if a building is being subsidized<br>is_subsidized = yes/no<br>Traits: yes/no <br>Supported Scopes: building",
			"is_subsistence_building": "Check if a building is a subsistence building<br>is_subsistence_building = yes/no<br>Traits: yes/no <br>Supported Scopes: building",
			"is_under_construction": "Checks if building is under construction<br>is_under_construction = bool<br>Traits: yes/no <br>Supported Scopes: building",
			"occupancy": "Evaluates a building's current occupancy<br>occupancy < 0.25<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: building",
			"weekly_profit": "Checks whether the profits the building has made this week are above or below a given value<br>weekly_profit >= 20.0<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: building",
			"any_preferred_law": "Iterate through all active and possible laws in an interest group's country, ordered by how much they prefer that law<br>any_preferred_law = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: interest_group<br>Supported Targets: law",
			"has_party": "True if IG scope has a party<br>has_party = bool<br>Traits: yes/no <br>Supported Scopes: interest_group",
			"ig_approval": "Compare to scoped interest group approval<br>Usages: ig_approval > 2, ig_approval < happy<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: interest_group",
			"ig_clout": "Compare to scoped interest group's clout<br>ig_clout >= 0.2<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: interest_group",
			"ig_government_power_share": "Compare to scoped interest group's political strength divided by total government political strength<br>ig_government_power_share >= 0.5<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: interest_group",
			"interest_group_population": "Compares population number in an interest group<br>interest_group_population > 1000<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: interest_group",
			"interest_group_population_percentage": "Compares percentage of population in an interest group<br>interest_group_population_percentage > 0.2<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: interest_group",
			"interest_group_supports_political_movement": "Checks whether the scoped interest group supports a political movement<br>interest_group_supports_political_movement = yes/no<br>Traits: yes/no <br>Supported Scopes: interest_group",
			"is_being_bolstered": "Check if scoped ig is being bolstered<br>is_being_bolstered = <yes>/<no><br>Traits: yes/no <br>Supported Scopes: interest_group",
			"is_being_suppressed": "Check if scoped ig is being suppressed<br>is_being_suppressed = <yes>/<no><br>Traits: yes/no <br>Supported Scopes: interest_group",
			"is_in_government": "True if IG scope is in the government<br>is_in_government = bool<br>Traits: yes/no <br>Supported Scopes: interest_group",
			"is_insurrectionary": "True if IG scope is contributing to a brewing revolution<br>is_insurrectionary = bool<br>Traits: yes/no <br>Supported Scopes: interest_group",
			"is_marginal": "True if IG scope is marginal<br>is_marginal = bool<br>Traits: yes/no <br>Supported Scopes: interest_group",
			"is_member_of_party": "Checks if Interest Group is a member of target party<br>is_member_of_party = <party><br>Traits: party scope<br>Supported Scopes: interest_group<br>Supported Targets: party",
			"is_powerful": "True if IG scope is influential<br>is_powerful = bool<br>Traits: yes/no <br>Supported Scopes: interest_group",
			"is_same_interest_group_type": "Checks if Interest Group is of the same IG type as target<br>is_interest_group_type = scope:neighbor_leading_ig<br>Traits: interest_group scope<br>Supported Scopes: interest_group<br>Supported Targets: interest_group",
			"is_strongest_ig_in_government": "Checks whether the scoped interest group has the most clout out of all interest groups in government<br>is_strongest_ig_in_government = yes/no<br>Traits: yes/no <br>Supported Scopes: interest_group",
			"most_powerful_strata": "Compares an interest groups most powerful strata<br>Supported Scopes: interest_group",
			"arable_land": "Check arable land in state<br>arable_land > 10<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: state",
			"available_jobs": "Checks the state's number of available jobs in non-subsistence buildings<br>available_jobs > 10000<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: state",
			"can_activate_production_method": "Checks if the building of a particular type in scoped state is able to active the specified production method<br>can_activate_production_method = { building_type = <key> production_method = <key> }<br>Supported Scopes: state",
			"culture_percent_state": "Checks that a state's population has a certain percentage of a specific culture<br>scope:example_state = {<br>  culture_percent_state = {<br>    target = cu:dixie<br>    value >= 0.2<br>  }<br>}<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: state",
			"devastation": "Compares the devastation of a given state<br>devastation > 5<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: state",
			"free_arable_land": "Check free arable land in state<br>free_arable_land > 0<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: state",
			"has_assimilating_pops": "Check if a state has any pops currently in the process of assimilating.<br>Traits: yes/no <br>Supported Scopes: state",
			"has_claim_by": "Checks if a state is claimed by a country<br>any_state = {<br>	owner = root<br>	has_claim_by = c:MEX<br>}<br>Traits: country scope<br>Supported Scopes: state<br>Supported Targets: country",
			"has_converting_pops": "Check if a state has any pops currently in the process of converting.<br>Traits: yes/no <br>Supported Scopes: state",
			"has_decree": "Checks if scope state has a particular type of decree<br>has_decree = <key><br>Supported Scopes: state",
			"has_potential_resource": "Checks if the specificed building group is allowed in the scoped state. Used to check if a state can potentially produce a resource<br>has_potential_resource = bg_rubber_plantations<br>Supported Scopes: state",
			"has_state_trait": "Checks if scoped state region has a certain trait<br>has_state_trait = key<br>Supported Scopes: state",
			"ig_state_pol_strength_share": "True if IG in scope has scripted political strength in state<br>ig_state_pol_strength_share = {<br>	target = scope:target_ig<br>	value = 0.3<br>}<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: state",
			"incorporation_progress": "Check incorporation progress in state<br>incorporation_progress > 0.25<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: state",
			"is_capital": "Check if state is the capital of the owner = bool<br>Traits: yes/no <br>Supported Scopes: state",
			"is_coastal": "Check if state borders a (non-impassable) sea region<br>is_coastal = yes/no<br>Traits: yes/no <br>Supported Scopes: state",
			"is_homeland_of_country_cultures": "Checks if state is homeland of any of the target country's primary cultures<br>is_homeland_of_country_cultures = <country><br>Traits: country scope<br>Supported Scopes: state<br>Supported Targets: country",
			"is_in_revolt": "Check if a state has any chance to split off into a revolutionary or seceding country<br>is_in_revolt = yes/no.<br>Traits: yes/no <br>Supported Scopes: state",
			"is_incorporated": "Check if state is incorporated = bool<br>Traits: yes/no <br>Supported Scopes: state",
			"is_isolated_from_market": "Check if a state is isolated from its market<br>Traits: yes/no <br>Supported Scopes: state",
			"is_largest_state_in_region": "Check if state is the largest in the state region = bool<br>Traits: yes/no <br>Supported Scopes: state",
			"is_mass_migration_target": "Mass migration target is state.<br>any_state = { limit = { owner = ROOT is_mass_migration_target = yes } }<br>Traits: yes/no <br>Supported Scopes: state",
			"is_production_method_active": "Checks if the building of a particular type in scoped state has the specified production method active<br>is_production_method_active = { building_type = <key> production_method = <key> }<br>Supported Scopes: state",
			"is_sea_adjacent": "Check if state borders a sea region (regular or impassable)<br>is_sea_adjacent = yes/no<br>Traits: yes/no <br>Supported Scopes: state",
			"is_slave_state": "Check if a state employs or has the potential to employ slaves.<br>Traits: yes/no <br>Supported Scopes: state",
			"is_split_state": "Checks if the scoped state is a split state.<br>scope:example_state = { is_split_state = yes }<br>Traits: yes/no <br>Supported Scopes: state",
			"is_strategic_objective": "Checks if the scoped State is a Strategic Objective of a Country<br>is_strategic_objective = <country><br>Traits: country scope<br>Supported Scopes: state<br>Supported Targets: country",
			"is_target_of_wargoal": "Checks if state is target of any wargoal in wars involving a specific country<br>has_war_goal = <country><br>Traits: country scope<br>Supported Scopes: state<br>Supported Targets: country",
			"is_treaty_port": "Checks if the scoped state is a treaty port<br>is_treaty_port = yes/no<br>Traits: yes/no <br>Supported Scopes: state",
			"is_under_colonization": "Check if state is under colonization<br>is_under_colonization = yes/no<br>Traits: yes/no <br>Supported Scopes: state",
			"loyalty": "Compares the loyalty in a given state, i.e. the fraction of Loyalists<br>loyalty > 0.2<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: state",
			"market_access": "Checks the market access of the scoped state<br>market_access > 0.8<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: state",
			"most_prominent_revolting_interest_group": "Checks if the most prominent revolting interest group in the scoped state has the given interest group type. Evaluates false if the scoped state is not in revolt.<br>most_prominent_revolting_interest_group = ig_landowners<br>Supported Scopes: state",
			"pollution_generation": "Compare total pollution generation across all buildings in the state<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: state",
			"relative_infrastructure": "Compares the infrastructure to infrastructure usage of a state<br>relative_infrastructure > 1.1<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: state",
			"religion_percent_state": "Checks that a state's population has a certain percentage of a specific religion<br>scope:example_state = {<br>  religion_percent_state = {<br>    target = rel:catholic<br>    value <= 0.8<br>  }<br>}<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: state",
			"state_has_goods_shortage": "Check if state has a shortage on any of its building inputs<br>state_has_goods_shortage = yes/no<br>Traits: yes/no <br>Supported Scopes: state",
			"state_population": "Checks the total population of the scoped state<br>state_population <= 250000<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: state",
			"state_unemployment_rate": "Checks the unemployment rate (percentage) in the scoped state<br>state_unemployment_rate > 0.1<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: state",
			"tax_capacity": "Checks the taxation capacity of the scoped state<br>tax_capacity > 50<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: state",
			"tax_capacity_usage": "Checks the taxation capacity usage of the scoped state<br>tax_capacity_usage > 50<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: state",
			"total_urbanization": "Compares the total urbanization of a given state/ntotal_urbanization > 5<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: state",
			"turmoil": "Compares the turmoil in a given state, i.e. the fraction of Radicals<br>turmoil > 0.2<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: state",
			"any_scope_front": "Iterate through all Fronts related to the scoped War<br>any_scope_front = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: war<br>Supported Targets: front",
			"has_war_exhaustion": "Checks the war exhaustion of the target country in the scoped war<br>has_war_exhaustion = { target = c:GBR value > 50 }<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: war",
			"has_war_goal": "Checks if war has a certain war goal type<br>has_war_goal = return_state<br>Supported Scopes: war",
			"has_war_support": "Checks the war support of the target country in the scoped war<br>has_war_support = { target = c:GBR value > 50 }<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: war",
			"is_war_participant": "Check if the target country is participant in a war<br>Traits: country scope<br>Supported Scopes: war<br>Supported Targets: country",
			"is_warleader": "Check if country is warleader in war<br>Traits: country scope<br>Supported Scopes: war<br>Supported Targets: country",
			"num_casualties": "Checks the number of total casualties in the scoped war<br>num_casualties >= 5000<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: war",
			"num_country_casualties": "checks the number of casualties for a specific country in the scoped war<br>num_country_casualties = { target = country value < 5000 }<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: war",
			"num_country_dead": "checks the number of dead for a specific country in the scoped war<br>num_country_dead = { target = country value < 5000 }<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: war",
			"num_country_wounded": "checks the number of wounded for a specific country in the scoped war<br>num_country_wounded = { target = country value < 5000 }<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: war",
			"num_dead": "Checks the number of total dead in the scoped war<br>num_dead >= 5000<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: war",
			"num_wounded": "Checks the number of total wounded in the scoped war<br>num_wounded >= 5000<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: war",
			"war_has_active_peace_deal": "True if the war has a proposed peace deal<br>war_has_active_peace_deal = bool<br>Traits: yes/no <br>Supported Scopes: war",
			"any_neighbouring_state": "Iterate through all states neighbouring a state region<br>any_neighbouring_state = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country, state, state_region, strategic_region<br>Supported Targets: state",
			"can_be_enacted": "Checks if a law could be enacted by its country, considering its current situation<br>can_be_enacted = yes<br>Traits: yes/no <br>Supported Scopes: law",
			"law_approved_by": "Checks whether the scoped law is approved by an interest group<br>law_approved_by = ig_rural_folk<br>Supported Scopes: law",
			"any_scope_building": "Iterate through all buildings in a: state, country<br>any_scope_building = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country, state<br>Supported Targets: building",
			"any_scope_culture": "Iterate through all cultures in the scope<br>any_scope_culture = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country, state<br>Supported Targets: culture",
			"loyalist_fraction": "Compares loyalist fraction in pops in state or country, all parameters except value are optional<br>loyalist_fraction = { value = x pop_type = <key> strata = <key> culture = <key/scope> religion = <key/scope> }<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country, state",
			"radical_fraction": "Compares radical fraction in pops in state or country, all parameters except value are optional<br>radical_fraction = { value = x pop_type = <key> strata = <key> culture = <key/scope> religion = <key/scope> }<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: country, state",
			"is_revolutionary": "Check if the country is revolutionary<br>Traits: yes/no <br>Supported Scopes: country, interest_group",
			"has_ideology": "Check if scoped object has ideology<br>Supported Scopes: character, interest_group",
			"is_interest_group_type": "Checks if Interest Group is of a certain type<br>Can also be used on characters directly<br>is_interest_group_type = x<br>Supported Scopes: character, interest_group",
			"law_stance": "Compares the stance of the scoped character or interest group about the specified law<br>Supported Scopes: character, interest_group",
			"any_combat_units": "Iterate through all combat units of input scope<br>any_combat_units = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: building, character<br>Supported Targets: combat_unit",
			"contains_capital_of": "Checks if scoped state region contains the capital of target tag<br>contains_capital_of = country scope/tag<br>Supported Scopes: state_region",
			"is_homeland": "Checks if scoped state region is a homeland of target culture<br>is_homeland = culture scope/name<br>Supported Scopes: state_region",
			"is_state_region_land": "Check if the state region is on land<br>Traits: yes/no <br>Supported Scopes: state_region",
			"pollution_amount": "Compare state region pollution<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: state_region",
			"remaining_undepleted": "Check remaining amount of resource, like gold mines in a state<br>remaining_undepleted = {<br>	type = bg_gold_mining<br>	amount > 1<br>}<br>Traits: &lt;, &le;, =, !=, &gt;, &ge;<br>Supported Scopes: state_region",
			"any_primary_culture": "Primary cultures of the scoped country or country definition<br>any_primary_culture = { <count=num/all> / <percent=fixed_point> triggers }<br>Supported Scopes: country, country_definition, state<br>Supported Targets: culture",
		}
		self.ScopesList = {
			"combat_width": "Scope to combat width multiplier of scope province<br>Input Scopes: province<br>Output Scopes: value",
			"naval_hq": "Returns local navy HQ<br>Input Scopes: province<br>Output Scopes: hq",
			"momentum": "Get the scoped party's raw momentum<br>Input Scopes: party<br>Output Scopes: value",
			"type": "Scope from an object to its type<br>Input Scopes: building, commander_order, institution, interest_group, law<br>Output Scopes: building_type, commander_order_type, institution_type, interest_group_type, law_type",
			"goal_value": "Scope to the journal entry's goal value<br>Input Scopes: journalentry<br>Output Scopes: value",
			"battle": "Scope from a battle side to the battle itself<br>Input Scopes: battle_side<br>Output Scopes: battle",
			"province": "Scope from a battle side to the province in which the battle is being fought<br>Input Scopes: battle_side<br>Output Scopes: province",
			"initiator": "Scope to the initiator of the object<br>Input Scopes: diplomatic_play<br>Output Scopes: country",
			"war": "Scope from a diplomatic play to its war<br>Input Scopes: diplomatic_play<br>Output Scopes: war",
			"level": "Scope to the level of an object<br>Supported types: trade route, building<br>Input Scopes: building, trade_route<br>Output Scopes: value",
			"investment": "Scope to current investment level in an institution (example: investment < investment_max)<br>Input Scopes: institution<br>Output Scopes: value",
			"investment_max": "Scope to the country's current maximum investment level in an institution (example: investment < investment_max)<br>Input Scopes: institution<br>Output Scopes: value",
			"pop_weight_modifier_scale": "Get the Pop's weight modifier scale multiplier<br>Input Scopes: pop<br>Output Scopes: value",
			"workplace": "Scope to the workplace of a pop<br>Input Scopes: pop<br>Output Scopes: building",
			"owner": "Scope to the owner country of object<br>Input Scopes: country, building, character, combat_unit, decree, institution, interest_marker, interest_group, journalentry, law, market, market_goods, pop, province, state, trade_route<br>Output Scopes: country",
			"num_garrison_units": "Returns the number of units garrisoned in a HQ<br>Input Scopes: hq<br>Output Scopes: value",
			"array_define": "Reference the value of a numeric value in an array define: array_define:Namespace|Name|Index. Index is 0-based.<br>Requires Data: yes<br>Global Link: yes<br>Output Scopes: value",
			"c": "Scope to the country with specified tag<br>Requires Data: yes<br>Global Link: yes<br>Output Scopes: country",
			"cd": "Scope to the country definition with specified tag<br>Requires Data: yes<br>Global Link: yes<br>Output Scopes: country_definition",
			"compare_complex_value": "A comparison trigger that needs a parsable string parameter that will return its value in the context it is used eg: scope:root.number_of(armies)<br>Wild Card: yes<br>Requires Data: yes<br>Output Scopes: value",
			"compare_value": "A comparison trigger that will return its value in the context it is used eg: root.gold<br>Wild Card: yes<br>Output Scopes: value",
			"cu": "Scope to the culture with specified key<br>Requires Data: yes<br>Global Link: yes<br>Output Scopes: culture",
			"define": "Reference the value of a numeric or color define: define:Namespace|Name<br>Requires Data: yes<br>Global Link: yes<br>Output Scopes: value",
			"flag": "Flag literals eg: flag:the_boss<br>Requires Data: yes<br>Global Link: yes<br>Output Scopes: flag",
			"g": "Scope to the goods with specified key<br>Requires Data: yes<br>Global Link: yes<br>Output Scopes: goods",
			"global_gdp": "Get the global yearly predicted GDP<br>Output Scopes: value",
			"global_var": "Reference a previous set global variable via its name eg: global_var:important_thing<br>Requires Data: yes<br>Global Link: yes",
			"i": "Scope to ideology specified by key<br>Requires Data: yes<br>Global Link: yes<br>Output Scopes: ideology",
			"ideology": "Scope to a ideology from its name (ideology:ideology_anarchist)<br>Requires Data: yes<br>Output Scopes: ideology",
			"ig_type": "Scope to an interest group type<br>Requires Data: yes<br>Global Link: yes<br>Output Scopes: interest_group_type",
			"infamy_threshold": "Scope to infamy level threshold for comparison purposes (infamy_threshold:infamous)<br>Requires Data: yes<br>Output Scopes: value",
			"is_setup": "Scope to true/false if gamestate is being initialized!<br>Global Link: yes<br>Output Scopes: value",
			"je_tutorial": "Scope to the active tutorial lesson's journal entry (do not use this outside tutorial)<br>Output Scopes: journalentry",
			"law_type": "Scope to a law type from its name (law_type:law_protected_speech)<br>Requires Data: yes<br>Output Scopes: law_type",
			"local_var": "Reference a previous set local variable via its name eg: local_var:person_of_interest<br>Requires Data: yes<br>Global Link: yes",
			"named_script_value": "A script value that will calculate and returns its value in the context it is used<br>Wild Card: yes<br>Output Scopes: value, color",
			"no": "Boolean literal for false values<br>Global Link: yes<br>Output Scopes: bool",
			"p": "Scope to province specified by hex key<br>Requires Data: yes<br>Global Link: yes<br>Output Scopes: province",
			"player": "Scope to the player (do not use this outside tutorial)<br>Output Scopes: country",
			"pop_type": "Scope to a pop type from its name (pop_type:laborers)<br>Requires Data: yes<br>Output Scopes: pop_type",
			"prev": "The previous scope<br>Global Link: yes",
			"rank_value": "Scope to rank value of a particular country rank (rank_value:great_power)<br>Requires Data: yes<br>Output Scopes: value",
			"rel": "Scope to the religion with specified key<br>Requires Data: yes<br>Global Link: yes<br>Output Scopes: religion",
			"relations_threshold": "Scope to relations threshold level for comparison purposes (relations_threshold:warm)<br>Requires Data: yes<br>Output Scopes: value",
			"root": "The head of the current top scope eg: reciever of an event, taker of a decision<br>Global Link: yes",
			"s": "Scope to state region specified by key<br>Requires Data: yes<br>Global Link: yes<br>Output Scopes: state_region",
			"scope": "Reference a previously saved scope via its name eg: scope:target<br>Requires Data: yes<br>Global Link: yes",
			"sr": "Scope to the strategic region of specified key<br>Requires Data: yes<br>Global Link: yes<br>Output Scopes: strategic_region",
			"tension_threshold": "Scope to tension level threshold for comparison purposes (tension_threshold:warm)<br>Requires Data: yes<br>Output Scopes: value",
			"this": "The current scope",
			"value": "A numeric literal value eg: 1, 5.2, -6<br>Wild Card: yes<br>Global Link: yes<br>Output Scopes: value",
			"var": "Reference a previous set variable via its name eg: var:mortal_enemy<br>Requires Data: yes",
			"yes": "Boolean literal for true values<br>Global Link: yes<br>Output Scopes: bool",
			"goods": "Scope to the goods traded by a trade route<br>Input Scopes: market_goods, trade_route<br>Output Scopes: goods",
			"slaves_role": "Scope from building type to it's slaves role pop type<br>Input Scopes: building_type<br>Output Scopes: pop_type",
			"active_law": "Scope to the scoped country's active law in the named law group (active_law:lawgroup_trade_policy)<br>Requires Data: yes<br>Input Scopes: country<br>Output Scopes: law",
			"ai_army_comparison": "Scope to comparative army strength between two countries (example: value = ai_army_comparison:root)<br>Requires Data: yes<br>Input Scopes: country<br>Output Scopes: value",
			"ai_gdp_comparison": "Scope to comparative GDP between two countries (example: value = ai_army_comparison:root)<br>Requires Data: yes<br>Input Scopes: country<br>Output Scopes: value",
			"ai_ideological_opinion": "Scope to AI ideological opinion of scope country on target country (example: value = ai_ideological_opinion:root)<br>Requires Data: yes<br>Input Scopes: country<br>Output Scopes: value",
			"ai_navy_comparison": "Scope to comparative navy strength between two countries (example: value = ai_navy_comparison:root)<br>Requires Data: yes<br>Input Scopes: country<br>Output Scopes: value",
			"army_size": "Number of battalions of scope country, excluding currently raised conscripts.<br>army_size >= 20<br>army_size > c:FRA.army_size<br>Input Scopes: country<br>Output Scopes: value",
			"army_size_including_conscripts": "Number of battalions of scope country, including currently raised conscripts.<br>army_size_including_conscripts >= 20<br>army_size_including_conscripts > c:FRA.army_size_including_conscripts<br>Input Scopes: country<br>Output Scopes: value",
			"building_levels": "Get the total number of non-subsistence building levels of the scoped country<br>Input Scopes: country<br>Output Scopes: value",
			"cached_ai_coastal_population": "Scope to total coastal population recorded in AI spending variables (example: value = cached_ai_coastal_population)<br>Input Scopes: country<br>Output Scopes: value",
			"cached_ai_incorporated_coastal_population": "Scope to total incorporated coastal population recorded in AI spending variables (example: value = cached_ai_incorporated_coastal_population)<br>Input Scopes: country<br>Output Scopes: value",
			"cached_ai_incorporated_population": "Scope to total incorporated population recorded in AI spending variables (example: value = cached_ai_incorporated_population)<br>Input Scopes: country<br>Output Scopes: value",
			"cached_ai_overseas_subject_population": "Scope to total population in direct non-adjacent subjects recorded in AI spending variables (example: value = cached_ai_overseas_subject_population)<br>Input Scopes: country<br>Output Scopes: value",
			"cached_ai_subject_population": "Scope to total population in direct subjects recorded in AI spending variables (example: value = cached_ai_subject_population)<br>Input Scopes: country<br>Output Scopes: value",
			"cached_ai_total_population": "Scope to total population recorded in AI spending variables (example: value = cached_ai_total_population)<br>Input Scopes: country<br>Output Scopes: value",
			"cached_ai_unincorporated_coastal_population": "Scope to total unincorporated coastal population recorded in AI spending variables (example: value = cached_ai_unincorporated_coastal_population)<br>Input Scopes: country<br>Output Scopes: value",
			"cached_ai_unincorporated_population": "Scope to total unincorporated population recorded in AI spending variables (example: value = cached_ai_unincorporated_population)<br>Input Scopes: country<br>Output Scopes: value",
			"capital": "Scope to the capital state of a country<br>Input Scopes: country<br>Output Scopes: state",
			"civil_war_origin_country": "Scope to the origin country of a civil war country<br>Input Scopes: country<br>Output Scopes: country",
			"colonial_growth_per_colony": "Scope to the country's colonial growth per colony value (example: colonial_growth_per_colony > 0)<br>Input Scopes: country<br>Output Scopes: value",
			"country_definition": "Scope to country's definition<br>Input Scopes: country<br>Output Scopes: country_definition",
			"credit": "Scope to the current amount of max credit the country can take<br>Input Scopes: country<br>Output Scopes: value",
			"currently_enacting_law": "Scope from a country to the law that they're currently enacting<br>Input Scopes: country<br>Output Scopes: law",
			"decree_cost": "Scope to a country's cost for a certain decree<br>authority > decree_cost:decree_road_maintaintenance<br>Requires Data: yes<br>Input Scopes: country<br>Output Scopes: value",
			"get_ruler_for": "Scopes from country to a character that would be ruler, under the given transfer of power type<br>get_ruler_for:parliamentary_elective = { effects... }<br>Requires Data: yes<br>Input Scopes: country<br>Output Scopes: character",
			"government_size": "Get the scoped country's current number of Parties & independent IGs in government<br>Input Scopes: country<br>Output Scopes: value",
			"heir": "Scope to the heir of a country<br>Input Scopes: country<br>Output Scopes: character",
			"ig": "Scope to the interest group of specified key belonging to the country<br>Requires Data: yes<br>Input Scopes: country<br>Output Scopes: interest_group",
			"income": "Get the current weekly income of the scoped country<br>Input Scopes: country<br>Output Scopes: value",
			"infamy": "Scope to infamy of scope country (example: infamy >= 2)<br>Input Scopes: country<br>Output Scopes: value",
			"institution": "Scope to a country's institution from its name (institution:institution_health_system)<br>Requires Data: yes<br>Input Scopes: country<br>Output Scopes: institution",
			"je": "Scope to the journal entry of specified key belonging to the country<br>Requires Data: yes<br>Input Scopes: country<br>Output Scopes: journalentry",
			"legitimacy": "Scope to the current amount of legitimacy in country<br>Input Scopes: country<br>Output Scopes: value",
			"market_capital": "Scope to the market capital of a country<br>Input Scopes: country<br>Output Scopes: state",
			"navy_size": "Number of flotillas of scope country.<br>navy_size >= 20<br>navy_size > c:FRA.navy_size<br>Input Scopes: country<br>Output Scopes: value",
			"num_active_declared_interests": "Scope to the number of active declared interests a country has<br>num_active_declared_interests > 5<br>Input Scopes: country<br>Output Scopes: value",
			"num_active_interests": "Scope to the number of active interests a country has<br>num_active_interests > 5<br>Input Scopes: country<br>Output Scopes: value",
			"num_active_natural_interests": "Scope to the number of active natural interests a country has<br>num_active_natural_interests > 5<br>Input Scopes: country<br>Output Scopes: value",
			"num_active_plays": "Get the current number of active Diplomatic Plays the scoped country started<br>Input Scopes: country<br>Output Scopes: value",
			"num_admirals": "Scope to the country's number of admirals<br>Input Scopes: country<br>Output Scopes: value",
			"num_alliances": "Scope to the number of alliances target country has in total (example: num_alliances:root >= 2)<br>Input Scopes: country<br>Output Scopes: value",
			"num_alliances_and_defensive_pacts_with_allies": "Scope to the number of alliances target country has with allies of scope country (example: num_alliances_and_defensive_pacts_with_allies:root >= 2)<br>Requires Data: yes<br>Input Scopes: country<br>Output Scopes: value",
			"num_alliances_and_defensive_pacts_with_rivals": "Scope to the number of alliances & defensive pacts target country has with rivals of scope country (example: num_alliances_and_defensive_pacts_with_rivals:root >= 2)<br>Requires Data: yes<br>Input Scopes: country<br>Output Scopes: value",
			"num_characters": "Scope to the country's number of characters<br>Input Scopes: country<br>Output Scopes: value",
			"num_colony_projects": "Get the scoped country's current number of incomplete / in progress colony projects<br>Input Scopes: country<br>Output Scopes: value",
			"num_commanders": "Scope to the country's number of commanders<br>Input Scopes: country<br>Output Scopes: value",
			"num_convoys_available": "Get the scoped country's current number of available convoys<br>Input Scopes: country<br>Output Scopes: value",
			"num_convoys_required": "Get the scoped country's current number of required convoys<br>Input Scopes: country<br>Output Scopes: value",
			"num_declared_interests": "Scope to the number of declared interests a country has (including inactive)<br>num_declared_interests > 5<br>Input Scopes: country<br>Output Scopes: value",
			"num_defensive_pacts": "Scope to the number of defensive pacts target country has in total (example: num_defensive_pacts >= 2)<br>Input Scopes: country<br>Output Scopes: value",
			"num_generals": "Scope to the country's number of generals<br>Input Scopes: country<br>Output Scopes: value",
			"num_income_transfer_pacts": "Scope to the number of income-transfering (to others) actions target country has in total (example: num_income_transfer_pacts >= 2)<br>Input Scopes: country<br>Output Scopes: value",
			"num_incorporated_states": "Get the scoped country's current number of incorporated states<br>Input Scopes: country<br>Output Scopes: value",
			"num_interests": "Scope to the number of interests a country has (including inactive)<br>num_interests > 5<br>Input Scopes: country<br>Output Scopes: value",
			"num_mutual_trade_route_levels_with_country": "Scope to the number of mutual trade route levels the two countries have to each others' owned markets (example: num_mutual_trade_routes_with_country:root >= 2)<br>Requires Data: yes<br>Input Scopes: country<br>Output Scopes: value",
			"num_natural_interests": "Scope to the number of natural interests a country has (including inactive)<br>num_natural_interests > 5<br>Input Scopes: country<br>Output Scopes: value",
			"num_obligations_earned": "Scope from a country to the number of obligations others owe them (=which they have earned)<br>Input Scopes: country<br>Output Scopes: value",
			"num_pending_events": "Scope to the number of pending events in scope country<br>num_pending_events > 0<br>Input Scopes: country<br>Output Scopes: value",
			"num_pending_events": "Scope to the number of pending events of given category in scope country<br>num_pending_events:enactment > 0<br>Requires Data: yes<br>Input Scopes: country<br>Output Scopes: value",
			"num_politicians": "Scope to the country's number of politicians<br>Input Scopes: country<br>Output Scopes: value",
			"num_positive_relations": "Get the current number of countries with positive Relation with the scoped country<br>Input Scopes: country<br>Output Scopes: value",
			"num_queued_constructions": "Scope to the number of queued constructions target country has in total (example: num_queued_constructions >= 2)<br>Input Scopes: country<br>Output Scopes: value",
			"num_queued_government_constructions": "Scope to the number of queued government constructions target country has in total (example: num_queued_government_constructions >= 2)<br>Input Scopes: country<br>Output Scopes: value",
			"num_queued_private_constructions": "Scope to the number of queued private constructions target country has in total (example: num_queued_private_constructions >= 2)<br>Input Scopes: country<br>Output Scopes: value",
			"num_rivals": "Scope to the number of rivals target country has in total (example: num_rivals >= 2)<br>Input Scopes: country<br>Output Scopes: value",
			"num_ruling_igs": "Get the scoped country's current number of IGs in government<br>Input Scopes: country<br>Output Scopes: value",
			"num_states": "Get the scoped country's current number of states<br>Input Scopes: country<br>Output Scopes: value",
			"num_trade_routes": "Get the scoped country's current number of trade routes<br>Input Scopes: country<br>Output Scopes: value",
			"num_treaty_ports": "Get the scoped country's current number of treaty ports<br>Input Scopes: country<br>Output Scopes: value",
			"num_unincorporated_states": "Get the scoped country's current number of unincorporated states<br>Input Scopes: country<br>Output Scopes: value",
			"overlord": "Scope to the direct overlord of the country in scope<br>Input Scopes: country<br>Output Scopes: country",
			"py": "Scope to the active party of specified key belonging to the country<br>Requires Data: yes<br>Input Scopes: country<br>Output Scopes: party",
			"relations": "Scope to relations between two countries (example: relations:root >= 2)<br>Requires Data: yes<br>Input Scopes: country<br>Output Scopes: value",
			"ruler": "Scope to the ruler of a country<br>Input Scopes: country<br>Output Scopes: character",
			"technology_being_researched": "Scope to the current technology a country is researching<br>Input Scopes: country<br>Output Scopes: technology",
			"techs_researched": "Scope to the current amount of techs researched of a country<br>Input Scopes: country<br>Output Scopes: value",
			"tension": "Scope to tension between two countries (example: tension:root >= 2)<br>Requires Data: yes<br>Input Scopes: country<br>Output Scopes: value",
			"top_overlord": "Scope to the top overlord of the country in scope<br>Input Scopes: country<br>Output Scopes: country",
			"ideology": "Scope to the ideology of the scoped character (example: scope:example_character = { ideology = { save_scope_as = example_ideology } } )<br>Input Scopes: character<br>Output Scopes: ideology",
			"interest_group": "Scope to the interest group of the character!<br>Input Scopes: character<br>Output Scopes: interest_group",
			"interest_group_type": "Scope to the type of the scoped character's interest group<br>Input Scopes: character<br>Output Scopes: interest_group_type",
			"num_battalions": "Returns the number of battalions under a commander<br>Input Scopes: character<br>Output Scopes: value",
			"num_commanded_units": "Scope to the current number of combat units commanded by a character<br>Input Scopes: character<br>Output Scopes: value",
			"num_mobilized_battalions": "Returns the number of fully mobilized units under a General<br>Input Scopes: character<br>Output Scopes: value",
			"num_units": "Get the current of units for a commander<br>Input Scopes: character<br>Output Scopes: value",
			"num_units_not_in_battle": "Get the current of units for a commander that is NOT in battle<br>Input Scopes: character<br>Output Scopes: value",
			"opposing_commander": "Scope from a character in battle to the character on the other side of the battle<br>Input Scopes: character<br>Output Scopes: character",
			"popularity": "Get the scoped character's popularity, normally ranging between -100 and +100<br>Input Scopes: character<br>Output Scopes: value",
			"supply": "Scope to the current supply level of a character (0-1)<br>Input Scopes: character<br>Output Scopes: value",
			"market": "Scope to the market of the object<br>Input Scopes: country, building, market, market_goods, province, state, state_region<br>Output Scopes: market",
			"attacker_side": "Scope from a battle to the BattleSide corresponding to the attacker<br>Input Scopes: battle<br>Output Scopes: battle_side",
			"defender_side": "Scope from a battle to the BattleSide corresponding to the defender<br>Input Scopes: battle<br>Output Scopes: battle_side",
			"diplomatic_pact_other_country": "Scope to the other country of the diplomatic pact in scope<br>Requires Data: yes<br>Input Scopes: diplomatic_pact<br>Output Scopes: country",
			"first_country": "Scope to the first country of the diplomatic pact in scope<br>Input Scopes: diplomatic_pact<br>Output Scopes: country",
			"second_country": "Scope to the second country of the diplomatic pact in scope<br>Input Scopes: diplomatic_pact<br>Output Scopes: country",
			"mg": "Scope from a market to the MarketGoods with the specified key<br>Requires Data: yes<br>Input Scopes: market<br>Output Scopes: market_goods",
			"participants": "Get the total number of participating countries in the scoped market<br>Input Scopes: market<br>Output Scopes: value",
			"trade_center": "Scope to the trade center state of the market!<br>Input Scopes: market<br>Output Scopes: state",
			"state": "Scope to the state of the object<br>Input Scopes: building, market, pop, province<br>Output Scopes: state",
			"num_provinces": "Get the scoped entity's current number of provinces<br>scopes: state, stateregion, front<br>Input Scopes: front, state, state_region<br>Output Scopes: value",
			"controller": "Scope to the controller of the object<br>Input Scopes: province, state<br>Output Scopes: country",
			"land_hq": "Returns local land HQ<br>Input Scopes: province, state<br>Output Scopes: hq",
			"front": "Scope to the front where a battle takes place / where a character is located<br>Input Scopes: battle, character<br>Output Scopes: front",
			"political_movement": "If used in a character scope, scope to the political movement that character supports.<br>If used in a revolution civil war scope, scope to the movement that started the revolution.<br>Input Scopes: character, civil_war<br>Output Scopes: political_movement",
			"average_defense": "Returns the average defense of units on Front on the same side as Country<br>Requires Data: yes<br>Input Scopes: front<br>Output Scopes: value",
			"average_offense": "Returns the average offense of units on Front on the same side as Country<br>Requires Data: yes<br>Input Scopes: front<br>Output Scopes: value",
			"front_length": "Returns the number of provinces in Front<br>Input Scopes: front<br>Output Scopes: value",
			"num_defending_battalions": "Returns the total number of defending units on Front on the same side as Country<br>Requires Data: yes<br>Input Scopes: front<br>Output Scopes: value",
			"num_enemy_units": "Gets the number of enemy units a commander is facing on a front<br>Requires Data: yes<br>Input Scopes: front<br>Output Scopes: value",
			"num_total_battalions": "Returns the total number of units on Front on the same side as Country<br>Requires Data: yes<br>Input Scopes: front<br>Output Scopes: value",
			"num_export_trade_routes": "Get the scoped market good's current number of import trade routes owned by a market member<br>Input Scopes: market_goods<br>Output Scopes: value",
			"num_import_trade_routes": "Get the scoped market good's current number of import trade routes owned by a market member<br>Input Scopes: market_goods<br>Output Scopes: value",
			"actor_market": "Scope to the actor market of the trade route<br>Input Scopes: trade_route<br>Output Scopes: market",
			"exporter": "Scope to the exporting market of the trade route<br>Input Scopes: trade_route<br>Output Scopes: market",
			"importer": "Scope to the importing market of the trade route<br>Input Scopes: trade_route<br>Output Scopes: market",
			"target_market": "Scope to the target market of the trade route<br>Input Scopes: trade_route<br>Output Scopes: market",
			"home_country": "Scopes to the home country of an exile<br>Input Scopes: character, pop<br>Output Scopes: country",
			"region": "Scope to the strategic region of the object!<br>Input Scopes: building, diplomatic_play, interest_marker, province, state, state_region<br>Output Scopes: strategic_region",
			"building": "Scope to the related building<br>Input Scopes: combat_unit<br>Output Scopes: building",
			"commander": "Scope to the related commander<br>Input Scopes: combat_unit<br>Output Scopes: character",
			"defense": "Returns the unit's defense rating (including impact from their commander)<br>Input Scopes: combat_unit<br>Output Scopes: value",
			"demoralized": "Returns the unit's number of demoralized manpower<br>Input Scopes: combat_unit<br>Output Scopes: value",
			"manpower": "Returns the unit's manpower<br>Input Scopes: combat_unit<br>Output Scopes: value",
			"mobilization": "Returns the unit's mobilization value between 0 and 1<br>Input Scopes: combat_unit<br>Output Scopes: value",
			"morale": "Returns the unit's morale<br>Input Scopes: combat_unit<br>Output Scopes: value",
			"offense": "Returns the unit's offense rating (including impact from their commander)<br>Input Scopes: combat_unit<br>Output Scopes: value",
			"religion": "Scope to country or country definition's primary religion or pop religion<br>Input Scopes: country, character, country_definition, pop<br>Output Scopes: religion",
			"civil_war": "Scope to the civil war started by the scoped (revolutionary) political movement.<br>Input Scopes: political_movement<br>Output Scopes: civil_war",
			"desired_law": "Scope to the law the scoped political movement wants to enact/preserve.<br>scope:example_movement = { desired_law = law_type:law_serfdom }<br>Input Scopes: political_movement<br>Output Scopes: law_type",
			"active_diplomatic_play": "Scope to the diplomatic play of a country or strategic region<br>Input Scopes: country, strategic_region<br>Output Scopes: diplomatic_play",
			"target": "Scope to the target of the object<br>Input Scopes: diplomatic_play, journalentry",
			"training_rate": "Scope to the current maximum weekly training rate of a building<br>Input Scopes: building<br>Output Scopes: value",
			"player_owed_obligation_days_left": "Scope to number of days left on an obligation in diplomatic relations scope (example: obligation_days_left >= 2)<br>Input Scopes: diplomatic_relations<br>Output Scopes: value",
			"scope_relations": "Scope to relations value in diplomatic relations scope (example: scope_relations >= 2)<br>Input Scopes: diplomatic_relations<br>Output Scopes: value",
			"scope_tension": "Scope to tension value in diplomatic relations scope (example: scope_tension >= 2)<br>Input Scopes: diplomatic_relations<br>Output Scopes: value",
			"leader": "Scope to the leader of the interest group<br>Input Scopes: interest_group<br>Output Scopes: character",
			"party": "Scope to the party that an IG is supporting<br>Input Scopes: interest_group<br>Output Scopes: party",
			"b": "Scope to the building of specified key in the state<br>Requires Data: yes<br>Input Scopes: state<br>Output Scopes: building",
			"nf": "Scope to a Decree of specified key applied to the state<br>Requires Data: yes<br>Input Scopes: state<br>Output Scopes: decree",
			"population_below_expected_sol": "Scope to the current percentage of the state's population that are below their expected standard of living (0-1)<br>Input Scopes: state<br>Output Scopes: value",
			"state_region": "Scope to the state region of a state<br>Input Scopes: state<br>Output Scopes: state_region",
			"attacker_warleader": "Scope to the attacker warleader of a war<br>Input Scopes: war<br>Output Scopes: country",
			"defender_warleader": "Scope to the defender warleader of a war<br>Input Scopes: war<br>Output Scopes: country",
			"modifier": "Scope to the value of the modifier type of specified key belonging to the current object<br>Requires Data: yes<br>Input Scopes: country, building, character, interest_group, market, state<br>Output Scopes: value, bool",
			"culture": "Scope to pop's or character's culture<br>Input Scopes: character, combat_unit, pop<br>Output Scopes: culture",
			"average_expected_sol": "Get the average expected Standard of Living of the scope<br>Input Scopes: country, state<br>Output Scopes: value",
			"average_sol": "Get the average Standard of Living of the scope<br>Input Scopes: country, state<br>Output Scopes: value",
			"gdp": "Get the scoped country's yearly predicted GDP<br>Input Scopes: country, state<br>Output Scopes: value",
			"region_state": "Unknown, add something in code registration<br>Requires Data: yes<br>Input Scopes: state_region<br>Output Scopes: state",
		}
		self.EventSoundsList = {
			"event:/SFX/Events/africa/animism",
			"event:/SFX/Events/africa/city_center",
			"event:/SFX/Events/africa/construction_colony",
			"event:/SFX/Events/africa/desert_expedition",
			"event:/SFX/Events/africa/diplomats_negotiating",
			"event:/SFX/Events/africa/leader_arguing",
			"event:/SFX/Events/africa/prosperous_farm",
			"event:/SFX/Events/africa/public_protest",
			"event:/SFX/Events/africa/soldiers_breaking_protest",
			"event:/SFX/Events/asia/buddhism",
			"event:/SFX/Events/asia/confucianism_shinto",
			"event:/SFX/Events/asia/dead_cattle_poor_harvest",
			"event:/SFX/Events/asia/factory_accident",
			"event:/SFX/Events/asia/farmers_market",
			"event:/SFX/Events/asia/hinduism_sikhism",
			"event:/SFX/Events/asia/politician_parliament_motion",
			"event:/SFX/Events/asia/poor_people_moving",
			"event:/SFX/Events/asia/sepoy_mutiny",
			"event:/SFX/Events/asia/union_leader",
			"event:/SFX/Events/europenorthamerica/american_civil_war",
			"event:/SFX/Events/europenorthamerica/before_the_battle",
			"event:/SFX/Events/europenorthamerica/capitalists_meeting",
			"event:/SFX/Events/europenorthamerica/gold_prospectors",
			"event:/SFX/Events/europenorthamerica/judaism",
			"event:/SFX/Events/europenorthamerica/london_center",
			"event:/SFX/Events/europenorthamerica/native_american",
			"event:/SFX/Events/europenorthamerica/opium_smoker",
			"event:/SFX/Events/europenorthamerica/political_extremism",
			"event:/SFX/Events/europenorthamerica/rich_and_poor",
			"event:/SFX/Events/europenorthamerica/russian_serfs",
			"event:/SFX/Events/europenorthamerica/slaves_breaking_their_chains",
			"event:/SFX/Events/europenorthamerica/springtime_of_nation",
			"event:/SFX/Events/europenorthamerica/sufferage",
			"event:/SFX/Events/middleeast/battlefield_trenches",
			"event:/SFX/Events/middleeast/courtroom_upheaval",
			"event:/SFX/Events/middleeast/engineer_blueprint",
			"event:/SFX/Events/middleeast/islam",
			"event:/SFX/Events/middleeast/jungle_expedition",
			"event:/SFX/Events/middleeast/middleclass_cafe",
			"event:/SFX/Events/middleeast/oil_derricks",
			"event:/SFX/Events/middleeast/police_breaking_door",
			"event:/SFX/Events/middleeast/upperclass_party",
			"event:/SFX/Events/misc/1Character_Banner",
			"event:/SFX/Events/misc/2Characters",
			"event:/SFX/Events/southamerica/aristocrats",
			"event:/SFX/Events/southamerica/child_labor",
			"event:/SFX/Events/southamerica/christianity",
			"event:/SFX/Events/southamerica/election",
			"event:/SFX/Events/southamerica/factory_opening",
			"event:/SFX/Events/southamerica/public_figure_assassination",
			"event:/SFX/Events/southamerica/slaves_night",
			"event:/SFX/Events/southamerica/war_civilians",
			"event:/SFX/Events/unspecific/airplane",
			"event:/SFX/Events/unspecific/airship",
			"event:/SFX/Events/unspecific/arctic",
			"event:/SFX/Events/unspecific/armored_train",
			"event:/SFX/Events/unspecific/art_gallery",
			"event:/SFX/Events/unspecific/automobile",
			"event:/SFX/Events/unspecific/destruction",
			"event:/SFX/Events/unspecific/devastation",
			"event:/SFX/Events/unspecific/factory_closed",
			"event:/SFX/Events/unspecific/gears_pistons",
			"event:/SFX/Events/unspecific/iceberg_in_the_antartica",
			"event:/SFX/Events/unspecific/leader_speaking_to_a_group_of_people",
			"event:/SFX/Events/unspecific/military_parade",
			"event:/SFX/Events/unspecific/naval_battle",
			"event:/SFX/Events/unspecific/sick_people_in_a_field_hospital",
			"event:/SFX/Events/unspecific/signed_contract",
			"event:/SFX/Events/unspecific/steam_ship",
			"event:/SFX/Events/unspecific/temperance_movement",
			"event:/SFX/Events/unspecific/trains",
			"event:/SFX/Events/unspecific/vandalized_storefront",
			"event:/SFX/Events/unspecific/whaling",
			"event:/SFX/Events/unspecific/world_fair"
		}
		self.EventVideos = [
			"gfx/event_pictures/africa_animism.bk2",
			"gfx/event_pictures/africa_city_center.bk2",
			"gfx/event_pictures/africa_construction_colony.bk2",
			"gfx/event_pictures/africa_desert_expedition.bk2",
			"gfx/event_pictures/africa_diplomats_negotiating.bk2",
			"gfx/event_pictures/africa_leader_arguing.bk2",
			"gfx/event_pictures/africa_prosperous_farm.bk2",
			"gfx/event_pictures/africa_public_protest.bk2",
			"gfx/event_pictures/africa_soldiers_breaking_protest.bk2",
			"gfx/event_pictures/asia_buddhism.bk2",
			"gfx/event_pictures/asia_confucianism_shinto.bk2",
			"gfx/event_pictures/asia_dead_cattle_poor_harvest.bk2",
			"gfx/event_pictures/asia_factory_accident.bk2",
			"gfx/event_pictures/asia_farmers_market.bk2",
			"gfx/event_pictures/asia_hinduism_sikhism.bk2",
			"gfx/event_pictures/asia_politician_parliament_motion.bk2",
			"gfx/event_pictures/asia_poor_people_moving.bk2",
			"gfx/event_pictures/asia_sepoy_mutiny.bk2",
			"gfx/event_pictures/asia_union_leader.bk2",
			"gfx/event_pictures/asia_westerners_arriving.bk2",
			"gfx/event_pictures/europenorthamerica_american_civil_war.bk2",
			"gfx/event_pictures/europenorthamerica_antarctica.bk2",
			"gfx/event_pictures/europenorthamerica_art_gallery.bk2",
			"gfx/event_pictures/europenorthamerica_before_the_battle.bk2",
			"gfx/event_pictures/europenorthamerica_capitalists_meeting.bk2",
			"gfx/event_pictures/europenorthamerica_gold_prospectors.bk2",
			"gfx/event_pictures/europenorthamerica_judaism.bk2",
			"gfx/event_pictures/europenorthamerica_london_center.bk2",
			"gfx/event_pictures/europenorthamerica_native_american.bk2",
			"gfx/event_pictures/europenorthamerica_opium_smoker.bk2",
			"gfx/event_pictures/europenorthamerica_political_extremism.bk2",
			"gfx/event_pictures/europenorthamerica_rich_and_poor.bk2",
			"gfx/event_pictures/europenorthamerica_russian_serfs.bk2",
			"gfx/event_pictures/europenorthamerica_springtime_of_nations.bk2",
			"gfx/event_pictures/europenorthamerica_sufferage.bk2",
			"gfx/event_pictures/middleeast_battlefield_trenches.bk2",
			"gfx/event_pictures/middleeast_courtroom_upheaval.bk2",
			"gfx/event_pictures/middleeast_engineer_blueprint.bk2",
			"gfx/event_pictures/middleeast_islam.bk2",
			"gfx/event_pictures/middleeast_jungle_expedition.bk2",
			"gfx/event_pictures/middleeast_middleclass_cafe.bk2",
			"gfx/event_pictures/middleeast_oil_derricks.bk2",
			"gfx/event_pictures/middleeast_police_breaking_door.bk2",
			"gfx/event_pictures/middleeast_upperclass_party.bk2",
			"gfx/event_pictures/public_assasination_test.bk2",
			"gfx/event_pictures/southamerica_aristocrats.bk2",
			"gfx/event_pictures/southamerica_child_labor.bk2",
			"gfx/event_pictures/southamerica_christianity.bk2",
			"gfx/event_pictures/southamerica_election.bk2",
			"gfx/event_pictures/southamerica_factory_opening.bk2",
			"gfx/event_pictures/southamerica_public_figure_assassination.bk2",
			"gfx/event_pictures/southamerica_slave_chains.bk2",
			"gfx/event_pictures/southamerica_slaves_night.bk2",
			"gfx/event_pictures/southamerica_war_civilians.bk2",
			"gfx/event_pictures/unspecific_airPlane.bk2",
			"gfx/event_pictures/unspecific_armored_train.bk2",
			"gfx/event_pictures/unspecific_automobile.bk2",
			"gfx/event_pictures/unspecific_devastation.bk2",
			"gfx/event_pictures/unspecific_factory_closed.bk2",
			"gfx/event_pictures/unspecific_fire.bk2",
			"gfx/event_pictures/unspecific_gears_pistons.bk2",
			"gfx/event_pictures/unspecific_iceberg.bk2",
			"gfx/event_pictures/unspecific_military_parade.bk2",
			"gfx/event_pictures/unspecific_naval_battle.bk2",
			"gfx/event_pictures/unspecific_politicians_arguing.bk2",
			"gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2",
			"gfx/event_pictures/unspecific_sick_in_hospital.bk2",
			"gfx/event_pictures/unspecific_signed_contract.bk2",
			"gfx/event_pictures/unspecific_steam_ship.bk2",
			"gfx/event_pictures/unspecific_temperance_movement.bk2",
			"gfx/event_pictures/unspecific_trains.bk2",
			"gfx/event_pictures/unspecific_vandalized_storefront.bk2",
			"gfx/event_pictures/unspecific_whaling.bk2",
			"gfx/event_pictures/unspecific_world_fair.bk2",
			"gfx/event_pictures/unspecififc_airship.bk2"
		]
